

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Oct 06 21:31:57 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	dabs	1,0x7E,2
    40     0000                     
    41                           ; Version 2.20
    42                           ; Generated 12/02/2020 GMT
    43                           ; 
    44                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F877A Definitions
    73                           ; 
    74                           ; SFR Addresses
    75     0000                     	;# 
    76     0001                     	;# 
    77     0002                     	;# 
    78     0003                     	;# 
    79     0004                     	;# 
    80     0005                     	;# 
    81     0006                     	;# 
    82     0007                     	;# 
    83     0008                     	;# 
    84     0009                     	;# 
    85     000A                     	;# 
    86     000B                     	;# 
    87     000C                     	;# 
    88     000D                     	;# 
    89     000E                     	;# 
    90     000E                     	;# 
    91     000F                     	;# 
    92     0010                     	;# 
    93     0011                     	;# 
    94     0012                     	;# 
    95     0013                     	;# 
    96     0014                     	;# 
    97     0015                     	;# 
    98     0015                     	;# 
    99     0016                     	;# 
   100     0017                     	;# 
   101     0018                     	;# 
   102     0019                     	;# 
   103     001A                     	;# 
   104     001B                     	;# 
   105     001B                     	;# 
   106     001C                     	;# 
   107     001D                     	;# 
   108     001E                     	;# 
   109     001F                     	;# 
   110     0081                     	;# 
   111     0085                     	;# 
   112     0086                     	;# 
   113     0087                     	;# 
   114     0088                     	;# 
   115     0089                     	;# 
   116     008C                     	;# 
   117     008D                     	;# 
   118     008E                     	;# 
   119     0091                     	;# 
   120     0092                     	;# 
   121     0093                     	;# 
   122     0094                     	;# 
   123     0098                     	;# 
   124     0099                     	;# 
   125     009C                     	;# 
   126     009D                     	;# 
   127     009E                     	;# 
   128     009F                     	;# 
   129     010C                     	;# 
   130     010D                     	;# 
   131     010E                     	;# 
   132     010F                     	;# 
   133     018C                     	;# 
   134     018D                     	;# 
   135     0000                     	;# 
   136     0001                     	;# 
   137     0002                     	;# 
   138     0003                     	;# 
   139     0004                     	;# 
   140     0005                     	;# 
   141     0006                     	;# 
   142     0007                     	;# 
   143     0008                     	;# 
   144     0009                     	;# 
   145     000A                     	;# 
   146     000B                     	;# 
   147     000C                     	;# 
   148     000D                     	;# 
   149     000E                     	;# 
   150     000E                     	;# 
   151     000F                     	;# 
   152     0010                     	;# 
   153     0011                     	;# 
   154     0012                     	;# 
   155     0013                     	;# 
   156     0014                     	;# 
   157     0015                     	;# 
   158     0015                     	;# 
   159     0016                     	;# 
   160     0017                     	;# 
   161     0018                     	;# 
   162     0019                     	;# 
   163     001A                     	;# 
   164     001B                     	;# 
   165     001B                     	;# 
   166     001C                     	;# 
   167     001D                     	;# 
   168     001E                     	;# 
   169     001F                     	;# 
   170     0081                     	;# 
   171     0085                     	;# 
   172     0086                     	;# 
   173     0087                     	;# 
   174     0088                     	;# 
   175     0089                     	;# 
   176     008C                     	;# 
   177     008D                     	;# 
   178     008E                     	;# 
   179     0091                     	;# 
   180     0092                     	;# 
   181     0093                     	;# 
   182     0094                     	;# 
   183     0098                     	;# 
   184     0099                     	;# 
   185     009C                     	;# 
   186     009D                     	;# 
   187     009E                     	;# 
   188     009F                     	;# 
   189     010C                     	;# 
   190     010D                     	;# 
   191     010E                     	;# 
   192     010F                     	;# 
   193     018C                     	;# 
   194     018D                     	;# 
   195     0000                     	;# 
   196     0001                     	;# 
   197     0002                     	;# 
   198     0003                     	;# 
   199     0004                     	;# 
   200     0005                     	;# 
   201     0006                     	;# 
   202     0007                     	;# 
   203     0008                     	;# 
   204     0009                     	;# 
   205     000A                     	;# 
   206     000B                     	;# 
   207     000C                     	;# 
   208     000D                     	;# 
   209     000E                     	;# 
   210     000E                     	;# 
   211     000F                     	;# 
   212     0010                     	;# 
   213     0011                     	;# 
   214     0012                     	;# 
   215     0013                     	;# 
   216     0014                     	;# 
   217     0015                     	;# 
   218     0015                     	;# 
   219     0016                     	;# 
   220     0017                     	;# 
   221     0018                     	;# 
   222     0019                     	;# 
   223     001A                     	;# 
   224     001B                     	;# 
   225     001B                     	;# 
   226     001C                     	;# 
   227     001D                     	;# 
   228     001E                     	;# 
   229     001F                     	;# 
   230     0081                     	;# 
   231     0085                     	;# 
   232     0086                     	;# 
   233     0087                     	;# 
   234     0088                     	;# 
   235     0089                     	;# 
   236     008C                     	;# 
   237     008D                     	;# 
   238     008E                     	;# 
   239     0091                     	;# 
   240     0092                     	;# 
   241     0093                     	;# 
   242     0094                     	;# 
   243     0098                     	;# 
   244     0099                     	;# 
   245     009C                     	;# 
   246     009D                     	;# 
   247     009E                     	;# 
   248     009F                     	;# 
   249     010C                     	;# 
   250     010D                     	;# 
   251     010E                     	;# 
   252     010F                     	;# 
   253     018C                     	;# 
   254     018D                     	;# 
   255     0000                     	;# 
   256     0001                     	;# 
   257     0002                     	;# 
   258     0003                     	;# 
   259     0004                     	;# 
   260     0005                     	;# 
   261     0006                     	;# 
   262     0007                     	;# 
   263     0008                     	;# 
   264     0009                     	;# 
   265     000A                     	;# 
   266     000B                     	;# 
   267     000C                     	;# 
   268     000D                     	;# 
   269     000E                     	;# 
   270     000E                     	;# 
   271     000F                     	;# 
   272     0010                     	;# 
   273     0011                     	;# 
   274     0012                     	;# 
   275     0013                     	;# 
   276     0014                     	;# 
   277     0015                     	;# 
   278     0015                     	;# 
   279     0016                     	;# 
   280     0017                     	;# 
   281     0018                     	;# 
   282     0019                     	;# 
   283     001A                     	;# 
   284     001B                     	;# 
   285     001B                     	;# 
   286     001C                     	;# 
   287     001D                     	;# 
   288     001E                     	;# 
   289     001F                     	;# 
   290     0081                     	;# 
   291     0085                     	;# 
   292     0086                     	;# 
   293     0087                     	;# 
   294     0088                     	;# 
   295     0089                     	;# 
   296     008C                     	;# 
   297     008D                     	;# 
   298     008E                     	;# 
   299     0091                     	;# 
   300     0092                     	;# 
   301     0093                     	;# 
   302     0094                     	;# 
   303     0098                     	;# 
   304     0099                     	;# 
   305     009C                     	;# 
   306     009D                     	;# 
   307     009E                     	;# 
   308     009F                     	;# 
   309     010C                     	;# 
   310     010D                     	;# 
   311     010E                     	;# 
   312     010F                     	;# 
   313     018C                     	;# 
   314     018D                     	;# 
   315     0000                     	;# 
   316     0001                     	;# 
   317     0002                     	;# 
   318     0003                     	;# 
   319     0004                     	;# 
   320     0005                     	;# 
   321     0006                     	;# 
   322     0007                     	;# 
   323     0008                     	;# 
   324     0009                     	;# 
   325     000A                     	;# 
   326     000B                     	;# 
   327     000C                     	;# 
   328     000D                     	;# 
   329     000E                     	;# 
   330     000E                     	;# 
   331     000F                     	;# 
   332     0010                     	;# 
   333     0011                     	;# 
   334     0012                     	;# 
   335     0013                     	;# 
   336     0014                     	;# 
   337     0015                     	;# 
   338     0015                     	;# 
   339     0016                     	;# 
   340     0017                     	;# 
   341     0018                     	;# 
   342     0019                     	;# 
   343     001A                     	;# 
   344     001B                     	;# 
   345     001B                     	;# 
   346     001C                     	;# 
   347     001D                     	;# 
   348     001E                     	;# 
   349     001F                     	;# 
   350     0081                     	;# 
   351     0085                     	;# 
   352     0086                     	;# 
   353     0087                     	;# 
   354     0088                     	;# 
   355     0089                     	;# 
   356     008C                     	;# 
   357     008D                     	;# 
   358     008E                     	;# 
   359     0091                     	;# 
   360     0092                     	;# 
   361     0093                     	;# 
   362     0094                     	;# 
   363     0098                     	;# 
   364     0099                     	;# 
   365     009C                     	;# 
   366     009D                     	;# 
   367     009E                     	;# 
   368     009F                     	;# 
   369     010C                     	;# 
   370     010D                     	;# 
   371     010E                     	;# 
   372     010F                     	;# 
   373     018C                     	;# 
   374     018D                     	;# 
   375     0000                     	;# 
   376     0001                     	;# 
   377     0002                     	;# 
   378     0003                     	;# 
   379     0004                     	;# 
   380     0005                     	;# 
   381     0006                     	;# 
   382     0007                     	;# 
   383     0008                     	;# 
   384     0009                     	;# 
   385     000A                     	;# 
   386     000B                     	;# 
   387     000C                     	;# 
   388     000D                     	;# 
   389     000E                     	;# 
   390     000E                     	;# 
   391     000F                     	;# 
   392     0010                     	;# 
   393     0011                     	;# 
   394     0012                     	;# 
   395     0013                     	;# 
   396     0014                     	;# 
   397     0015                     	;# 
   398     0015                     	;# 
   399     0016                     	;# 
   400     0017                     	;# 
   401     0018                     	;# 
   402     0019                     	;# 
   403     001A                     	;# 
   404     001B                     	;# 
   405     001B                     	;# 
   406     001C                     	;# 
   407     001D                     	;# 
   408     001E                     	;# 
   409     001F                     	;# 
   410     0081                     	;# 
   411     0085                     	;# 
   412     0086                     	;# 
   413     0087                     	;# 
   414     0088                     	;# 
   415     0089                     	;# 
   416     008C                     	;# 
   417     008D                     	;# 
   418     008E                     	;# 
   419     0091                     	;# 
   420     0092                     	;# 
   421     0093                     	;# 
   422     0094                     	;# 
   423     0098                     	;# 
   424     0099                     	;# 
   425     009C                     	;# 
   426     009D                     	;# 
   427     009E                     	;# 
   428     009F                     	;# 
   429     010C                     	;# 
   430     010D                     	;# 
   431     010E                     	;# 
   432     010F                     	;# 
   433     018C                     	;# 
   434     018D                     	;# 
   435                           
   436                           	psect	idataCOMMON
   437     0003                     __pidataCOMMON:
   438                           
   439                           ;initializer for read_matrix_keypad@once
   440     0003  3401               	retlw	1
   441     0008                     _PORTD	set	8
   442     0091                     _T2CKPS1	set	145
   443     0090                     _T2CKPS0	set	144
   444     0061                     _TMR2IF	set	97
   445     0033                     _RB3	set	51
   446     0092                     _TMR2ON	set	146
   447     005F                     _GIE	set	95
   448     005E                     _PEIE	set	94
   449     003A                     _RC2	set	58
   450     0039                     _RC1	set	57
   451     0049                     _RE1	set	73
   452     004A                     _RE2	set	74
   453     0032                     _RB2	set	50
   454     0031                     _RB1	set	49
   455     0030                     _RB0	set	48
   456     0040                     _RD0	set	64
   457     0041                     _RD1	set	65
   458     0042                     _RD2	set	66
   459     0043                     _RD3	set	67
   460     0092                     _PR2	set	146
   461     0088                     _TRISD	set	136
   462     0086                     _TRISB	set	134
   463     0461                     _TMR2IE	set	1121
   464     043A                     _TRISC2	set	1082
   465     0439                     _TRISC1	set	1081
   466     0449                     _TRISE1	set	1097
   467     044A                     _TRISE2	set	1098
   468     040F                     _nRBPU	set	1039
   469                           
   470                           	psect	strings
   471     0800                     __pstrings:
   472     0800                     stringtab:
   473     0800                     __stringtab:
   474                           
   475                           ;	String table - string pointers are 2 bytes each
   476     0800  1BFF               	btfsc	btemp+1,7
   477     0801  280A               	ljmp	stringcode
   478     0802  1383               	bcf	3,7
   479     0803  187F               	btfsc	btemp+1,0
   480     0804  1783               	bsf	3,7
   481     0805  0800               	movf	0,w
   482     0806  0A84               	incf	4,f
   483     0807  1903               	skipnz
   484     0808  0AFF               	incf	btemp+1,f
   485     0809  0008               	return
   486     080A                     stringcode:
   487     080A  087F               	movf	btemp+1,w
   488     080B  397F               	andlw	127
   489     080C  008A               	movwf	10
   490     080D  0804               	movf	4,w
   491     080E  0A84               	incf	4,f
   492     080F  1903               	skipnz
   493     0810  0AFF               	incf	btemp+1,f
   494     0811  0082               	movwf	2
   495     0812                     __stringbase:
   496     0812                     __end_of__stringtab:
   497                           
   498                           	psect	stringtext
   499     0400                     __pstringtext:
   500     0400                     STR_18:
   501     0400  3420               	retlw	32	;' '
   502     0401  3436               	retlw	54	;'6'
   503     0402  342E               	retlw	46	;'.'
   504     0403  3453               	retlw	83	;'S'
   505     0404  3474               	retlw	116	;'t'
   506     0405  346F               	retlw	111	;'o'
   507     0406  3470               	retlw	112	;'p'
   508     0407  3420               	retlw	32	;' '
   509     0408  3420               	retlw	32	;' '
   510     0409  3420               	retlw	32	;' '
   511     040A  3420               	retlw	32	;' '
   512     040B  3420               	retlw	32	;' '
   513     040C  3420               	retlw	32	;' '
   514     040D  3420               	retlw	32	;' '
   515     040E  3420               	retlw	32	;' '
   516     040F  3420               	retlw	32	;' '
   517     0410  3400               	retlw	0
   518     0411                     STR_17:
   519     0411  3420               	retlw	32	;' '
   520     0412  3435               	retlw	53	;'5'
   521     0413  342E               	retlw	46	;'.'
   522     0414  3450               	retlw	80	;'P'
   523     0415  3461               	retlw	97	;'a'
   524     0416  3475               	retlw	117	;'u'
   525     0417  3473               	retlw	115	;'s'
   526     0418  3465               	retlw	101	;'e'
   527     0419  3420               	retlw	32	;' '
   528     041A  3420               	retlw	32	;' '
   529     041B  3420               	retlw	32	;' '
   530     041C  3420               	retlw	32	;' '
   531     041D  3420               	retlw	32	;' '
   532     041E  3420               	retlw	32	;' '
   533     041F  3420               	retlw	32	;' '
   534     0420  3420               	retlw	32	;' '
   535     0421  3400               	retlw	0
   536     0422                     STR_2:
   537     0422  3420               	retlw	32	;' '
   538     0423  3420               	retlw	32	;' '
   539     0424  3450               	retlw	80	;'P'
   540     0425  346F               	retlw	111	;'o'
   541     0426  3477               	retlw	119	;'w'
   542     0427  3465               	retlw	101	;'e'
   543     0428  3472               	retlw	114	;'r'
   544     0429  3469               	retlw	105	;'i'
   545     042A  346E               	retlw	110	;'n'
   546     042B  3467               	retlw	103	;'g'
   547     042C  3420               	retlw	32	;' '
   548     042D  344F               	retlw	79	;'O'
   549     042E  344E               	retlw	78	;'N'
   550     042F  3420               	retlw	32	;' '
   551     0430  3420               	retlw	32	;' '
   552     0431  3420               	retlw	32	;' '
   553     0432  3400               	retlw	0
   554     0433                     STR_1:
   555     0433  3420               	retlw	32	;' '
   556     0434  3450               	retlw	80	;'P'
   557     0435  346F               	retlw	111	;'o'
   558     0436  3477               	retlw	119	;'w'
   559     0437  3465               	retlw	101	;'e'
   560     0438  3472               	retlw	114	;'r'
   561     0439  3420               	retlw	32	;' '
   562     043A  343D               	retlw	61	;'='
   563     043B  3420               	retlw	32	;' '
   564     043C  3439               	retlw	57	;'9'
   565     043D  3430               	retlw	48	;'0'
   566     043E  3430               	retlw	48	;'0'
   567     043F  3457               	retlw	87	;'W'
   568     0440  3420               	retlw	32	;' '
   569     0441  3420               	retlw	32	;' '
   570     0442  3420               	retlw	32	;' '
   571     0443  3400               	retlw	0
   572     0444                     STR_16:
   573     0444  3420               	retlw	32	;' '
   574     0445  3434               	retlw	52	;'4'
   575     0446  342E               	retlw	46	;'.'
   576     0447  3453               	retlw	83	;'S'
   577     0448  3474               	retlw	116	;'t'
   578     0449  3461               	retlw	97	;'a'
   579     044A  3472               	retlw	114	;'r'
   580     044B  3474               	retlw	116	;'t'
   581     044C  342F               	retlw	47	;'/'
   582     044D  3452               	retlw	82	;'R'
   583     044E  3465               	retlw	101	;'e'
   584     044F  3473               	retlw	115	;'s'
   585     0450  3475               	retlw	117	;'u'
   586     0451  346D               	retlw	109	;'m'
   587     0452  3465               	retlw	101	;'e'
   588     0453  3420               	retlw	32	;' '
   589     0454  3400               	retlw	0
   590     0455                     STR_3:
   591     0455  3420               	retlw	32	;' '
   592     0456  344D               	retlw	77	;'M'
   593     0457  3469               	retlw	105	;'i'
   594     0458  3463               	retlw	99	;'c'
   595     0459  3472               	retlw	114	;'r'
   596     045A  346F               	retlw	111	;'o'
   597     045B  3477               	retlw	119	;'w'
   598     045C  3461               	retlw	97	;'a'
   599     045D  3476               	retlw	118	;'v'
   600     045E  3465               	retlw	101	;'e'
   601     045F  3420               	retlw	32	;' '
   602     0460  344F               	retlw	79	;'O'
   603     0461  3476               	retlw	118	;'v'
   604     0462  3465               	retlw	101	;'e'
   605     0463  346E               	retlw	110	;'n'
   606     0464  3420               	retlw	32	;' '
   607     0465  3400               	retlw	0
   608     0466                     STR_20:
   609     0466  3453               	retlw	83	;'S'
   610     0467  3445               	retlw	69	;'E'
   611     0468  3454               	retlw	84	;'T'
   612     0469  3420               	retlw	32	;' '
   613     046A  3454               	retlw	84	;'T'
   614     046B  3445               	retlw	69	;'E'
   615     046C  344D               	retlw	77	;'M'
   616     046D  3450               	retlw	80	;'P'
   617     046E  342E               	retlw	46	;'.'
   618     046F  3420               	retlw	32	;' '
   619     0470  3428               	retlw	40	;'('
   620     0471  3420               	retlw	32	;' '
   621     0472  3420               	retlw	32	;' '
   622     0473  3443               	retlw	67	;'C'
   623     0474  3420               	retlw	32	;' '
   624     0475  3429               	retlw	41	;')'
   625     0476  3400               	retlw	0
   626     0477                     STR_8:
   627     0477  3453               	retlw	83	;'S'
   628     0478  3445               	retlw	69	;'E'
   629     0479  3454               	retlw	84	;'T'
   630     047A  3420               	retlw	32	;' '
   631     047B  3454               	retlw	84	;'T'
   632     047C  3449               	retlw	73	;'I'
   633     047D  344D               	retlw	77	;'M'
   634     047E  3445               	retlw	69	;'E'
   635     047F  3420               	retlw	32	;' '
   636     0480  3428               	retlw	40	;'('
   637     0481  344D               	retlw	77	;'M'
   638     0482  344D               	retlw	77	;'M'
   639     0483  343A               	retlw	58	;':'
   640     0484  3453               	retlw	83	;'S'
   641     0485  3453               	retlw	83	;'S'
   642     0486  3429               	retlw	41	;')'
   643     0487  3400               	retlw	0
   644     0488                     STR_13:
   645     0488  3444               	retlw	68	;'D'
   646     0489  346F               	retlw	111	;'o'
   647     048A  346F               	retlw	111	;'o'
   648     048B  3472               	retlw	114	;'r'
   649     048C  3420               	retlw	32	;' '
   650     048D  3453               	retlw	83	;'S'
   651     048E  3474               	retlw	116	;'t'
   652     048F  3461               	retlw	97	;'a'
   653     0490  3474               	retlw	116	;'t'
   654     0491  3475               	retlw	117	;'u'
   655     0492  3473               	retlw	115	;'s'
   656     0493  343A               	retlw	58	;':'
   657     0494  344F               	retlw	79	;'O'
   658     0495  3450               	retlw	80	;'P'
   659     0496  3445               	retlw	69	;'E'
   660     0497  344E               	retlw	78	;'N'
   661     0498  3400               	retlw	0
   662     0499                     STR_10:
   663     0499  342A               	retlw	42	;'*'
   664     049A  343A               	retlw	58	;':'
   665     049B  3443               	retlw	67	;'C'
   666     049C  344C               	retlw	76	;'L'
   667     049D  3445               	retlw	69	;'E'
   668     049E  3441               	retlw	65	;'A'
   669     049F  3452               	retlw	82	;'R'
   670     04A0  3420               	retlw	32	;' '
   671     04A1  3420               	retlw	32	;' '
   672     04A2  3423               	retlw	35	;'#'
   673     04A3  343A               	retlw	58	;':'
   674     04A4  3445               	retlw	69	;'E'
   675     04A5  344E               	retlw	78	;'N'
   676     04A6  3454               	retlw	84	;'T'
   677     04A7  3445               	retlw	69	;'E'
   678     04A8  3452               	retlw	82	;'R'
   679     04A9  3400               	retlw	0
   680     04AA                     STR_19:
   681     04AA  3443               	retlw	67	;'C'
   682     04AB  346F               	retlw	111	;'o'
   683     04AC  346F               	retlw	111	;'o'
   684     04AD  346B               	retlw	107	;'k'
   685     04AE  3469               	retlw	105	;'i'
   686     04AF  346E               	retlw	110	;'n'
   687     04B0  3467               	retlw	103	;'g'
   688     04B1  3420               	retlw	32	;' '
   689     04B2  3454               	retlw	84	;'T'
   690     04B3  3469               	retlw	105	;'i'
   691     04B4  346D               	retlw	109	;'m'
   692     04B5  3465               	retlw	101	;'e'
   693     04B6  3420               	retlw	32	;' '
   694     04B7  3455               	retlw	85	;'U'
   695     04B8  3450               	retlw	80	;'P'
   696     04B9  3400               	retlw	0
   697     04BA                     STR_23:
   698     04BA  3420               	retlw	32	;' '
   699     04BB  3449               	retlw	73	;'I'
   700     04BC  346E               	retlw	110	;'n'
   701     04BD  3476               	retlw	118	;'v'
   702     04BE  3461               	retlw	97	;'a'
   703     04BF  346C               	retlw	108	;'l'
   704     04C0  3469               	retlw	105	;'i'
   705     04C1  3464               	retlw	100	;'d'
   706     04C2  3420               	retlw	32	;' '
   707     04C3  3454               	retlw	84	;'T'
   708     04C4  3465               	retlw	101	;'e'
   709     04C5  346D               	retlw	109	;'m'
   710     04C6  3470               	retlw	112	;'p'
   711     04C7  342E               	retlw	46	;'.'
   712     04C8  3400               	retlw	0
   713     04C9                     STR_24:
   714     04C9  3420               	retlw	32	;' '
   715     04CA  3420               	retlw	32	;' '
   716     04CB  3450               	retlw	80	;'P'
   717     04CC  3472               	retlw	114	;'r'
   718     04CD  3465               	retlw	101	;'e'
   719     04CE  342D               	retlw	45	;'-'
   720     04CF  3448               	retlw	72	;'H'
   721     04D0  3465               	retlw	101	;'e'
   722     04D1  3461               	retlw	97	;'a'
   723     04D2  3474               	retlw	116	;'t'
   724     04D3  3469               	retlw	105	;'i'
   725     04D4  346E               	retlw	110	;'n'
   726     04D5  3467               	retlw	103	;'g'
   727     04D6  3400               	retlw	0
   728     04D7                     STR_14:
   729     04D7  3450               	retlw	80	;'P'
   730     04D8  346C               	retlw	108	;'l'
   731     04D9  3465               	retlw	101	;'e'
   732     04DA  3461               	retlw	97	;'a'
   733     04DB  3473               	retlw	115	;'s'
   734     04DC  3465               	retlw	101	;'e'
   735     04DD  3420               	retlw	32	;' '
   736     04DE  3443               	retlw	67	;'C'
   737     04DF  346C               	retlw	108	;'l'
   738     04E0  346F               	retlw	111	;'o'
   739     04E1  3473               	retlw	115	;'s'
   740     04E2  3465               	retlw	101	;'e'
   741     04E3  3400               	retlw	0
   742     04E4                     STR_6:
   743     04E4  3433               	retlw	51	;'3'
   744     04E5  342E               	retlw	46	;'.'
   745     04E6  3443               	retlw	67	;'C'
   746     04E7  346F               	retlw	111	;'o'
   747     04E8  346E               	retlw	110	;'n'
   748     04E9  3476               	retlw	118	;'v'
   749     04EA  3465               	retlw	101	;'e'
   750     04EB  3463               	retlw	99	;'c'
   751     04EC  3474               	retlw	116	;'t'
   752     04ED  3469               	retlw	105	;'i'
   753     04EE  346F               	retlw	111	;'o'
   754     04EF  346E               	retlw	110	;'n'
   755     04F0  3400               	retlw	0
   756     04F1                     STR_25:
   757     04F1  3454               	retlw	84	;'T'
   758     04F2  3469               	retlw	105	;'i'
   759     04F3  346D               	retlw	109	;'m'
   760     04F4  3465               	retlw	101	;'e'
   761     04F5  3420               	retlw	32	;' '
   762     04F6  3452               	retlw	82	;'R'
   763     04F7  3465               	retlw	101	;'e'
   764     04F8  346D               	retlw	109	;'m'
   765     04F9  342E               	retlw	46	;'.'
   766     04FA  343D               	retlw	61	;'='
   767     04FB  3420               	retlw	32	;' '
   768     04FC  3400               	retlw	0
   769     04FD                     STR_21:
   770     04FD  3454               	retlw	84	;'T'
   771     04FE  3445               	retlw	69	;'E'
   772     04FF  344D               	retlw	77	;'M'
   773     0500  3450               	retlw	80	;'P'
   774     0501  3420               	retlw	32	;' '
   775     0502  343A               	retlw	58	;':'
   776     0503  3420               	retlw	32	;' '
   777     0504  3420               	retlw	32	;' '
   778     0505  3430               	retlw	48	;'0'
   779     0506  3430               	retlw	48	;'0'
   780     0507  3430               	retlw	48	;'0'
   781     0508  3400               	retlw	0
   782     0509                     STR_9:
   783     0509  3454               	retlw	84	;'T'
   784     050A  3449               	retlw	73	;'I'
   785     050B  344D               	retlw	77	;'M'
   786     050C  3445               	retlw	69	;'E'
   787     050D  342D               	retlw	45	;'-'
   788     050E  3420               	retlw	32	;' '
   789     050F  3430               	retlw	48	;'0'
   790     0510  3430               	retlw	48	;'0'
   791     0511  343A               	retlw	58	;':'
   792     0512  3430               	retlw	48	;'0'
   793     0513  3430               	retlw	48	;'0'
   794     0514  3400               	retlw	0
   795     0515                     STR_15:
   796     0515  3420               	retlw	32	;' '
   797     0516  3454               	retlw	84	;'T'
   798     0517  3449               	retlw	73	;'I'
   799     0518  344D               	retlw	77	;'M'
   800     0519  3445               	retlw	69	;'E'
   801     051A  3420               	retlw	32	;' '
   802     051B  343D               	retlw	61	;'='
   803     051C  3420               	retlw	32	;' '
   804     051D  3420               	retlw	32	;' '
   805     051E  3400               	retlw	0
   806     051F                     STR_5:
   807     051F  3432               	retlw	50	;'2'
   808     0520  342E               	retlw	46	;'.'
   809     0521  3447               	retlw	71	;'G'
   810     0522  3472               	retlw	114	;'r'
   811     0523  3469               	retlw	105	;'i'
   812     0524  346C               	retlw	108	;'l'
   813     0525  346C               	retlw	108	;'l'
   814     0526  3400               	retlw	0
   815     0527                     STR_4:
   816     0527  3431               	retlw	49	;'1'
   817     0528  342E               	retlw	46	;'.'
   818     0529  344D               	retlw	77	;'M'
   819     052A  3469               	retlw	105	;'i'
   820     052B  3463               	retlw	99	;'c'
   821     052C  3472               	retlw	114	;'r'
   822     052D  346F               	retlw	111	;'o'
   823     052E  3400               	retlw	0
   824     052F                     STR_7:
   825     052F  3434               	retlw	52	;'4'
   826     0530  342E               	retlw	46	;'.'
   827     0531  3453               	retlw	83	;'S'
   828     0532  3474               	retlw	116	;'t'
   829     0533  3461               	retlw	97	;'a'
   830     0534  3472               	retlw	114	;'r'
   831     0535  3474               	retlw	116	;'t'
   832     0536  3400               	retlw	0
   833     040E                     
   834                           	psect	cinit
   835     0011                     start_initialization:	
   836                           ; #config settings
   837                           
   838     0011                     __initialization:
   839                           
   840                           ; Initialize objects allocated to COMMON
   841     0011  120A  118A  2003  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   842     0016  00FA               	movwf	__pdataCOMMON& (0+127)
   843                           
   844                           ; Clear objects allocated to BANK0
   845     0017  1383               	bcf	3,7	;select IRP bank0
   846     0018  3020               	movlw	low __pbssBANK0
   847     0019  0084               	movwf	4
   848     001A  3044               	movlw	low (__pbssBANK0+36)
   849     001B  120A  158A  24F0   	fcall	clear_ram0
   850                           
   851                           ; Clear objects allocated to COMMON
   852     001E  01F8               	clrf	__pbssCOMMON& (0+127)
   853     001F  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   854     0020                     end_of_initialization:	
   855                           ;End of C runtime variable initialization code
   856                           
   857     0020                     __end_of__initialization:
   858     0020  0183               	clrf	3
   859     0021  120A  118A  2D37   	ljmp	_main	;jump to C main() function
   860                           
   861                           	psect	bssCOMMON
   862     0078                     __pbssCOMMON:
   863     0078                     set_time@key_count:
   864     0078                     	ds	2
   865                           
   866                           	psect	dataCOMMON
   867     007A                     __pdataCOMMON:
   868     007A                     read_matrix_keypad@once:
   869     007A                     	ds	1
   870                           
   871                           	psect	bssBANK0
   872     0020                     __pbssBANK0:
   873     0020                     isr@count:
   874     0020                     	ds	2
   875     0022                     set_temp@temp:
   876     0022                     	ds	2
   877     0024                     set_temp@key_count:
   878     0024                     	ds	2
   879     0026                     set_temp@blink:
   880     0026                     	ds	2
   881     0028                     set_temp@wait:
   882     0028                     	ds	2
   883     002A                     set_time@blink_pos:
   884     002A                     	ds	2
   885     002C                     set_time@blink:
   886     002C                     	ds	2
   887     002E                     set_time@wait:
   888     002E                     	ds	2
   889     0030                     _heat_flag:
   890     0030                     	ds	2
   891     0032                     _flag:
   892     0032                     	ds	2
   893     0034                     _ret:
   894     0034                     	ds	2
   895     0036                     _sec:
   896     0036                     	ds	2
   897     0038                     _min:
   898     0038                     	ds	2
   899     003A                     _reset_flag:
   900     003A                     	ds	2
   901     003C                     _operation_mode:
   902     003C                     	ds	2
   903     003E                     _min_arr:
   904     003E                     	ds	3
   905     0041                     _sec_arr:
   906     0041                     	ds	3
   907                           
   908                           	psect	clrtext
   909     0CF0                     clear_ram0:	
   910                           ;	Called with FSR containing the base address, and
   911                           ;	W with the last address+1
   912                           
   913     0CF0  0064               	clrwdt	;clear the watchdog before getting into this loop
   914     0CF1                     clrloop0:
   915     0CF1  0180               	clrf	0	;clear RAM location pointed to by FSR
   916     0CF2  0A84               	incf	4,f	;increment pointer
   917     0CF3  0604               	xorwf	4,w	;XOR with final address
   918     0CF4  1903               	btfsc	3,2	;have we reached the end yet?
   919     0CF5  3400               	retlw	0	;all done for this memory range, return
   920     0CF6  0604               	xorwf	4,w	;XOR again to restore value
   921     0CF7  2CF1               	goto	clrloop0	;do the next byte
   922                           
   923                           	psect	cstackCOMMON
   924     0070                     __pcstackCOMMON:
   925     0070                     ?_init_timer2:
   926     0070                     ?_power_on:	
   927                           ; 1 bytes @ 0x0
   928                           
   929     0070                     ?_clear_dis:	
   930                           ; 1 bytes @ 0x0
   931                           
   932     0070                     ?_mode_select:	
   933                           ; 1 bytes @ 0x0
   934                           
   935     0070                     ?_modes_display:	
   936                           ; 1 bytes @ 0x0
   937                           
   938     0070                     ?_time_dis:	
   939                           ; 1 bytes @ 0x0
   940                           
   941     0070                     ?_set_time:	
   942                           ; 1 bytes @ 0x0
   943                           
   944     0070                     ?_set_temp:	
   945                           ; 1 bytes @ 0x0
   946                           
   947     0070                     ?_init_matrix_keypad:	
   948                           ; 1 bytes @ 0x0
   949                           
   950     0070                     ?_scan_keypad:	
   951                           ; 1 bytes @ 0x0
   952                           
   953     0070                     ?_read_matrix_keypad:	
   954                           ; 1 bytes @ 0x0
   955                           
   956     0070                     ?_init_display_controller:	
   957                           ; 1 bytes @ 0x0
   958                           
   959     0070                     ?_init_clcd:	
   960                           ; 1 bytes @ 0x0
   961                           
   962     0070                     ?_init_config:	
   963                           ; 1 bytes @ 0x0
   964                           
   965     0070                     ?_main:	
   966                           ; 1 bytes @ 0x0
   967                           
   968     0070                     ?_door_status_check:	
   969                           ; 1 bytes @ 0x0
   970                           
   971     0070                     ?_isr:	
   972                           ; 1 bytes @ 0x0
   973                           
   974     0070                     ??_isr:	
   975                           ; 1 bytes @ 0x0
   976                           
   977                           
   978                           ; 1 bytes @ 0x0
   979     0070                     	ds	3
   980     0073                     ??_init_timer2:
   981     0073                     ??_init_matrix_keypad:	
   982                           ; 1 bytes @ 0x3
   983                           
   984     0073                     ??_scan_keypad:	
   985                           ; 1 bytes @ 0x3
   986                           
   987     0073                     ?_clcd_write:	
   988                           ; 1 bytes @ 0x3
   989                           
   990     0073                     ?___wmul:	
   991                           ; 1 bytes @ 0x3
   992                           
   993     0073                     ?___awdiv:	
   994                           ; 2 bytes @ 0x3
   995                           
   996     0073                     clcd_write@mode:	
   997                           ; 2 bytes @ 0x3
   998                           
   999     0073                     scan_keypad@i:	
  1000                           ; 1 bytes @ 0x3
  1001                           
  1002     0073                     ___wmul@multiplier:	
  1003                           ; 2 bytes @ 0x3
  1004                           
  1005     0073                     ___awdiv@divisor:	
  1006                           ; 2 bytes @ 0x3
  1007                           
  1008                           
  1009                           ; 2 bytes @ 0x3
  1010     0073                     	ds	1
  1011     0074                     ??_clcd_write:
  1012                           
  1013                           ; 1 bytes @ 0x4
  1014     0074                     	ds	1
  1015     0075                     ??_read_matrix_keypad:
  1016     0075                     read_matrix_keypad@mode:	
  1017                           ; 1 bytes @ 0x5
  1018                           
  1019     0075                     ___wmul@multiplicand:	
  1020                           ; 1 bytes @ 0x5
  1021                           
  1022     0075                     ___awdiv@dividend:	
  1023                           ; 2 bytes @ 0x5
  1024                           
  1025                           
  1026                           ; 2 bytes @ 0x5
  1027     0075                     	ds	1
  1028     0076                     read_matrix_keypad@key:
  1029     0076                     clcd_write@byte:	
  1030                           ; 1 bytes @ 0x6
  1031                           
  1032                           
  1033                           ; 1 bytes @ 0x6
  1034     0076                     	ds	1
  1035     0077                     ??_clear_dis:
  1036     0077                     ??_modes_display:	
  1037                           ; 1 bytes @ 0x7
  1038                           
  1039     0077                     ??_init_clcd:	
  1040                           ; 1 bytes @ 0x7
  1041                           
  1042     0077                     ??_clcd_putch:	
  1043                           ; 1 bytes @ 0x7
  1044                           
  1045     0077                     ??_clcd_print:	
  1046                           ; 1 bytes @ 0x7
  1047                           
  1048     0077                     ??_init_config:	
  1049                           ; 1 bytes @ 0x7
  1050                           
  1051     0077                     ??_door_status_check:	
  1052                           ; 1 bytes @ 0x7
  1053                           
  1054     0077                     ??___wmul:	
  1055                           ; 1 bytes @ 0x7
  1056                           
  1057     0077                     ??___awdiv:	
  1058                           ; 1 bytes @ 0x7
  1059                           
  1060     0077                     ??___awmod:	
  1061                           ; 1 bytes @ 0x7
  1062                           
  1063     0077                     clcd_putch@data:	
  1064                           ; 1 bytes @ 0x7
  1065                           
  1066     0077                     set_time@key:	
  1067                           ; 1 bytes @ 0x7
  1068                           
  1069                           
  1070                           ; 1 bytes @ 0x7
  1071     0077                     	ds	1
  1072                           
  1073                           	psect	cstackBANK0
  1074     0044                     __pcstackBANK0:
  1075     0044                     ??_init_display_controller:
  1076     0044                     ?_clcd_print:	
  1077                           ; 1 bytes @ 0x0
  1078                           
  1079     0044                     ___awdiv@counter:	
  1080                           ; 1 bytes @ 0x0
  1081                           
  1082     0044                     clcd_print@str:	
  1083                           ; 1 bytes @ 0x0
  1084                           
  1085     0044                     ___wmul@product:	
  1086                           ; 2 bytes @ 0x0
  1087                           
  1088                           
  1089                           ; 2 bytes @ 0x0
  1090     0044                     	ds	1
  1091     0045                     ___awdiv@sign:
  1092                           
  1093                           ; 1 bytes @ 0x1
  1094     0045                     	ds	1
  1095     0046                     clcd_print@addr:
  1096     0046                     ___awdiv@quotient:	
  1097                           ; 1 bytes @ 0x2
  1098                           
  1099                           
  1100                           ; 2 bytes @ 0x2
  1101     0046                     	ds	2
  1102     0048                     ?___awmod:
  1103     0048                     ___awmod@divisor:	
  1104                           ; 2 bytes @ 0x4
  1105                           
  1106                           
  1107                           ; 2 bytes @ 0x4
  1108     0048                     	ds	2
  1109     004A                     ___awmod@dividend:
  1110                           
  1111                           ; 2 bytes @ 0x6
  1112     004A                     	ds	2
  1113     004C                     ___awmod@counter:
  1114                           
  1115                           ; 1 bytes @ 0x8
  1116     004C                     	ds	1
  1117     004D                     ___awmod@sign:
  1118                           
  1119                           ; 1 bytes @ 0x9
  1120     004D                     	ds	1
  1121     004E                     ??_set_time:
  1122     004E                     ?_clcd_putch:	
  1123                           ; 1 bytes @ 0xA
  1124                           
  1125     004E                     clcd_putch@addr:	
  1126                           ; 1 bytes @ 0xA
  1127                           
  1128                           
  1129                           ; 1 bytes @ 0xA
  1130     004E                     	ds	1
  1131     004F                     ??_power_on:
  1132     004F                     ??_time_dis:	
  1133                           ; 1 bytes @ 0xB
  1134                           
  1135     004F                     ??_set_temp:	
  1136                           ; 1 bytes @ 0xB
  1137                           
  1138                           
  1139                           ; 1 bytes @ 0xB
  1140     004F                     	ds	3
  1141     0052                     set_temp@key:
  1142     0052                     power_on@i:	
  1143                           ; 1 bytes @ 0xE
  1144                           
  1145                           
  1146                           ; 2 bytes @ 0xE
  1147     0052                     	ds	1
  1148     0053                     ??_mode_select:
  1149                           
  1150                           ; 1 bytes @ 0xF
  1151     0053                     	ds	1
  1152     0054                     power_on@i_145:
  1153                           
  1154                           ; 2 bytes @ 0x10
  1155     0054                     	ds	1
  1156     0055                     mode_select@key:
  1157                           
  1158                           ; 1 bytes @ 0x11
  1159     0055                     	ds	1
  1160     0056                     ??_main:
  1161                           
  1162                           ; 1 bytes @ 0x12
  1163     0056                     	ds	3
  1164     0059                     main@key:
  1165                           
  1166                           ; 1 bytes @ 0x15
  1167     0059                     	ds	1
  1168                           
  1169                           	psect	maintext
  1170     0537                     __pmaintext:	
  1171 ;;
  1172 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1173 ;;
  1174 ;; *************** function _main *****************
  1175 ;; Defined at:
  1176 ;;		line 39 in file "main.c"
  1177 ;; Parameters:    Size  Location     Type
  1178 ;;		None
  1179 ;; Auto vars:     Size  Location     Type
  1180 ;;  key             1   21[BANK0 ] unsigned char 
  1181 ;; Return value:  Size  Location     Type
  1182 ;;                  1    wreg      void 
  1183 ;; Registers used:
  1184 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1185 ;; Tracked objects:
  1186 ;;		On entry : B00/0
  1187 ;;		On exit  : 0/0
  1188 ;;		Unchanged: 0/0
  1189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1190 ;;      Params:         0       0       0       0       0
  1191 ;;      Locals:         0       1       0       0       0
  1192 ;;      Temps:          0       3       0       0       0
  1193 ;;      Totals:         0       4       0       0       0
  1194 ;;Total ram usage:        4 bytes
  1195 ;; Hardware stack levels required when called: 6
  1196 ;; This function calls:
  1197 ;;		_clcd_print
  1198 ;;		_clcd_write
  1199 ;;		_clear_dis
  1200 ;;		_init_config
  1201 ;;		_mode_select
  1202 ;;		_power_on
  1203 ;;		_read_matrix_keypad
  1204 ;; This function is called by:
  1205 ;;		Startup code after reset
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209     0537                     _main:	
  1210                           ;psect for function _main
  1211                           
  1212                           
  1213                           ;main.c: 40:             operation_mode = 0x02;;main.c: 41:             reset_flag = 0x1
      +                          1;
  1214                           
  1215                           ;incstack = 0
  1216                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1217     0537  120A  158A  253A  120A  118A  	fcall	_init_config
  1218                           
  1219                           ;main.c: 42:             clcd_write(0x0C, 0);
  1220     053C  120A  158A  2695  120A  118A  	fcall	_power_on
  1221                           
  1222                           ;main.c: 43:             clear_dis();
  1223     0541  120A  158A  24EA  120A  118A  	fcall	_clear_dis
  1224                           
  1225                           ;main.c: 44: 
  1226     0546  3001               	movlw	1
  1227     0547  1283               	bcf	3,5	;RP0=0, select bank0
  1228     0548  1303               	bcf	3,6	;RP1=0, select bank0
  1229     0549  00BC               	movwf	_operation_mode
  1230     054A  3000               	movlw	0
  1231     054B  00BD               	movwf	_operation_mode+1
  1232     054C                     l3047:
  1233                           
  1234                           ;main.c: 48:            clear_dis();;main.c: 49:         }
  1235     054C  3001               	movlw	1
  1236     054D  120A  158A  251F  120A  118A  	fcall	_read_matrix_keypad
  1237     0552  1283               	bcf	3,5	;RP0=0, select bank0
  1238     0553  1303               	bcf	3,6	;RP1=0, select bank0
  1239     0554  00D9               	movwf	main@key
  1240                           
  1241                           ;main.c: 50:         else if(key == 2) {
  1242     0555  3002               	movlw	2
  1243     0556  063C               	xorwf	_operation_mode,w
  1244     0557  043D               	iorwf	_operation_mode+1,w
  1245     0558  1903               	btfsc	3,2
  1246     0559  2E16               	goto	l3125
  1247     055A  3003               	movlw	3
  1248     055B  063C               	xorwf	_operation_mode,w
  1249     055C  043D               	iorwf	_operation_mode+1,w
  1250     055D  1903               	btfsc	3,2
  1251     055E  2E16               	goto	l3125
  1252     055F  3004               	movlw	4
  1253     0560  063C               	xorwf	_operation_mode,w
  1254     0561  043D               	iorwf	_operation_mode+1,w
  1255     0562  1903               	btfsc	3,2
  1256     0563  2E16               	goto	l3125
  1257                           
  1258                           ;main.c: 51:             clear_dis();;main.c: 53:             reset_flag = 0x12;
  1259     0564  0359               	decf	main@key,w
  1260     0565  1D03               	btfss	3,2
  1261     0566  2D97               	goto	l3069
  1262                           
  1263                           ;main.c: 56:         else if(key == 3) {;main.c: 57:             clear_dis();
  1264     0567  3002               	movlw	2
  1265     0568  00BC               	movwf	_operation_mode
  1266     0569  3000               	movlw	0
  1267     056A  00BD               	movwf	_operation_mode+1
  1268                           
  1269                           ;main.c: 58:             operation_mode = 0x04;
  1270     056B  3011               	movlw	17
  1271     056C  00BA               	movwf	_reset_flag
  1272     056D  3000               	movlw	0
  1273     056E  00BB               	movwf	_reset_flag+1
  1274                           
  1275                           ;main.c: 59:             reset_flag = 0x14;
  1276     056F  01F3               	clrf	clcd_write@mode
  1277     0570  300C               	movlw	12
  1278     0571  120A  158A  2613  120A  118A  	fcall	_clcd_write
  1279                           
  1280                           ;main.c: 60:         }
  1281     0576  120A  158A  24EA  120A  118A  	fcall	_clear_dis
  1282                           
  1283                           ;main.c: 62:             if(operation_mode == 0x01)
  1284     057B  3033               	movlw	low (STR_1| (0+32768))
  1285     057C  1283               	bcf	3,5	;RP0=0, select bank0
  1286     057D  1303               	bcf	3,6	;RP1=0, select bank0
  1287     057E  00C4               	movwf	clcd_print@str
  1288     057F  3084               	movlw	high (STR_1| (0+32768))
  1289     0580  00C5               	movwf	clcd_print@str+1
  1290     0581  30C0               	movlw	192
  1291     0582  00C6               	movwf	clcd_print@addr
  1292     0583  120A  158A  257D  120A  118A  	fcall	_clcd_print
  1293                           
  1294                           ;main.c: 64:                 min = 0;
  1295     0588  304D               	movlw	77
  1296     0589  1283               	bcf	3,5	;RP0=0, select bank0
  1297     058A  1303               	bcf	3,6	;RP1=0, select bank0
  1298     058B  00D8               	movwf	??_main+2
  1299     058C  3019               	movlw	25
  1300     058D  00D7               	movwf	??_main+1
  1301     058E  304F               	movlw	79
  1302     058F  00D6               	movwf	??_main
  1303     0590                     u2977:
  1304     0590  0BD6               	decfsz	??_main,f
  1305     0591  2D90               	goto	u2977
  1306     0592  0BD7               	decfsz	??_main+1,f
  1307     0593  2D90               	goto	u2977
  1308     0594  0BD8               	decfsz	??_main+2,f
  1309     0595  2D90               	goto	u2977
  1310                           
  1311                           ;main.c: 66:                 TMR2ON = 1;
  1312     0596  2E11               	goto	l3067
  1313     0597                     l3069:
  1314     0597  3002               	movlw	2
  1315     0598  0659               	xorwf	main@key,w
  1316     0599  1D03               	btfss	3,2
  1317     059A  2DA8               	goto	l3077
  1318                           
  1319                           ;main.c: 68:                 operation_mode = 0x06;
  1320     059B  120A  158A  24EA  120A  118A  	fcall	_clear_dis
  1321                           
  1322                           ;main.c: 69:             }
  1323     05A0  3003               	movlw	3
  1324     05A1  1283               	bcf	3,5	;RP0=0, select bank0
  1325     05A2  1303               	bcf	3,6	;RP1=0, select bank0
  1326     05A3  00BC               	movwf	_operation_mode
  1327     05A4  3000               	movlw	0
  1328     05A5  00BD               	movwf	_operation_mode+1
  1329                           
  1330                           ;main.c: 70: 
  1331     05A6  3012               	movlw	18
  1332     05A7  2DB8               	goto	L1
  1333     05A8                     l3077:	
  1334                           ;main.c: 72:             {
  1335                           
  1336     05A8  3003               	movlw	3
  1337     05A9  0659               	xorwf	main@key,w
  1338     05AA  1D03               	btfss	3,2
  1339     05AB  2DBC               	goto	l3085
  1340                           
  1341                           ;main.c: 74:                 if(sec >= 60)
  1342     05AC  120A  158A  24EA  120A  118A  	fcall	_clear_dis
  1343                           
  1344                           ;main.c: 75:                 {
  1345     05B1  3004               	movlw	4
  1346     05B2  1283               	bcf	3,5	;RP0=0, select bank0
  1347     05B3  1303               	bcf	3,6	;RP1=0, select bank0
  1348     05B4  00BC               	movwf	_operation_mode
  1349     05B5  3000               	movlw	0
  1350     05B6  00BD               	movwf	_operation_mode+1
  1351                           
  1352                           ;main.c: 76:                     min++;
  1353     05B7  3014               	movlw	20
  1354     05B8                     L1:
  1355     05B8  00BA               	movwf	_reset_flag
  1356     05B9  3000               	movlw	0
  1357     05BA  00BB               	movwf	_reset_flag+1
  1358                           
  1359                           ;main.c: 77:                     sec = sec - 60;
  1360     05BB  2E16               	goto	l3125
  1361     05BC                     l3085:
  1362     05BC  3004               	movlw	4
  1363     05BD  0659               	xorwf	main@key,w
  1364     05BE  1D03               	btfss	3,2
  1365     05BF  2E00               	goto	l3115
  1366                           
  1367                           ;main.c: 79:             }
  1368     05C0  033C               	decf	_operation_mode,w
  1369     05C1  043D               	iorwf	_operation_mode+1,w
  1370     05C2  1D03               	btfss	3,2
  1371     05C3  2DCE               	goto	l3099
  1372                           
  1373                           ;main.c: 80:             else if(operation_mode == 0x08);main.c: 81:             {
  1374     05C4  01B8               	clrf	_min
  1375     05C5  01B9               	clrf	_min+1
  1376                           
  1377                           ;main.c: 82:                TMR2ON = 1;
  1378     05C6  301E               	movlw	30
  1379     05C7  00B6               	movwf	_sec
  1380     05C8  3000               	movlw	0
  1381     05C9  00B7               	movwf	_sec+1
  1382                           
  1383                           ;main.c: 83:                 RC2 = 1;
  1384     05CA  1512               	bsf	18,2	;volatile
  1385                           
  1386                           ;main.c: 84:                 operation_mode = 0x05;
  1387     05CB  1507               	bsf	7,2	;volatile
  1388                           
  1389                           ;main.c: 85:             }
  1390     05CC  3006               	movlw	6
  1391     05CD  2E05               	goto	L3
  1392     05CE                     l3099:	
  1393                           ;main.c: 86: 
  1394                           
  1395     05CE  3006               	movlw	6
  1396     05CF  063C               	xorwf	_operation_mode,w
  1397     05D0  043D               	iorwf	_operation_mode+1,w
  1398     05D1  1D03               	btfss	3,2
  1399     05D2  2DF7               	goto	l3109
  1400                           
  1401                           ;main.c: 89:             operation_mode = 0x08;;main.c: 90:         }
  1402     05D3  0836               	movf	_sec,w
  1403     05D4  3E1E               	addlw	30
  1404     05D5  00B6               	movwf	_sec
  1405     05D6  0837               	movf	_sec+1,w
  1406     05D7  1803               	skipnc
  1407     05D8  3E01               	addlw	1
  1408     05D9  3E00               	addlw	0
  1409     05DA  00B7               	movwf	_sec+1
  1410                           
  1411                           ;main.c: 91:         else if(key == 6) {
  1412     05DB  0837               	movf	_sec+1,w
  1413     05DC  3A80               	xorlw	128
  1414     05DD  00FF               	movwf	127
  1415     05DE  3080               	movlw	128
  1416     05DF  027F               	subwf	127,w
  1417     05E0  1D03               	skipz
  1418     05E1  2DE4               	goto	u2935
  1419     05E2  303C               	movlw	60
  1420     05E3  0236               	subwf	_sec,w
  1421     05E4                     u2935:
  1422     05E4  1C03               	skipc
  1423     05E5  2E16               	goto	l3125
  1424                           
  1425                           ;main.c: 92:             operation_mode = 0x07;;main.c: 93:             clear_dis();
  1426     05E6  3001               	movlw	1
  1427     05E7  1283               	bcf	3,5	;RP0=0, select bank0
  1428     05E8  1303               	bcf	3,6	;RP1=0, select bank0
  1429     05E9  07B8               	addwf	_min,f
  1430     05EA  1803               	skipnc
  1431     05EB  0AB9               	incf	_min+1,f
  1432     05EC  3000               	movlw	0
  1433     05ED  07B9               	addwf	_min+1,f
  1434                           
  1435                           ;main.c: 94:         }
  1436     05EE  0836               	movf	_sec,w
  1437     05EF  3EC4               	addlw	196
  1438     05F0  00B6               	movwf	_sec
  1439     05F1  0837               	movf	_sec+1,w
  1440     05F2  1803               	skipnc
  1441     05F3  3E01               	addlw	1
  1442     05F4  3EFF               	addlw	255
  1443     05F5  00B7               	movwf	_sec+1
  1444     05F6  2E16               	goto	l3125
  1445     05F7                     l3109:
  1446     05F7  3008               	movlw	8
  1447     05F8  063C               	xorwf	_operation_mode,w
  1448     05F9  043D               	iorwf	_operation_mode+1,w
  1449     05FA  1D03               	btfss	3,2
  1450     05FB  2E16               	goto	l3125
  1451                           
  1452                           ;main.c: 98: ;main.c: 99: 
  1453     05FC  1512               	bsf	18,2	;volatile
  1454                           
  1455                           ;main.c: 100: 
  1456     05FD  1507               	bsf	7,2	;volatile
  1457                           
  1458                           ;main.c: 101: }
  1459     05FE  3005               	movlw	5
  1460     05FF  2E05               	goto	L3
  1461     0600                     l3115:
  1462     0600  3005               	movlw	5
  1463     0601  0659               	xorwf	main@key,w
  1464     0602  1D03               	btfss	3,2
  1465     0603  2E09               	goto	l3119
  1466                           
  1467                           ;main.c: 106:         case 0x01:
  1468     0604  3008               	movlw	8
  1469     0605                     L3:
  1470     0605  00BC               	movwf	_operation_mode
  1471     0606  3000               	movlw	0
  1472     0607  00BD               	movwf	_operation_mode+1
  1473                           
  1474                           ;main.c: 107:             modes_display();
  1475     0608  2E16               	goto	l3125
  1476     0609                     l3119:
  1477     0609  3006               	movlw	6
  1478     060A  0659               	xorwf	main@key,w
  1479     060B  1D03               	btfss	3,2
  1480     060C  2E16               	goto	l3125
  1481                           
  1482                           ;main.c: 109:         case 0x05:
  1483     060D  3007               	movlw	7
  1484     060E  00BC               	movwf	_operation_mode
  1485     060F  3000               	movlw	0
  1486     0610  00BD               	movwf	_operation_mode+1
  1487     0611                     l3067:
  1488                           
  1489                           ;main.c: 65:                 sec = 30;
  1490     0611  120A  158A  24EA  120A  118A  	fcall	_clear_dis
  1491     0616                     l3125:
  1492                           
  1493                           ;main.c: 113:         case 0x02:
  1494     0616  1283               	bcf	3,5	;RP0=0, select bank0
  1495     0617  1303               	bcf	3,6	;RP1=0, select bank0
  1496     0618  0859               	movf	main@key,w
  1497     0619  120A  118A  2702  120A  118A  	fcall	_mode_select
  1498     061E  2D4C               	goto	l3047
  1499     061F                     __end_of_main:
  1500                           
  1501                           	psect	text1
  1502     0D1F                     __ptext1:	
  1503 ;; *************** function _read_matrix_keypad *****************
  1504 ;; Defined at:
  1505 ;;		line 108 in file "matrix_keypad.c"
  1506 ;; Parameters:    Size  Location     Type
  1507 ;;  mode            1    wreg     unsigned char 
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;  mode            1    5[COMMON] unsigned char 
  1510 ;;  key             1    6[COMMON] unsigned char 
  1511 ;; Return value:  Size  Location     Type
  1512 ;;                  1    wreg      unsigned char 
  1513 ;; Registers used:
  1514 ;;		wreg, status,2, status,0, pclath, cstack
  1515 ;; Tracked objects:
  1516 ;;		On entry : 0/0
  1517 ;;		On exit  : 0/0
  1518 ;;		Unchanged: 0/0
  1519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1520 ;;      Params:         0       0       0       0       0
  1521 ;;      Locals:         2       0       0       0       0
  1522 ;;      Temps:          0       0       0       0       0
  1523 ;;      Totals:         2       0       0       0       0
  1524 ;;Total ram usage:        2 bytes
  1525 ;; Hardware stack levels used: 1
  1526 ;; Hardware stack levels required when called: 2
  1527 ;; This function calls:
  1528 ;;		_scan_keypad
  1529 ;; This function is called by:
  1530 ;;		_main
  1531 ;; This function uses a non-reentrant model
  1532 ;;
  1533                           
  1534     0D1F                     _read_matrix_keypad:	
  1535                           ;psect for function _read_matrix_keypad
  1536                           
  1537                           
  1538                           ;incstack = 0
  1539                           ; Regs used in _read_matrix_keypad: [wreg+status,2+status,0+pclath+cstack]
  1540                           ;read_matrix_keypad@mode stored from wreg
  1541     0D1F  00F5               	movwf	read_matrix_keypad@mode
  1542                           
  1543                           ;matrix_keypad.c: 108: unsigned char read_matrix_keypad(unsigned char mode);matrix_keypa
      +                          d.c: 109: {;matrix_keypad.c: 110:     static unsigned char once = 1;;matrix_keypad.c: 11
      +                          1:     unsigned char key;;matrix_keypad.c: 113:     key = scan_keypad();
  1544     0D20  120A  158A  2774  120A  158A  	fcall	_scan_keypad
  1545     0D25  00F6               	movwf	read_matrix_keypad@key
  1546                           
  1547                           ;matrix_keypad.c: 115:     if (mode == 0)
  1548     0D26  0875               	movf	read_matrix_keypad@mode,w
  1549     0D27  1903               	btfsc	3,2
  1550     0D28  2D2E               	goto	l2237
  1551     0D29  2D30               	goto	l2243
  1552     0D2A                     l2245:
  1553     0D2A  087A               	movf	read_matrix_keypad@once,w
  1554     0D2B  1903               	btfsc	3,2
  1555     0D2C  2D33               	goto	l2255
  1556                           
  1557                           ;matrix_keypad.c: 122:         {;matrix_keypad.c: 123:             once = 0;
  1558     0D2D  01FA               	clrf	read_matrix_keypad@once
  1559     0D2E                     l2237:
  1560                           
  1561                           ;matrix_keypad.c: 116:     {;matrix_keypad.c: 117:         return key;
  1562     0D2E  0876               	movf	read_matrix_keypad@key,w
  1563     0D2F  0008               	return
  1564     0D30                     l2243:
  1565                           
  1566                           ;matrix_keypad.c: 120:     {;matrix_keypad.c: 121:         if ((key != 0xFF) && once)
  1567     0D30  0A76               	incf	read_matrix_keypad@key,w
  1568     0D31  1D03               	btfss	3,2
  1569     0D32  2D2A               	goto	l2245
  1570     0D33                     l2255:
  1571     0D33  0A76               	incf	read_matrix_keypad@key,w
  1572     0D34  1D03               	btfss	3,2
  1573     0D35  2D38               	goto	l2259
  1574                           
  1575                           ;matrix_keypad.c: 128:         {;matrix_keypad.c: 129:             once = 1;
  1576     0D36  01FA               	clrf	read_matrix_keypad@once
  1577     0D37  0AFA               	incf	read_matrix_keypad@once,f
  1578     0D38                     l2259:
  1579                           
  1580                           ;matrix_keypad.c: 133:     return 0xFF;
  1581     0D38  30FF               	movlw	255
  1582     0D39  0008               	return
  1583     0D3A                     __end_of_read_matrix_keypad:
  1584                           
  1585                           	psect	text2
  1586     0F74                     __ptext2:	
  1587 ;; *************** function _scan_keypad *****************
  1588 ;; Defined at:
  1589 ;;		line 21 in file "matrix_keypad.c"
  1590 ;; Parameters:    Size  Location     Type
  1591 ;;		None
  1592 ;; Auto vars:     Size  Location     Type
  1593 ;;  i               2    3[COMMON] int 
  1594 ;; Return value:  Size  Location     Type
  1595 ;;                  1    wreg      unsigned char 
  1596 ;; Registers used:
  1597 ;;		wreg, status,2, status,0
  1598 ;; Tracked objects:
  1599 ;;		On entry : 0/0
  1600 ;;		On exit  : 0/0
  1601 ;;		Unchanged: 0/0
  1602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1603 ;;      Params:         0       0       0       0       0
  1604 ;;      Locals:         2       0       0       0       0
  1605 ;;      Temps:          0       0       0       0       0
  1606 ;;      Totals:         2       0       0       0       0
  1607 ;;Total ram usage:        2 bytes
  1608 ;; Hardware stack levels used: 1
  1609 ;; Hardware stack levels required when called: 1
  1610 ;; This function calls:
  1611 ;;		Nothing
  1612 ;; This function is called by:
  1613 ;;		_read_matrix_keypad
  1614 ;; This function uses a non-reentrant model
  1615 ;;
  1616                           
  1617     0F74                     _scan_keypad:	
  1618                           ;psect for function _scan_keypad
  1619                           
  1620                           
  1621                           ;matrix_keypad.c: 23:     int i;;matrix_keypad.c: 25:     RD3 = 0;
  1622                           
  1623                           ;incstack = 0
  1624                           ; Regs used in _scan_keypad: [wreg+status,2+status,0]
  1625     0F74  1283               	bcf	3,5	;RP0=0, select bank0
  1626     0F75  1303               	bcf	3,6	;RP1=0, select bank0
  1627     0F76  1188               	bcf	8,3	;volatile
  1628                           
  1629                           ;matrix_keypad.c: 26:     RD2 = 1;
  1630     0F77  1508               	bsf	8,2	;volatile
  1631                           
  1632                           ;matrix_keypad.c: 27:     RD1 = 1;
  1633     0F78  1488               	bsf	8,1	;volatile
  1634                           
  1635                           ;matrix_keypad.c: 28:     RD0 = 1;
  1636     0F79  1408               	bsf	8,0	;volatile
  1637                           
  1638                           ;matrix_keypad.c: 30:     for (i = 100; i--; );
  1639     0F7A  3064               	movlw	100
  1640     0F7B  00F3               	movwf	scan_keypad@i
  1641     0F7C  3000               	movlw	0
  1642     0F7D  00F4               	movwf	scan_keypad@i+1
  1643     0F7E                     l1877:
  1644     0F7E  30FF               	movlw	255
  1645     0F7F  07F3               	addwf	scan_keypad@i,f
  1646     0F80  1803               	skipnc
  1647     0F81  0AF4               	incf	scan_keypad@i+1,f
  1648     0F82  30FF               	movlw	255
  1649     0F83  07F4               	addwf	scan_keypad@i+1,f
  1650     0F84  0A73               	incf	scan_keypad@i,w
  1651     0F85  1D03               	skipz
  1652     0F86  2F7E               	goto	l1877
  1653     0F87  0A74               	incf	scan_keypad@i+1,w
  1654     0F88  1D03               	btfss	3,2
  1655     0F89  2F7E               	goto	l1877
  1656                           
  1657                           ;matrix_keypad.c: 32:     if (RB0 == 0)
  1658     0F8A  1283               	bcf	3,5	;RP0=0, select bank0
  1659     0F8B  1303               	bcf	3,6	;RP1=0, select bank0
  1660     0F8C  1806               	btfsc	6,0	;volatile
  1661     0F8D  2F90               	goto	l29
  1662                           
  1663                           ;matrix_keypad.c: 33:     {;matrix_keypad.c: 34:         return 1;
  1664     0F8E  3001               	movlw	1
  1665     0F8F  0008               	return
  1666     0F90                     l29:	
  1667                           ;matrix_keypad.c: 36:     else if (RB1 == 0)
  1668                           
  1669     0F90  1886               	btfsc	6,1	;volatile
  1670     0F91  2F94               	goto	l32
  1671                           
  1672                           ;matrix_keypad.c: 37:     {;matrix_keypad.c: 38:         return 2;
  1673     0F92  3002               	movlw	2
  1674     0F93  0008               	return
  1675     0F94                     l32:	
  1676                           ;matrix_keypad.c: 40:     else if (RB2 == 0)
  1677                           
  1678     0F94  1906               	btfsc	6,2	;volatile
  1679     0F95  2F98               	goto	l31
  1680                           
  1681                           ;matrix_keypad.c: 41:     {;matrix_keypad.c: 42:         return 3;
  1682     0F96  3003               	movlw	3
  1683     0F97  0008               	return
  1684     0F98                     l31:
  1685                           
  1686                           ;matrix_keypad.c: 45:     RD3 = 1;
  1687     0F98  1588               	bsf	8,3	;volatile
  1688                           
  1689                           ;matrix_keypad.c: 46:     RD2 = 0;
  1690     0F99  1108               	bcf	8,2	;volatile
  1691                           
  1692                           ;matrix_keypad.c: 47:     RD1 = 1;
  1693     0F9A  1488               	bsf	8,1	;volatile
  1694                           
  1695                           ;matrix_keypad.c: 48:     RD0 = 1;
  1696     0F9B  1408               	bsf	8,0	;volatile
  1697                           
  1698                           ;matrix_keypad.c: 50:     for (i = 100; i--; );
  1699     0F9C  3064               	movlw	100
  1700     0F9D  00F3               	movwf	scan_keypad@i
  1701     0F9E  3000               	movlw	0
  1702     0F9F  00F4               	movwf	scan_keypad@i+1
  1703     0FA0                     l1897:
  1704     0FA0  30FF               	movlw	255
  1705     0FA1  07F3               	addwf	scan_keypad@i,f
  1706     0FA2  1803               	skipnc
  1707     0FA3  0AF4               	incf	scan_keypad@i+1,f
  1708     0FA4  30FF               	movlw	255
  1709     0FA5  07F4               	addwf	scan_keypad@i+1,f
  1710     0FA6  0A73               	incf	scan_keypad@i,w
  1711     0FA7  1D03               	skipz
  1712     0FA8  2FA0               	goto	l1897
  1713     0FA9  0A74               	incf	scan_keypad@i+1,w
  1714     0FAA  1D03               	btfss	3,2
  1715     0FAB  2FA0               	goto	l1897
  1716                           
  1717                           ;matrix_keypad.c: 52:     if (RB0 == 0)
  1718     0FAC  1283               	bcf	3,5	;RP0=0, select bank0
  1719     0FAD  1303               	bcf	3,6	;RP1=0, select bank0
  1720     0FAE  1806               	btfsc	6,0	;volatile
  1721     0FAF  2FB2               	goto	l38
  1722                           
  1723                           ;matrix_keypad.c: 53:     {;matrix_keypad.c: 54:         return 4;
  1724     0FB0  3004               	movlw	4
  1725     0FB1  0008               	return
  1726     0FB2                     l38:	
  1727                           ;matrix_keypad.c: 56:     else if (RB1 == 0)
  1728                           
  1729     0FB2  1886               	btfsc	6,1	;volatile
  1730     0FB3  2FB6               	goto	l40
  1731                           
  1732                           ;matrix_keypad.c: 57:     {;matrix_keypad.c: 58:         return 5;
  1733     0FB4  3005               	movlw	5
  1734     0FB5  0008               	return
  1735     0FB6                     l40:	
  1736                           ;matrix_keypad.c: 60:     else if (RB2 == 0)
  1737                           
  1738     0FB6  1906               	btfsc	6,2	;volatile
  1739     0FB7  2FBA               	goto	l39
  1740                           
  1741                           ;matrix_keypad.c: 61:     {;matrix_keypad.c: 62:         return 6;
  1742     0FB8  3006               	movlw	6
  1743     0FB9  0008               	return
  1744     0FBA                     l39:
  1745                           
  1746                           ;matrix_keypad.c: 65:     RD3 = 1;
  1747     0FBA  1588               	bsf	8,3	;volatile
  1748                           
  1749                           ;matrix_keypad.c: 66:     RD2 = 1;
  1750     0FBB  1508               	bsf	8,2	;volatile
  1751                           
  1752                           ;matrix_keypad.c: 67:     RD1 = 0;
  1753     0FBC  1088               	bcf	8,1	;volatile
  1754                           
  1755                           ;matrix_keypad.c: 68:     RD0 = 1;
  1756     0FBD  1408               	bsf	8,0	;volatile
  1757                           
  1758                           ;matrix_keypad.c: 70:     for (i = 100; i--; );
  1759     0FBE  3064               	movlw	100
  1760     0FBF  00F3               	movwf	scan_keypad@i
  1761     0FC0  3000               	movlw	0
  1762     0FC1  00F4               	movwf	scan_keypad@i+1
  1763     0FC2                     l1917:
  1764     0FC2  30FF               	movlw	255
  1765     0FC3  07F3               	addwf	scan_keypad@i,f
  1766     0FC4  1803               	skipnc
  1767     0FC5  0AF4               	incf	scan_keypad@i+1,f
  1768     0FC6  30FF               	movlw	255
  1769     0FC7  07F4               	addwf	scan_keypad@i+1,f
  1770     0FC8  0A73               	incf	scan_keypad@i,w
  1771     0FC9  1D03               	skipz
  1772     0FCA  2FC2               	goto	l1917
  1773     0FCB  0A74               	incf	scan_keypad@i+1,w
  1774     0FCC  1D03               	btfss	3,2
  1775     0FCD  2FC2               	goto	l1917
  1776                           
  1777                           ;matrix_keypad.c: 72:     if (RB0 == 0)
  1778     0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  1779     0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  1780     0FD0  1806               	btfsc	6,0	;volatile
  1781     0FD1  2FD4               	goto	l46
  1782                           
  1783                           ;matrix_keypad.c: 73:     {;matrix_keypad.c: 74:         return 7;
  1784     0FD2  3007               	movlw	7
  1785     0FD3  0008               	return
  1786     0FD4                     l46:	
  1787                           ;matrix_keypad.c: 76:     else if (RB1 == 0)
  1788                           
  1789     0FD4  1886               	btfsc	6,1	;volatile
  1790     0FD5  2FD8               	goto	l48
  1791                           
  1792                           ;matrix_keypad.c: 77:     {;matrix_keypad.c: 78:         return 8;
  1793     0FD6  3008               	movlw	8
  1794     0FD7  0008               	return
  1795     0FD8                     l48:	
  1796                           ;matrix_keypad.c: 80:     else if (RB2 == 0)
  1797                           
  1798     0FD8  1906               	btfsc	6,2	;volatile
  1799     0FD9  2FDC               	goto	l47
  1800                           
  1801                           ;matrix_keypad.c: 81:     {;matrix_keypad.c: 82:         return 9;
  1802     0FDA  3009               	movlw	9
  1803     0FDB  0008               	return
  1804     0FDC                     l47:
  1805                           
  1806                           ;matrix_keypad.c: 85:     RD3 = 1;
  1807     0FDC  1588               	bsf	8,3	;volatile
  1808                           
  1809                           ;matrix_keypad.c: 86:     RD2 = 1;
  1810     0FDD  1508               	bsf	8,2	;volatile
  1811                           
  1812                           ;matrix_keypad.c: 87:     RD1 = 1;
  1813     0FDE  1488               	bsf	8,1	;volatile
  1814                           
  1815                           ;matrix_keypad.c: 88:     RD0 = 0;
  1816     0FDF  1008               	bcf	8,0	;volatile
  1817                           
  1818                           ;matrix_keypad.c: 90:     for (i = 100; i--; );
  1819     0FE0  3064               	movlw	100
  1820     0FE1  00F3               	movwf	scan_keypad@i
  1821     0FE2  3000               	movlw	0
  1822     0FE3  00F4               	movwf	scan_keypad@i+1
  1823     0FE4                     l1937:
  1824     0FE4  30FF               	movlw	255
  1825     0FE5  07F3               	addwf	scan_keypad@i,f
  1826     0FE6  1803               	skipnc
  1827     0FE7  0AF4               	incf	scan_keypad@i+1,f
  1828     0FE8  30FF               	movlw	255
  1829     0FE9  07F4               	addwf	scan_keypad@i+1,f
  1830     0FEA  0A73               	incf	scan_keypad@i,w
  1831     0FEB  1D03               	skipz
  1832     0FEC  2FE4               	goto	l1937
  1833     0FED  0A74               	incf	scan_keypad@i+1,w
  1834     0FEE  1D03               	btfss	3,2
  1835     0FEF  2FE4               	goto	l1937
  1836                           
  1837                           ;matrix_keypad.c: 92:     if (RB0 == 0)
  1838     0FF0  1283               	bcf	3,5	;RP0=0, select bank0
  1839     0FF1  1303               	bcf	3,6	;RP1=0, select bank0
  1840     0FF2  1806               	btfsc	6,0	;volatile
  1841     0FF3  2FF6               	goto	l54
  1842                           
  1843                           ;matrix_keypad.c: 93:     {;matrix_keypad.c: 94:         return '*';
  1844     0FF4  302A               	movlw	42
  1845     0FF5  0008               	return
  1846     0FF6                     l54:	
  1847                           ;matrix_keypad.c: 96:     else if (RB1 == 0)
  1848                           
  1849     0FF6  1886               	btfsc	6,1	;volatile
  1850     0FF7  2FFA               	goto	l56
  1851                           
  1852                           ;matrix_keypad.c: 97:     {;matrix_keypad.c: 98:         return 0;
  1853     0FF8  3000               	movlw	0
  1854     0FF9  0008               	return
  1855     0FFA                     l56:	
  1856                           ;matrix_keypad.c: 100:     else if (RB2 == 0)
  1857                           
  1858     0FFA  1906               	btfsc	6,2	;volatile
  1859     0FFB  2FFE               	goto	l1955
  1860                           
  1861                           ;matrix_keypad.c: 101:     {;matrix_keypad.c: 102:         return '#';
  1862     0FFC  3023               	movlw	35
  1863     0FFD  0008               	return
  1864     0FFE                     l1955:
  1865                           
  1866                           ;matrix_keypad.c: 105:     return 0xFF;
  1867     0FFE  30FF               	movlw	255
  1868     0FFF  0008               	return
  1869     1000                     __end_of_scan_keypad:
  1870                           
  1871                           	psect	text3
  1872     0E95                     __ptext3:	
  1873 ;; *************** function _power_on *****************
  1874 ;; Defined at:
  1875 ;;		line 184 in file "main.c"
  1876 ;; Parameters:    Size  Location     Type
  1877 ;;		None
  1878 ;; Auto vars:     Size  Location     Type
  1879 ;;  i               2   16[BANK0 ] int 
  1880 ;;  i               2   14[BANK0 ] int 
  1881 ;; Return value:  Size  Location     Type
  1882 ;;                  1    wreg      void 
  1883 ;; Registers used:
  1884 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1885 ;; Tracked objects:
  1886 ;;		On entry : 0/0
  1887 ;;		On exit  : 0/0
  1888 ;;		Unchanged: 0/0
  1889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1890 ;;      Params:         0       0       0       0       0
  1891 ;;      Locals:         0       4       0       0       0
  1892 ;;      Temps:          0       3       0       0       0
  1893 ;;      Totals:         0       7       0       0       0
  1894 ;;Total ram usage:        7 bytes
  1895 ;; Hardware stack levels used: 1
  1896 ;; Hardware stack levels required when called: 3
  1897 ;; This function calls:
  1898 ;;		_clcd_print
  1899 ;;		_clcd_putch
  1900 ;; This function is called by:
  1901 ;;		_main
  1902 ;; This function uses a non-reentrant model
  1903 ;;
  1904                           
  1905     0E95                     _power_on:	
  1906                           ;psect for function _power_on
  1907                           
  1908                           
  1909                           ;main.c: 186:     clcd_print("3.Convection", (0x90 + 0));
  1910                           
  1911                           ;incstack = 0
  1912                           ; Regs used in _power_on: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1913     0E95  1283               	bcf	3,5	;RP0=0, select bank0
  1914     0E96  1303               	bcf	3,6	;RP1=0, select bank0
  1915     0E97  01D2               	clrf	power_on@i
  1916     0E98  01D3               	clrf	power_on@i+1
  1917     0E99                     l2967:
  1918                           
  1919                           ;main.c: 187:     clcd_print("4.Start", (0xD0 + 0));;main.c: 188: 
  1920     0E99  1283               	bcf	3,5	;RP0=0, select bank0
  1921     0E9A  1303               	bcf	3,6	;RP1=0, select bank0
  1922     0E9B  0852               	movf	power_on@i,w
  1923     0E9C  3E80               	addlw	128
  1924     0E9D  00CE               	movwf	clcd_putch@addr
  1925     0E9E  30FF               	movlw	255
  1926     0E9F  120A  158A  250E  120A  158A  	fcall	_clcd_putch
  1927                           
  1928                           ;main.c: 189: }
  1929     0EA4  3001               	movlw	1
  1930     0EA5  1283               	bcf	3,5	;RP0=0, select bank0
  1931     0EA6  1303               	bcf	3,6	;RP1=0, select bank0
  1932     0EA7  07D2               	addwf	power_on@i,f
  1933     0EA8  1803               	skipnc
  1934     0EA9  0AD3               	incf	power_on@i+1,f
  1935     0EAA  3000               	movlw	0
  1936     0EAB  07D3               	addwf	power_on@i+1,f
  1937     0EAC  0853               	movf	power_on@i+1,w
  1938     0EAD  3A80               	xorlw	128
  1939     0EAE  00FF               	movwf	127
  1940     0EAF  3080               	movlw	128
  1941     0EB0  027F               	subwf	127,w
  1942     0EB1  1D03               	skipz
  1943     0EB2  2EB5               	goto	u2785
  1944     0EB3  3010               	movlw	16
  1945     0EB4  0252               	subwf	power_on@i,w
  1946     0EB5                     u2785:
  1947     0EB5  1C03               	skipc
  1948     0EB6  2E99               	goto	l2967
  1949                           
  1950                           ;main.c: 190: void clear_dis(void)
  1951     0EB7  3022               	movlw	low (STR_2| (0+32768))
  1952     0EB8  1283               	bcf	3,5	;RP0=0, select bank0
  1953     0EB9  1303               	bcf	3,6	;RP1=0, select bank0
  1954     0EBA  00C4               	movwf	clcd_print@str
  1955     0EBB  3084               	movlw	high (STR_2| (0+32768))
  1956     0EBC  00C5               	movwf	clcd_print@str+1
  1957     0EBD  30C0               	movlw	192
  1958     0EBE  00C6               	movwf	clcd_print@addr
  1959     0EBF  120A  158A  257D  120A  158A  	fcall	_clcd_print
  1960                           
  1961                           ;main.c: 191: {
  1962     0EC4  3055               	movlw	low (STR_3| (0+32768))
  1963     0EC5  1283               	bcf	3,5	;RP0=0, select bank0
  1964     0EC6  1303               	bcf	3,6	;RP1=0, select bank0
  1965     0EC7  00C4               	movwf	clcd_print@str
  1966     0EC8  3084               	movlw	high (STR_3| (0+32768))
  1967     0EC9  00C5               	movwf	clcd_print@str+1
  1968     0ECA  3090               	movlw	144
  1969     0ECB  00C6               	movwf	clcd_print@addr
  1970     0ECC  120A  158A  257D  120A  158A  	fcall	_clcd_print
  1971                           
  1972                           ;main.c: 192:     clcd_write(0x01, 0);
  1973     0ED1  1283               	bcf	3,5	;RP0=0, select bank0
  1974     0ED2  1303               	bcf	3,6	;RP1=0, select bank0
  1975     0ED3  01D4               	clrf	power_on@i_145
  1976     0ED4  01D5               	clrf	power_on@i_145+1
  1977     0ED5                     l2981:
  1978                           
  1979                           ;main.c: 193: };main.c: 194: void set_time(unsigned char key) {
  1980     0ED5  1283               	bcf	3,5	;RP0=0, select bank0
  1981     0ED6  1303               	bcf	3,6	;RP1=0, select bank0
  1982     0ED7  0854               	movf	power_on@i_145,w
  1983     0ED8  3ED0               	addlw	208
  1984     0ED9  00CE               	movwf	clcd_putch@addr
  1985     0EDA  30FF               	movlw	255
  1986     0EDB  120A  158A  250E  120A  158A  	fcall	_clcd_putch
  1987                           
  1988                           ;main.c: 195:     static int wait, blink, blink_pos, key_count;
  1989     0EE0  3001               	movlw	1
  1990     0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  1991     0EE2  1303               	bcf	3,6	;RP1=0, select bank0
  1992     0EE3  07D4               	addwf	power_on@i_145,f
  1993     0EE4  1803               	skipnc
  1994     0EE5  0AD5               	incf	power_on@i_145+1,f
  1995     0EE6  3000               	movlw	0
  1996     0EE7  07D5               	addwf	power_on@i_145+1,f
  1997     0EE8  0855               	movf	power_on@i_145+1,w
  1998     0EE9  3A80               	xorlw	128
  1999     0EEA  00FF               	movwf	127
  2000     0EEB  3080               	movlw	128
  2001     0EEC  027F               	subwf	127,w
  2002     0EED  1D03               	skipz
  2003     0EEE  2EF1               	goto	u2795
  2004     0EEF  3010               	movlw	16
  2005     0EF0  0254               	subwf	power_on@i_145,w
  2006     0EF1                     u2795:
  2007     0EF1  1C03               	skipc
  2008     0EF2  2ED5               	goto	l2981
  2009                           
  2010                           ;main.c: 196:     if(reset_flag >= 0x11)
  2011     0EF3  3027               	movlw	39
  2012     0EF4  1283               	bcf	3,5	;RP0=0, select bank0
  2013     0EF5  1303               	bcf	3,6	;RP1=0, select bank0
  2014     0EF6  00D1               	movwf	??_power_on+2
  2015     0EF7  300D               	movlw	13
  2016     0EF8  00D0               	movwf	??_power_on+1
  2017     0EF9  3025               	movlw	37
  2018     0EFA  00CF               	movwf	??_power_on
  2019     0EFB                     u2987:
  2020     0EFB  0BCF               	decfsz	??_power_on,f
  2021     0EFC  2EFB               	goto	u2987
  2022     0EFD  0BD0               	decfsz	??_power_on+1,f
  2023     0EFE  2EFB               	goto	u2987
  2024     0EFF  0BD1               	decfsz	??_power_on+2,f
  2025     0F00  2EFB               	goto	u2987
  2026     0F01  2F02               	nop2
  2027     0F02  0008               	return
  2028     0F03                     __end_of_power_on:
  2029                           
  2030                           	psect	text4
  2031     0702                     __ptext4:	
  2032 ;; *************** function _mode_select *****************
  2033 ;; Defined at:
  2034 ;;		line 120 in file "main.c"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;  key             1    wreg     unsigned char 
  2037 ;; Auto vars:     Size  Location     Type
  2038 ;;  key             1   17[BANK0 ] unsigned char 
  2039 ;; Return value:  Size  Location     Type
  2040 ;;                  1    wreg      void 
  2041 ;; Registers used:
  2042 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2043 ;; Tracked objects:
  2044 ;;		On entry : 0/0
  2045 ;;		On exit  : 0/0
  2046 ;;		Unchanged: 0/0
  2047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2048 ;;      Params:         0       0       0       0       0
  2049 ;;      Locals:         0       1       0       0       0
  2050 ;;      Temps:          0       2       0       0       0
  2051 ;;      Totals:         0       3       0       0       0
  2052 ;;Total ram usage:        3 bytes
  2053 ;; Hardware stack levels used: 1
  2054 ;; Hardware stack levels required when called: 5
  2055 ;; This function calls:
  2056 ;;		_clear_dis
  2057 ;;		_modes_display
  2058 ;;		_set_temp
  2059 ;;		_set_time
  2060 ;;		_time_dis
  2061 ;; This function is called by:
  2062 ;;		_main
  2063 ;; This function uses a non-reentrant model
  2064 ;;
  2065                           
  2066     0702                     _mode_select:	
  2067                           ;psect for function _mode_select
  2068                           
  2069                           
  2070                           ;incstack = 0
  2071                           ; Regs used in _mode_select: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2072                           ;mode_select@key stored from wreg
  2073     0702  1283               	bcf	3,5	;RP0=0, select bank0
  2074     0703  1303               	bcf	3,6	;RP1=0, select bank0
  2075     0704  00D5               	movwf	mode_select@key
  2076                           
  2077                           ;main.c: 121:             {
  2078     0705  2F6B               	goto	l3027
  2079     0706                     l2991:
  2080                           
  2081                           ;main.c: 124:                 {
  2082     0706  120A  158A  25AD  120A  118A  	fcall	_modes_display
  2083                           
  2084                           ;main.c: 125:                     flag = 1;
  2085     070B  2F8A               	goto	l3029
  2086     070C                     l2993:
  2087                           
  2088                           ;main.c: 128:                 else if(ret == 0)
  2089     070C  120A  118A  261F  120A  118A  	fcall	_time_dis
  2090                           
  2091                           ;main.c: 129:                 {
  2092     0711  2F8A               	goto	l3029
  2093     0712                     l2995:
  2094                           
  2095                           ;main.c: 131:                     flag = 1;
  2096     0712  0855               	movf	mode_select@key,w
  2097     0713  120A  118A  2024  120A  118A  	fcall	_set_time
  2098                           
  2099                           ;main.c: 132:                     heat_flag = 1;
  2100     0718  2F8A               	goto	l3029
  2101     0719                     l2997:
  2102                           
  2103                           ;main.c: 134:                     reset_flag = 0x13;
  2104     0719  0855               	movf	mode_select@key,w
  2105     071A  120A  118A  2024  120A  118A  	fcall	_set_time
  2106                           
  2107                           ;main.c: 135:                 }
  2108     071F  2F8A               	goto	l3029
  2109     0720                     l2999:
  2110                           
  2111                           ;main.c: 137:                 {
  2112     0720  0830               	movf	_heat_flag,w
  2113     0721  0431               	iorwf	_heat_flag+1,w
  2114     0722  1D03               	btfss	3,2
  2115     0723  2F58               	goto	l3019
  2116                           
  2117                           ;main.c: 138:                     flag = 0;;main.c: 139:                 }
  2118     0724  0855               	movf	mode_select@key,w
  2119     0725  120A  118A  21EA  120A  118A  	fcall	_set_temp
  2120     072A  1283               	bcf	3,5	;RP0=0, select bank0
  2121     072B  1303               	bcf	3,6	;RP1=0, select bank0
  2122     072C  00D3               	movwf	??_mode_select
  2123     072D  01D4               	clrf	??_mode_select+1
  2124     072E  0853               	movf	??_mode_select,w
  2125     072F  00B4               	movwf	_ret
  2126     0730  0854               	movf	??_mode_select+1,w
  2127     0731  00B5               	movwf	_ret+1
  2128                           
  2129                           ;main.c: 140:             }
  2130     0732  0334               	decf	_ret,w
  2131     0733  0435               	iorwf	_ret+1,w
  2132     0734  1D03               	btfss	3,2
  2133     0735  2F3C               	goto	l3007
  2134                           
  2135                           ;main.c: 141:             else;main.c: 142:             {
  2136     0736  3001               	movlw	1
  2137     0737  00B2               	movwf	_flag
  2138     0738  3000               	movlw	0
  2139     0739  00B3               	movwf	_flag+1
  2140                           
  2141                           ;main.c: 143:                 flag = 0;
  2142     073A  3014               	movlw	20
  2143     073B  2F51               	goto	L4
  2144     073C                     l3007:	
  2145                           ;main.c: 144:                 set_time(key);
  2146                           
  2147     073C  0834               	movf	_ret,w
  2148     073D  0435               	iorwf	_ret+1,w
  2149     073E  1D03               	btfss	3,2
  2150     073F  2F55               	goto	l3017
  2151                           
  2152                           ;main.c: 146:             break;;main.c: 147:         case 0x08:
  2153     0740  1112               	bcf	18,2	;volatile
  2154                           
  2155                           ;main.c: 148:             TMR2ON = 0;
  2156     0741  3001               	movlw	1
  2157     0742  00B2               	movwf	_flag
  2158     0743  3000               	movlw	0
  2159     0744  00B3               	movwf	_flag+1
  2160                           
  2161                           ;main.c: 149:             RC2 = 0;
  2162     0745  3001               	movlw	1
  2163     0746  00B0               	movwf	_heat_flag
  2164     0747  3000               	movlw	0
  2165     0748  00B1               	movwf	_heat_flag+1
  2166                           
  2167                           ;main.c: 150:             break;
  2168     0749  120A  158A  24EA  120A  118A  	fcall	_clear_dis
  2169                           
  2170                           ;main.c: 151:         case 0x07:
  2171     074E  3013               	movlw	19
  2172     074F  1283               	bcf	3,5	;RP0=0, select bank0
  2173     0750  1303               	bcf	3,6	;RP1=0, select bank0
  2174     0751                     L4:
  2175     0751  00BA               	movwf	_reset_flag
  2176     0752  3000               	movlw	0
  2177     0753  00BB               	movwf	_reset_flag+1
  2178                           
  2179                           ;main.c: 152:             TMR2ON = 0;
  2180     0754  2F8A               	goto	l3029
  2181     0755                     l3017:
  2182                           
  2183                           ;main.c: 154:             operation_mode = 0x01;;main.c: 155:             break;
  2184     0755  01B2               	clrf	_flag
  2185     0756  01B3               	clrf	_flag+1
  2186     0757  2F8A               	goto	l3029
  2187     0758                     l3019:
  2188                           
  2189                           ;main.c: 159:         reset_flag = 0x0F;;main.c: 160:     }
  2190     0758  01B2               	clrf	_flag
  2191     0759  01B3               	clrf	_flag+1
  2192                           
  2193                           ;main.c: 161: }
  2194     075A  0855               	movf	mode_select@key,w
  2195     075B  120A  118A  2024  120A  118A  	fcall	_set_time
  2196     0760  2F8A               	goto	l3029
  2197     0761                     l213:	
  2198                           ;main.c: 164: 
  2199                           
  2200                           
  2201                           ;main.c: 165: 
  2202     0761  1112               	bcf	18,2	;volatile
  2203                           
  2204                           ;main.c: 166: 
  2205     0762  1107               	bcf	7,2	;volatile
  2206                           
  2207                           ;main.c: 167: void power_on(void)
  2208     0763  2F8A               	goto	l3029
  2209     0764                     l214:	
  2210                           ;main.c: 168: {
  2211                           
  2212                           
  2213                           ;main.c: 169:     for(int i = 0; i<16; i++)
  2214     0764  1112               	bcf	18,2	;volatile
  2215                           
  2216                           ;main.c: 170:     {
  2217     0765  1107               	bcf	7,2	;volatile
  2218                           
  2219                           ;main.c: 171:         clcd_putch(0xFF, (0x80 + i));
  2220     0766  3001               	movlw	1
  2221     0767  00BC               	movwf	_operation_mode
  2222     0768  3000               	movlw	0
  2223     0769  00BD               	movwf	_operation_mode+1
  2224                           
  2225                           ;main.c: 172:     }
  2226     076A  2F8A               	goto	l3029
  2227     076B                     l3027:
  2228                           
  2229                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2230                           ; Switch size 1, requested type "simple"
  2231                           ; Number of cases is 1, Range of values is 0 to 0
  2232                           ; switch strategies available:
  2233                           ; Name         Instructions Cycles
  2234                           ; simple_byte            4     3 (average)
  2235                           ; direct_byte           11     8 (fixed)
  2236                           ; jumptable            260     6 (fixed)
  2237                           ;	Chosen strategy is simple_byte
  2238     076B  083D               	movf	_operation_mode+1,w
  2239     076C  3A00               	xorlw	0	; case 0
  2240     076D  1903               	skipnz
  2241     076E  2F70               	goto	l3177
  2242     076F  2F8A               	goto	l3029
  2243     0770                     l3177:
  2244                           
  2245                           ; Switch size 1, requested type "simple"
  2246                           ; Number of cases is 8, Range of values is 1 to 8
  2247                           ; switch strategies available:
  2248                           ; Name         Instructions Cycles
  2249                           ; simple_byte           25    13 (average)
  2250                           ; direct_byte           35    11 (fixed)
  2251                           ; jumptable            263     9 (fixed)
  2252                           ;	Chosen strategy is simple_byte
  2253     0770  083C               	movf	_operation_mode,w
  2254     0771  3A01               	xorlw	1	; case 1
  2255     0772  1903               	skipnz
  2256     0773  2F06               	goto	l2991
  2257     0774  3A03               	xorlw	3	; case 2
  2258     0775  1903               	skipnz
  2259     0776  2F12               	goto	l2995
  2260     0777  3A01               	xorlw	1	; case 3
  2261     0778  1903               	skipnz
  2262     0779  2F19               	goto	l2997
  2263     077A  3A07               	xorlw	7	; case 4
  2264     077B  1903               	skipnz
  2265     077C  2F20               	goto	l2999
  2266     077D  3A01               	xorlw	1	; case 5
  2267     077E  1903               	skipnz
  2268     077F  2F0C               	goto	l2993
  2269     0780  3A03               	xorlw	3	; case 6
  2270     0781  1903               	skipnz
  2271     0782  2F0C               	goto	l2993
  2272     0783  3A01               	xorlw	1	; case 7
  2273     0784  1903               	skipnz
  2274     0785  2F64               	goto	l214
  2275     0786  3A0F               	xorlw	15	; case 8
  2276     0787  1903               	skipnz
  2277     0788  2F61               	goto	l213
  2278     0789  2F8A               	goto	l3029
  2279     078A                     l3029:
  2280                           
  2281                           ;main.c: 174:     clcd_print(" Microwave Oven ", (0x90 + 0));
  2282     078A  1283               	bcf	3,5	;RP0=0, select bank0
  2283     078B  1303               	bcf	3,6	;RP1=0, select bank0
  2284     078C  0832               	movf	_flag,w
  2285     078D  0433               	iorwf	_flag+1,w
  2286     078E  1D03               	btfss	3,2
  2287     078F  0008               	return
  2288                           
  2289                           ;main.c: 175:     for(int i = 0; i<16; i++);main.c: 176:     {
  2290     0790  300F               	movlw	15
  2291     0791  00BA               	movwf	_reset_flag
  2292     0792  3000               	movlw	0
  2293     0793  00BB               	movwf	_reset_flag+1
  2294     0794  0008               	return
  2295     0795                     __end_of_mode_select:
  2296                           
  2297                           	psect	text5
  2298     061F                     __ptext5:	
  2299 ;; *************** function _time_dis *****************
  2300 ;; Defined at:
  2301 ;;		line 333 in file "main.c"
  2302 ;; Parameters:    Size  Location     Type
  2303 ;;		None
  2304 ;; Auto vars:     Size  Location     Type
  2305 ;;		None
  2306 ;; Return value:  Size  Location     Type
  2307 ;;                  1    wreg      void 
  2308 ;; Registers used:
  2309 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2310 ;; Tracked objects:
  2311 ;;		On entry : 0/0
  2312 ;;		On exit  : 0/0
  2313 ;;		Unchanged: 0/0
  2314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2315 ;;      Params:         0       0       0       0       0
  2316 ;;      Locals:         0       0       0       0       0
  2317 ;;      Temps:          0       3       0       0       0
  2318 ;;      Totals:         0       3       0       0       0
  2319 ;;Total ram usage:        3 bytes
  2320 ;; Hardware stack levels used: 1
  2321 ;; Hardware stack levels required when called: 4
  2322 ;; This function calls:
  2323 ;;		___awdiv
  2324 ;;		___awmod
  2325 ;;		_clcd_print
  2326 ;;		_clcd_putch
  2327 ;;		_clear_dis
  2328 ;;		_door_status_check
  2329 ;; This function is called by:
  2330 ;;		_mode_select
  2331 ;; This function uses a non-reentrant model
  2332 ;;
  2333                           
  2334     061F                     _time_dis:	
  2335                           ;psect for function _time_dis
  2336                           
  2337                           
  2338                           ;main.c: 335: 
  2339                           
  2340                           ;incstack = 0
  2341                           ; Regs used in _time_dis: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2342     061F  120A  158A  25E0  120A  118A  	fcall	_door_status_check
  2343                           
  2344                           ;main.c: 336: 
  2345     0624  3015               	movlw	low (STR_15| (0+32768))
  2346     0625  1283               	bcf	3,5	;RP0=0, select bank0
  2347     0626  1303               	bcf	3,6	;RP1=0, select bank0
  2348     0627  00C4               	movwf	clcd_print@str
  2349     0628  3085               	movlw	high (STR_15| (0+32768))
  2350     0629  00C5               	movwf	clcd_print@str+1
  2351     062A  3080               	movlw	128
  2352     062B  00C6               	movwf	clcd_print@addr
  2353     062C  120A  158A  257D  120A  118A  	fcall	_clcd_print
  2354                           
  2355                           ;main.c: 338:     clcd_print(sec_arr, (0x80 + 12));
  2356     0631  300A               	movlw	10
  2357     0632  00F3               	movwf	___awdiv@divisor
  2358     0633  3000               	movlw	0
  2359     0634  00F4               	movwf	___awdiv@divisor+1
  2360     0635  1283               	bcf	3,5	;RP0=0, select bank0
  2361     0636  1303               	bcf	3,6	;RP1=0, select bank0
  2362     0637  0839               	movf	_min+1,w
  2363     0638  00F6               	movwf	___awdiv@dividend+1
  2364     0639  0838               	movf	_min,w
  2365     063A  00F5               	movwf	___awdiv@dividend
  2366     063B  120A  118A  2795  120A  118A  	fcall	___awdiv
  2367     0640  0873               	movf	?___awdiv,w
  2368     0641  3E30               	addlw	48
  2369     0642  1283               	bcf	3,5	;RP0=0, select bank0
  2370     0643  1303               	bcf	3,6	;RP1=0, select bank0
  2371     0644  00BE               	movwf	_min_arr
  2372                           
  2373                           ;main.c: 339: 
  2374     0645  300A               	movlw	10
  2375     0646  00C8               	movwf	___awmod@divisor
  2376     0647  3000               	movlw	0
  2377     0648  00C9               	movwf	___awmod@divisor+1
  2378     0649  0839               	movf	_min+1,w
  2379     064A  00CB               	movwf	___awmod@dividend+1
  2380     064B  0838               	movf	_min,w
  2381     064C  00CA               	movwf	___awmod@dividend
  2382     064D  120A  158A  2648  120A  118A  	fcall	___awmod
  2383     0652  1283               	bcf	3,5	;RP0=0, select bank0
  2384     0653  1303               	bcf	3,6	;RP1=0, select bank0
  2385     0654  0848               	movf	?___awmod,w
  2386     0655  3E30               	addlw	48
  2387     0656  00BF               	movwf	_min_arr+1
  2388                           
  2389                           ;main.c: 340:     clcd_print(" 4.Start/Resume ", (0xC0 + 0));
  2390     0657  01C0               	clrf	_min_arr+2
  2391                           
  2392                           ;main.c: 342:     clcd_print(" 6.Stop         ", (0xD0 + 0));
  2393     0658  303E               	movlw	(low (_min_arr| 0))& (0+255)
  2394     0659  00C4               	movwf	clcd_print@str
  2395     065A  3000               	movlw	0
  2396     065B  00C5               	movwf	clcd_print@str+1
  2397     065C  3089               	movlw	137
  2398     065D  00C6               	movwf	clcd_print@addr
  2399     065E  120A  158A  257D  120A  118A  	fcall	_clcd_print
  2400                           
  2401                           ;main.c: 344:     if((min == 0) && (sec == 0))
  2402     0663  308B               	movlw	139
  2403     0664  1283               	bcf	3,5	;RP0=0, select bank0
  2404     0665  1303               	bcf	3,6	;RP1=0, select bank0
  2405     0666  00CE               	movwf	clcd_putch@addr
  2406     0667  303A               	movlw	58
  2407     0668  120A  158A  250E  120A  118A  	fcall	_clcd_putch
  2408                           
  2409                           ;main.c: 347:         RC2 = 0;
  2410     066D  300A               	movlw	10
  2411     066E  00F3               	movwf	___awdiv@divisor
  2412     066F  3000               	movlw	0
  2413     0670  00F4               	movwf	___awdiv@divisor+1
  2414     0671  1283               	bcf	3,5	;RP0=0, select bank0
  2415     0672  1303               	bcf	3,6	;RP1=0, select bank0
  2416     0673  0837               	movf	_sec+1,w
  2417     0674  00F6               	movwf	___awdiv@dividend+1
  2418     0675  0836               	movf	_sec,w
  2419     0676  00F5               	movwf	___awdiv@dividend
  2420     0677  120A  118A  2795  120A  118A  	fcall	___awdiv
  2421     067C  0873               	movf	?___awdiv,w
  2422     067D  3E30               	addlw	48
  2423     067E  1283               	bcf	3,5	;RP0=0, select bank0
  2424     067F  1303               	bcf	3,6	;RP1=0, select bank0
  2425     0680  00C1               	movwf	_sec_arr
  2426                           
  2427                           ;main.c: 348:         clear_dis();
  2428     0681  300A               	movlw	10
  2429     0682  00C8               	movwf	___awmod@divisor
  2430     0683  3000               	movlw	0
  2431     0684  00C9               	movwf	___awmod@divisor+1
  2432     0685  0837               	movf	_sec+1,w
  2433     0686  00CB               	movwf	___awmod@dividend+1
  2434     0687  0836               	movf	_sec,w
  2435     0688  00CA               	movwf	___awmod@dividend
  2436     0689  120A  158A  2648  120A  118A  	fcall	___awmod
  2437     068E  1283               	bcf	3,5	;RP0=0, select bank0
  2438     068F  1303               	bcf	3,6	;RP1=0, select bank0
  2439     0690  0848               	movf	?___awmod,w
  2440     0691  3E30               	addlw	48
  2441     0692  00C2               	movwf	_sec_arr+1
  2442                           
  2443                           ;main.c: 349:         clcd_print("Cooking Time UP", (0xC0 + 0));
  2444     0693  01C3               	clrf	_sec_arr+2
  2445                           
  2446                           ;main.c: 355: 
  2447     0694  3041               	movlw	(low (_sec_arr| 0))& (0+255)
  2448     0695  00C4               	movwf	clcd_print@str
  2449     0696  3000               	movlw	0
  2450     0697  00C5               	movwf	clcd_print@str+1
  2451     0698  308C               	movlw	140
  2452     0699  00C6               	movwf	clcd_print@addr
  2453     069A  120A  158A  257D  120A  118A  	fcall	_clcd_print
  2454                           
  2455                           ;main.c: 357:         operation_mode = 0x01;
  2456     069F  3044               	movlw	low (STR_16| (0+32768))
  2457     06A0  1283               	bcf	3,5	;RP0=0, select bank0
  2458     06A1  1303               	bcf	3,6	;RP1=0, select bank0
  2459     06A2  00C4               	movwf	clcd_print@str
  2460     06A3  3084               	movlw	high (STR_16| (0+32768))
  2461     06A4  00C5               	movwf	clcd_print@str+1
  2462     06A5  30C0               	movlw	192
  2463     06A6  00C6               	movwf	clcd_print@addr
  2464     06A7  120A  158A  257D  120A  118A  	fcall	_clcd_print
  2465                           
  2466                           ;main.c: 358:     }
  2467     06AC  3011               	movlw	low (STR_17| (0+32768))
  2468     06AD  1283               	bcf	3,5	;RP0=0, select bank0
  2469     06AE  1303               	bcf	3,6	;RP1=0, select bank0
  2470     06AF  00C4               	movwf	clcd_print@str
  2471     06B0  3084               	movlw	high (STR_17| (0+32768))
  2472     06B1  00C5               	movwf	clcd_print@str+1
  2473     06B2  3090               	movlw	144
  2474     06B3  00C6               	movwf	clcd_print@addr
  2475     06B4  120A  158A  257D  120A  118A  	fcall	_clcd_print
  2476                           
  2477                           ;main.c: 359: 
  2478     06B9  3000               	movlw	low (STR_18| (0+32768))
  2479     06BA  1283               	bcf	3,5	;RP0=0, select bank0
  2480     06BB  1303               	bcf	3,6	;RP1=0, select bank0
  2481     06BC  00C4               	movwf	clcd_print@str
  2482     06BD  3084               	movlw	high (STR_18| (0+32768))
  2483     06BE  00C5               	movwf	clcd_print@str+1
  2484     06BF  30D0               	movlw	208
  2485     06C0  00C6               	movwf	clcd_print@addr
  2486     06C1  120A  158A  257D  120A  118A  	fcall	_clcd_print
  2487                           
  2488                           ;main.c: 361: }
  2489     06C6  1283               	bcf	3,5	;RP0=0, select bank0
  2490     06C7  1303               	bcf	3,6	;RP1=0, select bank0
  2491     06C8  0838               	movf	_min,w
  2492     06C9  0439               	iorwf	_min+1,w
  2493     06CA  1D03               	btfss	3,2
  2494     06CB  0008               	return
  2495     06CC  0836               	movf	_sec,w
  2496     06CD  0437               	iorwf	_sec+1,w
  2497     06CE  1D03               	btfss	3,2
  2498     06CF  0008               	return
  2499                           
  2500                           ;main.c: 362: ;main.c: 363: char set_temp(unsigned char key) {
  2501     06D0  1112               	bcf	18,2	;volatile
  2502                           
  2503                           ;main.c: 364:     static int wait, blink, key_count, temp;
  2504     06D1  1107               	bcf	7,2	;volatile
  2505                           
  2506                           ;main.c: 365:     if(reset_flag == 0x14)
  2507     06D2  120A  158A  24EA  120A  118A  	fcall	_clear_dis
  2508                           
  2509                           ;main.c: 366:     {
  2510     06D7  30AA               	movlw	low (STR_19| (0+32768))
  2511     06D8  1283               	bcf	3,5	;RP0=0, select bank0
  2512     06D9  1303               	bcf	3,6	;RP1=0, select bank0
  2513     06DA  00C4               	movwf	clcd_print@str
  2514     06DB  3084               	movlw	high (STR_19| (0+32768))
  2515     06DC  00C5               	movwf	clcd_print@str+1
  2516     06DD  30C0               	movlw	192
  2517     06DE  00C6               	movwf	clcd_print@addr
  2518     06DF  120A  158A  257D  120A  118A  	fcall	_clcd_print
  2519                           
  2520                           ;main.c: 368:         key = 0xFF;
  2521     06E4  1283               	bcf	3,5	;RP0=0, select bank0
  2522     06E5  1303               	bcf	3,6	;RP1=0, select bank0
  2523     06E6  1487               	bsf	7,1	;volatile
  2524                           
  2525                           ;main.c: 369:         key_count = 0;
  2526     06E7  3033               	movlw	51
  2527     06E8  1283               	bcf	3,5	;RP0=0, select bank0
  2528     06E9  1303               	bcf	3,6	;RP1=0, select bank0
  2529     06EA  00D1               	movwf	??_time_dis+2
  2530     06EB  30BB               	movlw	187
  2531     06EC  00D0               	movwf	??_time_dis+1
  2532     06ED  30DF               	movlw	223
  2533     06EE  00CF               	movwf	??_time_dis
  2534     06EF                     u2997:
  2535     06EF  0BCF               	decfsz	??_time_dis,f
  2536     06F0  2EEF               	goto	u2997
  2537     06F1  0BD0               	decfsz	??_time_dis+1,f
  2538     06F2  2EEF               	goto	u2997
  2539     06F3  0BD1               	decfsz	??_time_dis+2,f
  2540     06F4  2EEF               	goto	u2997
  2541                           
  2542                           ;main.c: 371:         temp = 0;
  2543     06F5  1283               	bcf	3,5	;RP0=0, select bank0
  2544     06F6  1303               	bcf	3,6	;RP1=0, select bank0
  2545     06F7  1087               	bcf	7,1	;volatile
  2546                           
  2547                           ;main.c: 373:         clcd_print("SET TEMP. (  C )", (0x80 + 0));
  2548     06F8  120A  158A  24EA   	fcall	_clear_dis
  2549                           
  2550                           ;main.c: 374:         clcd_putch(0xDF, (0x80 + 12));
  2551     06FB  3001               	movlw	1
  2552     06FC  1283               	bcf	3,5	;RP0=0, select bank0
  2553     06FD  1303               	bcf	3,6	;RP1=0, select bank0
  2554     06FE  00BC               	movwf	_operation_mode
  2555     06FF  3000               	movlw	0
  2556     0700  00BD               	movwf	_operation_mode+1
  2557     0701  0008               	return
  2558     0702                     __end_of_time_dis:
  2559                           
  2560                           	psect	text6
  2561     0DE0                     __ptext6:	
  2562 ;; *************** function _door_status_check *****************
  2563 ;; Defined at:
  2564 ;;		line 311 in file "main.c"
  2565 ;; Parameters:    Size  Location     Type
  2566 ;;		None
  2567 ;; Auto vars:     Size  Location     Type
  2568 ;;		None
  2569 ;; Return value:  Size  Location     Type
  2570 ;;                  1    wreg      void 
  2571 ;; Registers used:
  2572 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2573 ;; Tracked objects:
  2574 ;;		On entry : 0/0
  2575 ;;		On exit  : 0/0
  2576 ;;		Unchanged: 0/0
  2577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2578 ;;      Params:         0       0       0       0       0
  2579 ;;      Locals:         0       0       0       0       0
  2580 ;;      Temps:          0       0       0       0       0
  2581 ;;      Totals:         0       0       0       0       0
  2582 ;;Total ram usage:        0 bytes
  2583 ;; Hardware stack levels used: 1
  2584 ;; Hardware stack levels required when called: 3
  2585 ;; This function calls:
  2586 ;;		_clcd_print
  2587 ;;		_clear_dis
  2588 ;; This function is called by:
  2589 ;;		_time_dis
  2590 ;; This function uses a non-reentrant model
  2591 ;;
  2592                           
  2593     0DE0                     _door_status_check:	
  2594                           ;psect for function _door_status_check
  2595                           
  2596                           
  2597                           ;main.c: 312:         RC2 = 1;
  2598                           
  2599                           ;incstack = 0
  2600                           ; Regs used in _door_status_check: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2601     0DE0  1283               	bcf	3,5	;RP0=0, select bank0
  2602     0DE1  1303               	bcf	3,6	;RP1=0, select bank0
  2603     0DE2  1986               	btfsc	6,3	;volatile
  2604     0DE3  2E0D               	goto	l2579
  2605                           
  2606                           ;main.c: 313: ;main.c: 314: }
  2607     0DE4  1487               	bsf	7,1	;volatile
  2608                           
  2609                           ;main.c: 315: 
  2610     0DE5  1107               	bcf	7,2	;volatile
  2611                           
  2612                           ;main.c: 316: void time_dis(void)
  2613     0DE6  1112               	bcf	18,2	;volatile
  2614                           
  2615                           ;main.c: 317: {
  2616     0DE7  120A  158A  24EA  120A  158A  	fcall	_clear_dis
  2617                           
  2618                           ;main.c: 318:     door_status_check();
  2619     0DEC  3088               	movlw	low (STR_13| (0+32768))
  2620     0DED  1283               	bcf	3,5	;RP0=0, select bank0
  2621     0DEE  1303               	bcf	3,6	;RP1=0, select bank0
  2622     0DEF  00C4               	movwf	clcd_print@str
  2623     0DF0  3084               	movlw	high (STR_13| (0+32768))
  2624     0DF1  00C5               	movwf	clcd_print@str+1
  2625     0DF2  30C0               	movlw	192
  2626     0DF3  00C6               	movwf	clcd_print@addr
  2627     0DF4  120A  158A  257D  120A  158A  	fcall	_clcd_print
  2628                           
  2629                           ;main.c: 319:     clcd_print(" TIME =  ", (0x80 + 0));
  2630     0DF9  30D7               	movlw	low (STR_14| (0+32768))
  2631     0DFA  1283               	bcf	3,5	;RP0=0, select bank0
  2632     0DFB  1303               	bcf	3,6	;RP1=0, select bank0
  2633     0DFC  00C4               	movwf	clcd_print@str
  2634     0DFD  3084               	movlw	high (STR_14| (0+32768))
  2635     0DFE  00C5               	movwf	clcd_print@str+1
  2636     0DFF  3090               	movlw	144
  2637     0E00  00C6               	movwf	clcd_print@addr
  2638     0E01  120A  158A  257D  120A  158A  	fcall	_clcd_print
  2639     0E06                     l265:	
  2640                           ;main.c: 321:     min_arr[0] = min / 10 + '0';;main.c: 323:     min_arr[2] = '\0';
  2641                           
  2642                           
  2643                           ;main.c: 320: 
  2644     0E06  1283               	bcf	3,5	;RP0=0, select bank0
  2645     0E07  1303               	bcf	3,6	;RP1=0, select bank0
  2646     0E08  1D86               	btfss	6,3	;volatile
  2647     0E09  2E06               	goto	l265
  2648                           
  2649                           ;main.c: 324: 
  2650     0E0A  120A  158A  24EA   	fcall	_clear_dis
  2651     0E0D                     l2579:
  2652                           
  2653                           ;main.c: 327:     clcd_putch(':', (0x80 + 11));
  2654     0E0D  1283               	bcf	3,5	;RP0=0, select bank0
  2655     0E0E  1303               	bcf	3,6	;RP1=0, select bank0
  2656     0E0F  1512               	bsf	18,2	;volatile
  2657                           
  2658                           ;main.c: 328: 
  2659     0E10  1087               	bcf	7,1	;volatile
  2660                           
  2661                           ;main.c: 329: 
  2662     0E11  1507               	bsf	7,2	;volatile
  2663     0E12  0008               	return
  2664     0E13                     __end_of_door_status_check:
  2665                           
  2666                           	psect	text7
  2667     0024                     __ptext7:	
  2668 ;; *************** function _set_time *****************
  2669 ;; Defined at:
  2670 ;;		line 211 in file "main.c"
  2671 ;; Parameters:    Size  Location     Type
  2672 ;;  key             1    wreg     unsigned char 
  2673 ;; Auto vars:     Size  Location     Type
  2674 ;;  key             1    7[COMMON] unsigned char 
  2675 ;; Return value:  Size  Location     Type
  2676 ;;                  1    wreg      void 
  2677 ;; Registers used:
  2678 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2679 ;; Tracked objects:
  2680 ;;		On entry : 0/0
  2681 ;;		On exit  : 0/0
  2682 ;;		Unchanged: 0/0
  2683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2684 ;;      Params:         0       0       0       0       0
  2685 ;;      Locals:         1       0       0       0       0
  2686 ;;      Temps:          0       2       0       0       0
  2687 ;;      Totals:         1       2       0       0       0
  2688 ;;Total ram usage:        3 bytes
  2689 ;; Hardware stack levels used: 1
  2690 ;; Hardware stack levels required when called: 3
  2691 ;; This function calls:
  2692 ;;		___awdiv
  2693 ;;		___awmod
  2694 ;;		___wmul
  2695 ;;		_clcd_print
  2696 ;;		_clear_dis
  2697 ;; This function is called by:
  2698 ;;		_mode_select
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701                           
  2702     0024                     _set_time:	
  2703                           ;psect for function _set_time
  2704                           
  2705                           
  2706                           ;incstack = 0
  2707                           ; Regs used in _set_time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2708                           ;set_time@key stored from wreg
  2709     0024  00F7               	movwf	set_time@key
  2710                           
  2711                           ;main.c: 212: ;main.c: 213: 
  2712     0025  1283               	bcf	3,5	;RP0=0, select bank0
  2713     0026  1303               	bcf	3,6	;RP1=0, select bank0
  2714     0027  083B               	movf	_reset_flag+1,w
  2715     0028  3A80               	xorlw	128
  2716     0029  00FF               	movwf	127
  2717     002A  3080               	movlw	128
  2718     002B  027F               	subwf	127,w
  2719     002C  1D03               	skipz
  2720     002D  2830               	goto	u2465
  2721     002E  3011               	movlw	17
  2722     002F  023A               	subwf	_reset_flag,w
  2723     0030                     u2465:
  2724     0030  1C03               	skipc
  2725     0031  2865               	goto	l2757
  2726                           
  2727                           ;main.c: 214: ;main.c: 216:     if(key != 0xFF && key != '*' && key != '#')
  2728     0032  30FF               	movlw	255
  2729     0033  00F7               	movwf	set_time@key
  2730                           
  2731                           ;main.c: 217:     {
  2732     0034  1283               	bcf	3,5	;RP0=0, select bank0
  2733     0035  1303               	bcf	3,6	;RP1=0, select bank0
  2734     0036  01B6               	clrf	_sec
  2735     0037  01B7               	clrf	_sec+1
  2736                           
  2737                           ;main.c: 218: 
  2738     0038  01B8               	clrf	_min
  2739     0039  01B9               	clrf	_min+1
  2740                           
  2741                           ;main.c: 219:         key_count++;
  2742     003A  01F8               	clrf	set_time@key_count
  2743     003B  01F9               	clrf	set_time@key_count+1
  2744                           
  2745                           ;main.c: 220:         if(key_count <= 2)
  2746     003C  01AC               	clrf	set_time@blink
  2747     003D  01AD               	clrf	set_time@blink+1
  2748                           
  2749                           ;main.c: 221:         {
  2750     003E  01AA               	clrf	set_time@blink_pos
  2751     003F  01AB               	clrf	set_time@blink_pos+1
  2752                           
  2753                           ;main.c: 224:         }
  2754     0040  3077               	movlw	low (STR_8| (0+32768))
  2755     0041  00C4               	movwf	clcd_print@str
  2756     0042  3084               	movlw	high (STR_8| (0+32768))
  2757     0043  00C5               	movwf	clcd_print@str+1
  2758     0044  3080               	movlw	128
  2759     0045  00C6               	movwf	clcd_print@addr
  2760     0046  120A  158A  257D  120A  118A  	fcall	_clcd_print
  2761                           
  2762                           ;main.c: 225:         else if(key_count > 2 && key_count < 5)
  2763     004B  3009               	movlw	low (STR_9| (0+32768))
  2764     004C  1283               	bcf	3,5	;RP0=0, select bank0
  2765     004D  1303               	bcf	3,6	;RP1=0, select bank0
  2766     004E  00C4               	movwf	clcd_print@str
  2767     004F  3085               	movlw	high (STR_9| (0+32768))
  2768     0050  00C5               	movwf	clcd_print@str+1
  2769     0051  30C0               	movlw	192
  2770     0052  00C6               	movwf	clcd_print@addr
  2771     0053  120A  158A  257D  120A  118A  	fcall	_clcd_print
  2772                           
  2773                           ;main.c: 226:         {
  2774     0058  3099               	movlw	low (STR_10| (0+32768))
  2775     0059  1283               	bcf	3,5	;RP0=0, select bank0
  2776     005A  1303               	bcf	3,6	;RP1=0, select bank0
  2777     005B  00C4               	movwf	clcd_print@str
  2778     005C  3084               	movlw	high (STR_10| (0+32768))
  2779     005D  00C5               	movwf	clcd_print@str+1
  2780     005E  30D0               	movlw	208
  2781     005F  00C6               	movwf	clcd_print@addr
  2782     0060  120A  158A  257D  120A  118A  	fcall	_clcd_print
  2783     0065                     l2757:
  2784                           
  2785                           ;main.c: 233:         else if(key_count >= 2 && key_count < 5) {
  2786     0065  0A77               	incf	set_time@key,w
  2787     0066  1903               	btfsc	3,2
  2788     0067  28FD               	goto	l2789
  2789     0068  302A               	movlw	42
  2790     0069  0677               	xorwf	set_time@key,w
  2791     006A  1903               	btfsc	3,2
  2792     006B  28FD               	goto	l2789
  2793     006C  3023               	movlw	35
  2794     006D  0677               	xorwf	set_time@key,w
  2795     006E  1903               	btfsc	3,2
  2796     006F  28FD               	goto	l2789
  2797                           
  2798                           ;main.c: 234:             blink_pos = 1;;main.c: 236:     }
  2799     0070  3001               	movlw	1
  2800     0071  07F8               	addwf	set_time@key_count,f
  2801     0072  1803               	skipnc
  2802     0073  0AF9               	incf	set_time@key_count+1,f
  2803     0074  3000               	movlw	0
  2804     0075  07F9               	addwf	set_time@key_count+1,f
  2805                           
  2806                           ;main.c: 237: 
  2807     0076  0879               	movf	set_time@key_count+1,w
  2808     0077  3A80               	xorlw	128
  2809     0078  00FF               	movwf	127
  2810     0079  3080               	movlw	128
  2811     007A  027F               	subwf	127,w
  2812     007B  1D03               	skipz
  2813     007C  287F               	goto	u2505
  2814     007D  3003               	movlw	3
  2815     007E  0278               	subwf	set_time@key_count,w
  2816     007F                     u2505:
  2817     007F  1803               	skipnc
  2818     0080  289D               	goto	l2771
  2819                           
  2820                           ;main.c: 238:     else if(key == '*');main.c: 239:     {
  2821     0081  1283               	bcf	3,5	;RP0=0, select bank0
  2822     0082  1303               	bcf	3,6	;RP1=0, select bank0
  2823     0083  0837               	movf	_sec+1,w
  2824     0084  00F4               	movwf	___wmul@multiplier+1
  2825     0085  0836               	movf	_sec,w
  2826     0086  00F3               	movwf	___wmul@multiplier
  2827     0087  300A               	movlw	10
  2828     0088  00F5               	movwf	___wmul@multiplicand
  2829     0089  3000               	movlw	0
  2830     008A  00F6               	movwf	___wmul@multiplicand+1
  2831     008B  120A  158A  2556  120A  118A  	fcall	___wmul
  2832     0090  0877               	movf	set_time@key,w
  2833     0091  0773               	addwf	?___wmul,w
  2834     0092  1283               	bcf	3,5	;RP0=0, select bank0
  2835     0093  1303               	bcf	3,6	;RP1=0, select bank0
  2836     0094  00B6               	movwf	_sec
  2837     0095  3000               	movlw	0
  2838     0096  1803               	skipnc
  2839     0097  3001               	movlw	1
  2840     0098  0774               	addwf	?___wmul+1,w
  2841     0099  00B7               	movwf	_sec+1
  2842                           
  2843                           ;main.c: 240:         if(key_count <= 2)
  2844     009A  01AA               	clrf	set_time@blink_pos
  2845     009B  01AB               	clrf	set_time@blink_pos+1
  2846                           
  2847                           ;main.c: 241:         {
  2848     009C  28D0               	goto	l2779
  2849     009D                     l2771:
  2850     009D  0879               	movf	set_time@key_count+1,w
  2851     009E  3A80               	xorlw	128
  2852     009F  00FF               	movwf	127
  2853     00A0  3080               	movlw	128
  2854     00A1  027F               	subwf	127,w
  2855     00A2  1D03               	skipz
  2856     00A3  28A6               	goto	u2515
  2857     00A4  3003               	movlw	3
  2858     00A5  0278               	subwf	set_time@key_count,w
  2859     00A6                     u2515:
  2860     00A6  1C03               	skipc
  2861     00A7  28D0               	goto	l2779
  2862     00A8  0879               	movf	set_time@key_count+1,w
  2863     00A9  3A80               	xorlw	128
  2864     00AA  00FF               	movwf	127
  2865     00AB  3080               	movlw	128
  2866     00AC  027F               	subwf	127,w
  2867     00AD  1D03               	skipz
  2868     00AE  28B1               	goto	u2525
  2869     00AF  3005               	movlw	5
  2870     00B0  0278               	subwf	set_time@key_count,w
  2871     00B1                     u2525:
  2872     00B1  1803               	skipnc
  2873     00B2  28D0               	goto	l2779
  2874                           
  2875                           ;main.c: 243:             key_count = 0;;main.c: 244:         }
  2876     00B3  1283               	bcf	3,5	;RP0=0, select bank0
  2877     00B4  1303               	bcf	3,6	;RP1=0, select bank0
  2878     00B5  0839               	movf	_min+1,w
  2879     00B6  00F4               	movwf	___wmul@multiplier+1
  2880     00B7  0838               	movf	_min,w
  2881     00B8  00F3               	movwf	___wmul@multiplier
  2882     00B9  300A               	movlw	10
  2883     00BA  00F5               	movwf	___wmul@multiplicand
  2884     00BB  3000               	movlw	0
  2885     00BC  00F6               	movwf	___wmul@multiplicand+1
  2886     00BD  120A  158A  2556  120A  118A  	fcall	___wmul
  2887     00C2  0877               	movf	set_time@key,w
  2888     00C3  0773               	addwf	?___wmul,w
  2889     00C4  1283               	bcf	3,5	;RP0=0, select bank0
  2890     00C5  1303               	bcf	3,6	;RP1=0, select bank0
  2891     00C6  00B8               	movwf	_min
  2892     00C7  3000               	movlw	0
  2893     00C8  1803               	skipnc
  2894     00C9  3001               	movlw	1
  2895     00CA  0774               	addwf	?___wmul+1,w
  2896     00CB  00B9               	movwf	_min+1
  2897                           
  2898                           ;main.c: 245:         else if(key_count > 2 && key_count < 5)
  2899     00CC  3001               	movlw	1
  2900     00CD  00AA               	movwf	set_time@blink_pos
  2901     00CE  3000               	movlw	0
  2902     00CF  00AB               	movwf	set_time@blink_pos+1
  2903     00D0                     l2779:
  2904                           
  2905                           ;main.c: 247:             min = 0;
  2906     00D0  0879               	movf	set_time@key_count+1,w
  2907     00D1  3A80               	xorlw	128
  2908     00D2  00FF               	movwf	127
  2909     00D3  3080               	movlw	128
  2910     00D4  027F               	subwf	127,w
  2911     00D5  1D03               	skipz
  2912     00D6  28D9               	goto	u2535
  2913     00D7  3002               	movlw	2
  2914     00D8  0278               	subwf	set_time@key_count,w
  2915     00D9                     u2535:
  2916     00D9  1803               	skipnc
  2917     00DA  28E0               	goto	l2783
  2918                           
  2919                           ;main.c: 248:             key_count = 2;
  2920     00DB  1283               	bcf	3,5	;RP0=0, select bank0
  2921     00DC  1303               	bcf	3,6	;RP1=0, select bank0
  2922     00DD  01AA               	clrf	set_time@blink_pos
  2923     00DE  01AB               	clrf	set_time@blink_pos+1
  2924                           
  2925                           ;main.c: 249:         }
  2926     00DF  2943               	goto	l2813
  2927     00E0                     l2783:
  2928     00E0  0879               	movf	set_time@key_count+1,w
  2929     00E1  3A80               	xorlw	128
  2930     00E2  00FF               	movwf	127
  2931     00E3  3080               	movlw	128
  2932     00E4  027F               	subwf	127,w
  2933     00E5  1D03               	skipz
  2934     00E6  28E9               	goto	u2545
  2935     00E7  3002               	movlw	2
  2936     00E8  0278               	subwf	set_time@key_count,w
  2937     00E9                     u2545:
  2938     00E9  1C03               	skipc
  2939     00EA  2943               	goto	l2813
  2940     00EB  0879               	movf	set_time@key_count+1,w
  2941     00EC  3A80               	xorlw	128
  2942     00ED  00FF               	movwf	127
  2943     00EE  3080               	movlw	128
  2944     00EF  027F               	subwf	127,w
  2945     00F0  1D03               	skipz
  2946     00F1  28F4               	goto	u2555
  2947     00F2  3005               	movlw	5
  2948     00F3  0278               	subwf	set_time@key_count,w
  2949     00F4                     u2555:
  2950     00F4  1803               	skipnc
  2951     00F5  2943               	goto	l2813
  2952                           
  2953                           ;main.c: 251:     else if(key == '#')
  2954     00F6  3001               	movlw	1
  2955     00F7  1283               	bcf	3,5	;RP0=0, select bank0
  2956     00F8  1303               	bcf	3,6	;RP1=0, select bank0
  2957     00F9  00AA               	movwf	set_time@blink_pos
  2958     00FA  3000               	movlw	0
  2959     00FB  00AB               	movwf	set_time@blink_pos+1
  2960     00FC  2943               	goto	l2813
  2961     00FD                     l2789:
  2962     00FD  302A               	movlw	42
  2963     00FE  0677               	xorwf	set_time@key,w
  2964     00FF  1D03               	btfss	3,2
  2965     0100  2932               	goto	l2803
  2966                           
  2967                           ;main.c: 256:         operation_mode = 0x06;;main.c: 257:     }
  2968     0101  0879               	movf	set_time@key_count+1,w
  2969     0102  3A80               	xorlw	128
  2970     0103  00FF               	movwf	127
  2971     0104  3080               	movlw	128
  2972     0105  027F               	subwf	127,w
  2973     0106  1D03               	skipz
  2974     0107  290A               	goto	u2575
  2975     0108  3003               	movlw	3
  2976     0109  0278               	subwf	set_time@key_count,w
  2977     010A                     u2575:
  2978     010A  1803               	skipnc
  2979     010B  2913               	goto	l2795
  2980                           
  2981                           ;main.c: 258: ;main.c: 259: 
  2982     010C  1283               	bcf	3,5	;RP0=0, select bank0
  2983     010D  1303               	bcf	3,6	;RP1=0, select bank0
  2984     010E  01B6               	clrf	_sec
  2985     010F  01B7               	clrf	_sec+1
  2986                           
  2987                           ;main.c: 260:     sec_arr[0] = sec / 10 + '0';
  2988     0110  01F8               	clrf	set_time@key_count
  2989     0111  01F9               	clrf	set_time@key_count+1
  2990                           
  2991                           ;main.c: 261:     sec_arr[1] = sec % 10 + '0';
  2992     0112  2943               	goto	l2813
  2993     0113                     l2795:
  2994     0113  0879               	movf	set_time@key_count+1,w
  2995     0114  3A80               	xorlw	128
  2996     0115  00FF               	movwf	127
  2997     0116  3080               	movlw	128
  2998     0117  027F               	subwf	127,w
  2999     0118  1D03               	skipz
  3000     0119  291C               	goto	u2585
  3001     011A  3003               	movlw	3
  3002     011B  0278               	subwf	set_time@key_count,w
  3003     011C                     u2585:
  3004     011C  1C03               	skipc
  3005     011D  2943               	goto	l2813
  3006     011E  0879               	movf	set_time@key_count+1,w
  3007     011F  3A80               	xorlw	128
  3008     0120  00FF               	movwf	127
  3009     0121  3080               	movlw	128
  3010     0122  027F               	subwf	127,w
  3011     0123  1D03               	skipz
  3012     0124  2927               	goto	u2595
  3013     0125  3005               	movlw	5
  3014     0126  0278               	subwf	set_time@key_count,w
  3015     0127                     u2595:
  3016     0127  1803               	skipnc
  3017     0128  2943               	goto	l2813
  3018                           
  3019                           ;main.c: 263: ;main.c: 264:     min_arr[0] = min / 10 + '0';
  3020     0129  1283               	bcf	3,5	;RP0=0, select bank0
  3021     012A  1303               	bcf	3,6	;RP1=0, select bank0
  3022     012B  01B8               	clrf	_min
  3023     012C  01B9               	clrf	_min+1
  3024                           
  3025                           ;main.c: 265:     min_arr[1] = min % 10 + '0';
  3026     012D  3002               	movlw	2
  3027     012E  00F8               	movwf	set_time@key_count
  3028     012F  3000               	movlw	0
  3029     0130  00F9               	movwf	set_time@key_count+1
  3030     0131  2943               	goto	l2813
  3031     0132                     l2803:
  3032     0132  3023               	movlw	35
  3033     0133  0677               	xorwf	set_time@key,w
  3034     0134  1D03               	btfss	3,2
  3035     0135  2943               	goto	l2813
  3036                           
  3037                           ;main.c: 269: ;main.c: 270:     if(wait++ == 25)
  3038     0136  120A  158A  24EA  120A  118A  	fcall	_clear_dis
  3039                           
  3040                           ;main.c: 271:     {
  3041     013B  1283               	bcf	3,5	;RP0=0, select bank0
  3042     013C  1303               	bcf	3,6	;RP1=0, select bank0
  3043     013D  1512               	bsf	18,2	;volatile
  3044                           
  3045                           ;main.c: 272:         wait = 0;
  3046     013E  1507               	bsf	7,2	;volatile
  3047                           
  3048                           ;main.c: 273:         blink = !blink;
  3049     013F  3006               	movlw	6
  3050     0140  00BC               	movwf	_operation_mode
  3051     0141  3000               	movlw	0
  3052     0142  00BD               	movwf	_operation_mode+1
  3053     0143                     l2813:
  3054                           
  3055                           ;main.c: 277:     }
  3056     0143  300A               	movlw	10
  3057     0144  00F3               	movwf	___awdiv@divisor
  3058     0145  3000               	movlw	0
  3059     0146  00F4               	movwf	___awdiv@divisor+1
  3060     0147  1283               	bcf	3,5	;RP0=0, select bank0
  3061     0148  1303               	bcf	3,6	;RP1=0, select bank0
  3062     0149  0837               	movf	_sec+1,w
  3063     014A  00F6               	movwf	___awdiv@dividend+1
  3064     014B  0836               	movf	_sec,w
  3065     014C  00F5               	movwf	___awdiv@dividend
  3066     014D  120A  118A  2795  120A  118A  	fcall	___awdiv
  3067     0152  0873               	movf	?___awdiv,w
  3068     0153  3E30               	addlw	48
  3069     0154  1283               	bcf	3,5	;RP0=0, select bank0
  3070     0155  1303               	bcf	3,6	;RP1=0, select bank0
  3071     0156  00C1               	movwf	_sec_arr
  3072                           
  3073                           ;main.c: 278: 
  3074     0157  300A               	movlw	10
  3075     0158  00C8               	movwf	___awmod@divisor
  3076     0159  3000               	movlw	0
  3077     015A  00C9               	movwf	___awmod@divisor+1
  3078     015B  0837               	movf	_sec+1,w
  3079     015C  00CB               	movwf	___awmod@dividend+1
  3080     015D  0836               	movf	_sec,w
  3081     015E  00CA               	movwf	___awmod@dividend
  3082     015F  120A  158A  2648  120A  118A  	fcall	___awmod
  3083     0164  1283               	bcf	3,5	;RP0=0, select bank0
  3084     0165  1303               	bcf	3,6	;RP1=0, select bank0
  3085     0166  0848               	movf	?___awmod,w
  3086     0167  3E30               	addlw	48
  3087     0168  00C2               	movwf	_sec_arr+1
  3088                           
  3089                           ;main.c: 279:     if(blink)
  3090     0169  01C3               	clrf	_sec_arr+2
  3091                           
  3092                           ;main.c: 281:         switch(blink_pos)
  3093     016A  300A               	movlw	10
  3094     016B  00F3               	movwf	___awdiv@divisor
  3095     016C  3000               	movlw	0
  3096     016D  00F4               	movwf	___awdiv@divisor+1
  3097     016E  0839               	movf	_min+1,w
  3098     016F  00F6               	movwf	___awdiv@dividend+1
  3099     0170  0838               	movf	_min,w
  3100     0171  00F5               	movwf	___awdiv@dividend
  3101     0172  120A  118A  2795  120A  118A  	fcall	___awdiv
  3102     0177  0873               	movf	?___awdiv,w
  3103     0178  3E30               	addlw	48
  3104     0179  1283               	bcf	3,5	;RP0=0, select bank0
  3105     017A  1303               	bcf	3,6	;RP1=0, select bank0
  3106     017B  00BE               	movwf	_min_arr
  3107                           
  3108                           ;main.c: 282:         {
  3109     017C  300A               	movlw	10
  3110     017D  00C8               	movwf	___awmod@divisor
  3111     017E  3000               	movlw	0
  3112     017F  00C9               	movwf	___awmod@divisor+1
  3113     0180  0839               	movf	_min+1,w
  3114     0181  00CB               	movwf	___awmod@dividend+1
  3115     0182  0838               	movf	_min,w
  3116     0183  00CA               	movwf	___awmod@dividend
  3117     0184  120A  158A  2648  120A  118A  	fcall	___awmod
  3118     0189  1283               	bcf	3,5	;RP0=0, select bank0
  3119     018A  1303               	bcf	3,6	;RP1=0, select bank0
  3120     018B  0848               	movf	?___awmod,w
  3121     018C  3E30               	addlw	48
  3122     018D  00BF               	movwf	_min_arr+1
  3123                           
  3124                           ;main.c: 283:             case 0:
  3125     018E  01C0               	clrf	_min_arr+2
  3126                           
  3127                           ;main.c: 287:                 clcd_print("  ", (0xC0 + 6));
  3128     018F  3001               	movlw	1
  3129     0190  07AE               	addwf	set_time@wait,f
  3130     0191  1803               	skipnc
  3131     0192  0AAF               	incf	set_time@wait+1,f
  3132     0193  3000               	movlw	0
  3133     0194  07AF               	addwf	set_time@wait+1,f
  3134     0195  301A               	movlw	26
  3135     0196  062E               	xorwf	set_time@wait,w
  3136     0197  042F               	iorwf	set_time@wait+1,w
  3137     0198  1D03               	btfss	3,2
  3138     0199  29C1               	goto	l2835
  3139                           
  3140                           ;main.c: 288:                 break;;main.c: 289:         }
  3141     019A  01AE               	clrf	set_time@wait
  3142     019B  01AF               	clrf	set_time@wait+1
  3143                           
  3144                           ;main.c: 290:     }
  3145     019C  082C               	movf	set_time@blink,w
  3146     019D  042D               	iorwf	set_time@blink+1,w
  3147     019E  1D03               	btfss	3,2
  3148     019F  29A2               	goto	u2620
  3149     01A0  3001               	movlw	1
  3150     01A1  29A3               	goto	u2630
  3151     01A2                     u2620:
  3152     01A2  3000               	movlw	0
  3153     01A3                     u2630:
  3154     01A3  00CE               	movwf	??_set_time
  3155     01A4  01CF               	clrf	??_set_time+1
  3156     01A5  084E               	movf	??_set_time,w
  3157     01A6  00AC               	movwf	set_time@blink
  3158     01A7  084F               	movf	??_set_time+1,w
  3159     01A8  00AD               	movwf	set_time@blink+1
  3160                           
  3161                           ;main.c: 291: 
  3162     01A9  303E               	movlw	(low (_min_arr| 0))& (0+255)
  3163     01AA  00C4               	movwf	clcd_print@str
  3164     01AB  3000               	movlw	0
  3165     01AC  00C5               	movwf	clcd_print@str+1
  3166     01AD  30C6               	movlw	198
  3167     01AE  00C6               	movwf	clcd_print@addr
  3168     01AF  120A  158A  257D  120A  118A  	fcall	_clcd_print
  3169                           
  3170                           ;main.c: 292: 
  3171     01B4  3041               	movlw	(low (_sec_arr| 0))& (0+255)
  3172     01B5  1283               	bcf	3,5	;RP0=0, select bank0
  3173     01B6  1303               	bcf	3,6	;RP1=0, select bank0
  3174     01B7  00C4               	movwf	clcd_print@str
  3175     01B8  3000               	movlw	0
  3176     01B9  00C5               	movwf	clcd_print@str+1
  3177     01BA  30C9               	movlw	201
  3178     01BB  00C6               	movwf	clcd_print@addr
  3179     01BC  120A  158A  257D  120A  118A  	fcall	_clcd_print
  3180     01C1                     l2835:
  3181                           
  3182                           ;main.c: 296:     {
  3183     01C1  1283               	bcf	3,5	;RP0=0, select bank0
  3184     01C2  1303               	bcf	3,6	;RP1=0, select bank0
  3185     01C3  082C               	movf	set_time@blink,w
  3186     01C4  042D               	iorwf	set_time@blink+1,w
  3187     01C5  1903               	btfsc	3,2
  3188     01C6  0008               	return
  3189     01C7  29DC               	goto	l2845
  3190     01C8                     l2839:
  3191                           
  3192                           ;main.c: 301:         clcd_print("Door Status:OPEN", (0xC0 + 0));
  3193     01C8  300E               	movlw	low ((STR_18+14)| (0+32768))
  3194     01C9  00C4               	movwf	clcd_print@str
  3195     01CA  3084               	movlw	high ((STR_18+14)| (0+32768))
  3196     01CB  00C5               	movwf	clcd_print@str+1
  3197     01CC  30C9               	movlw	201
  3198     01CD  00C6               	movwf	clcd_print@addr
  3199     01CE  120A  158A  257D   	fcall	_clcd_print
  3200                           
  3201                           ;main.c: 302:         clcd_print("Please Close", (0x90 + 0));
  3202     01D1  0008               	return
  3203     01D2                     l2841:
  3204                           
  3205                           ;main.c: 304:         {
  3206     01D2  300E               	movlw	low ((STR_18+14)| (0+32768))
  3207     01D3  00C4               	movwf	clcd_print@str
  3208     01D4  3084               	movlw	high ((STR_18+14)| (0+32768))
  3209     01D5  00C5               	movwf	clcd_print@str+1
  3210     01D6  30C6               	movlw	198
  3211     01D7  00C6               	movwf	clcd_print@addr
  3212     01D8  120A  158A  257D   	fcall	_clcd_print
  3213                           
  3214                           ;main.c: 305:             ;
  3215     01DB  0008               	return
  3216     01DC                     l2845:
  3217                           
  3218                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3219                           ; Switch size 1, requested type "simple"
  3220                           ; Number of cases is 1, Range of values is 0 to 0
  3221                           ; switch strategies available:
  3222                           ; Name         Instructions Cycles
  3223                           ; simple_byte            4     3 (average)
  3224                           ; direct_byte           11     8 (fixed)
  3225                           ; jumptable            260     6 (fixed)
  3226                           ;	Chosen strategy is simple_byte
  3227     01DC  082B               	movf	set_time@blink_pos+1,w
  3228     01DD  3A00               	xorlw	0	; case 0
  3229     01DE  1903               	skipnz
  3230     01DF  29E1               	goto	l3179
  3231     01E0  29E9               	goto	l261
  3232     01E1                     l3179:
  3233                           
  3234                           ; Switch size 1, requested type "simple"
  3235                           ; Number of cases is 2, Range of values is 0 to 1
  3236                           ; switch strategies available:
  3237                           ; Name         Instructions Cycles
  3238                           ; simple_byte            7     4 (average)
  3239                           ; direct_byte           14     8 (fixed)
  3240                           ; jumptable            260     6 (fixed)
  3241                           ;	Chosen strategy is simple_byte
  3242     01E1  082A               	movf	set_time@blink_pos,w
  3243     01E2  3A00               	xorlw	0	; case 0
  3244     01E3  1903               	skipnz
  3245     01E4  29C8               	goto	l2839
  3246     01E5  3A01               	xorlw	1	; case 1
  3247     01E6  1903               	skipnz
  3248     01E7  29D2               	goto	l2841
  3249     01E8  29E9               	goto	l261
  3250     01E9                     l261:
  3251     01E9  0008               	return
  3252     01EA                     __end_of_set_time:
  3253                           
  3254                           	psect	text8
  3255     01EA                     __ptext8:	
  3256 ;; *************** function _set_temp *****************
  3257 ;; Defined at:
  3258 ;;		line 380 in file "main.c"
  3259 ;; Parameters:    Size  Location     Type
  3260 ;;  key             1    wreg     unsigned char 
  3261 ;; Auto vars:     Size  Location     Type
  3262 ;;  key             1   14[BANK0 ] unsigned char 
  3263 ;; Return value:  Size  Location     Type
  3264 ;;                  1    wreg      unsigned char 
  3265 ;; Registers used:
  3266 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3267 ;; Tracked objects:
  3268 ;;		On entry : 0/0
  3269 ;;		On exit  : 0/0
  3270 ;;		Unchanged: 0/0
  3271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3272 ;;      Params:         0       0       0       0       0
  3273 ;;      Locals:         0       1       0       0       0
  3274 ;;      Temps:          0       3       0       0       0
  3275 ;;      Totals:         0       4       0       0       0
  3276 ;;Total ram usage:        4 bytes
  3277 ;; Hardware stack levels used: 1
  3278 ;; Hardware stack levels required when called: 3
  3279 ;; This function calls:
  3280 ;;		___awdiv
  3281 ;;		___awmod
  3282 ;;		___wmul
  3283 ;;		_clcd_print
  3284 ;;		_clcd_putch
  3285 ;;		_clear_dis
  3286 ;; This function is called by:
  3287 ;;		_mode_select
  3288 ;; This function uses a non-reentrant model
  3289 ;;
  3290                           
  3291     01EA                     _set_temp:	
  3292                           ;psect for function _set_temp
  3293                           
  3294                           
  3295                           ;incstack = 0
  3296                           ; Regs used in _set_temp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3297                           ;set_temp@key stored from wreg
  3298     01EA  1283               	bcf	3,5	;RP0=0, select bank0
  3299     01EB  1303               	bcf	3,6	;RP1=0, select bank0
  3300     01EC  00D2               	movwf	set_temp@key
  3301                           
  3302                           ;main.c: 381:         key_count++;;main.c: 382:         if(key_count <= 3)
  3303     01ED  3014               	movlw	20
  3304     01EE  063A               	xorwf	_reset_flag,w
  3305     01EF  043B               	iorwf	_reset_flag+1,w
  3306     01F0  1D03               	btfss	3,2
  3307     01F1  2A2B               	goto	l2871
  3308                           
  3309                           ;main.c: 383:         {;main.c: 385:         }
  3310     01F2  30FF               	movlw	255
  3311     01F3  00D2               	movwf	set_temp@key
  3312                           
  3313                           ;main.c: 386: 
  3314     01F4  01A4               	clrf	set_temp@key_count
  3315     01F5  01A5               	clrf	set_temp@key_count+1
  3316                           
  3317                           ;main.c: 387:     }
  3318     01F6  01A6               	clrf	set_temp@blink
  3319     01F7  01A7               	clrf	set_temp@blink+1
  3320                           
  3321                           ;main.c: 388:     else if(key == '*')
  3322     01F8  01A2               	clrf	set_temp@temp
  3323     01F9  01A3               	clrf	set_temp@temp+1
  3324                           
  3325                           ;main.c: 389:     {
  3326     01FA  01A8               	clrf	set_temp@wait
  3327     01FB  01A9               	clrf	set_temp@wait+1
  3328                           
  3329                           ;main.c: 390:         key_count = 0;
  3330     01FC  3066               	movlw	low (STR_20| (0+32768))
  3331     01FD  00C4               	movwf	clcd_print@str
  3332     01FE  3084               	movlw	high (STR_20| (0+32768))
  3333     01FF  00C5               	movwf	clcd_print@str+1
  3334     0200  3080               	movlw	128
  3335     0201  00C6               	movwf	clcd_print@addr
  3336     0202  120A  158A  257D  120A  118A  	fcall	_clcd_print
  3337                           
  3338                           ;main.c: 391:         temp = 0;
  3339     0207  308C               	movlw	140
  3340     0208  1283               	bcf	3,5	;RP0=0, select bank0
  3341     0209  1303               	bcf	3,6	;RP1=0, select bank0
  3342     020A  00CE               	movwf	clcd_putch@addr
  3343     020B  30DF               	movlw	223
  3344     020C  120A  158A  250E  120A  118A  	fcall	_clcd_putch
  3345                           
  3346                           ;main.c: 392:     }
  3347     0211  30FD               	movlw	low (STR_21| (0+32768))
  3348     0212  1283               	bcf	3,5	;RP0=0, select bank0
  3349     0213  1303               	bcf	3,6	;RP1=0, select bank0
  3350     0214  00C4               	movwf	clcd_print@str
  3351     0215  3084               	movlw	high (STR_21| (0+32768))
  3352     0216  00C5               	movwf	clcd_print@str+1
  3353     0217  30C0               	movlw	192
  3354     0218  00C6               	movwf	clcd_print@addr
  3355     0219  120A  158A  257D  120A  118A  	fcall	_clcd_print
  3356                           
  3357                           ;main.c: 393:     else if(key == '#')
  3358     021E  3099               	movlw	low (STR_10| (0+32768))
  3359     021F  1283               	bcf	3,5	;RP0=0, select bank0
  3360     0220  1303               	bcf	3,6	;RP1=0, select bank0
  3361     0221  00C4               	movwf	clcd_print@str
  3362     0222  3084               	movlw	high (STR_10| (0+32768))
  3363     0223  00C5               	movwf	clcd_print@str+1
  3364     0224  30D0               	movlw	208
  3365     0225  00C6               	movwf	clcd_print@addr
  3366     0226  120A  158A  257D  120A  118A  	fcall	_clcd_print
  3367     022B                     l2871:
  3368                           
  3369                           ;main.c: 395:         clear_dis();
  3370     022B  1283               	bcf	3,5	;RP0=0, select bank0
  3371     022C  1303               	bcf	3,6	;RP1=0, select bank0
  3372     022D  0A52               	incf	set_temp@key,w
  3373     022E  1903               	btfsc	3,2
  3374     022F  2A63               	goto	l2883
  3375     0230  302A               	movlw	42
  3376     0231  0652               	xorwf	set_temp@key,w
  3377     0232  1903               	btfsc	3,2
  3378     0233  2A63               	goto	l2883
  3379     0234  3023               	movlw	35
  3380     0235  0652               	xorwf	set_temp@key,w
  3381     0236  1903               	btfsc	3,2
  3382     0237  2A63               	goto	l2883
  3383                           
  3384                           ;main.c: 396:         if(temp > 250);main.c: 398:             clcd_print(" Invalid Temp.
      +                          ", (0xC0 + 0));
  3385     0238  3001               	movlw	1
  3386     0239  07A4               	addwf	set_temp@key_count,f
  3387     023A  1803               	skipnc
  3388     023B  0AA5               	incf	set_temp@key_count+1,f
  3389     023C  3000               	movlw	0
  3390     023D  07A5               	addwf	set_temp@key_count+1,f
  3391                           
  3392                           ;main.c: 399:             RC1 = 1;
  3393     023E  0825               	movf	set_temp@key_count+1,w
  3394     023F  3A80               	xorlw	128
  3395     0240  00FF               	movwf	127
  3396     0241  3080               	movlw	128
  3397     0242  027F               	subwf	127,w
  3398     0243  1D03               	skipz
  3399     0244  2A47               	goto	u2695
  3400     0245  3004               	movlw	4
  3401     0246  0224               	subwf	set_temp@key_count,w
  3402     0247                     u2695:
  3403     0247  1803               	skipnc
  3404     0248  2B2A               	goto	l2927
  3405                           
  3406                           ;main.c: 400:             _delay((unsigned long)((2000)*(20000000/4000.0)));;main.c: 401
      +                          :             RC1 = 0;
  3407     0249  1283               	bcf	3,5	;RP0=0, select bank0
  3408     024A  1303               	bcf	3,6	;RP1=0, select bank0
  3409     024B  0823               	movf	set_temp@temp+1,w
  3410     024C  00F4               	movwf	___wmul@multiplier+1
  3411     024D  0822               	movf	set_temp@temp,w
  3412     024E  00F3               	movwf	___wmul@multiplier
  3413     024F  300A               	movlw	10
  3414     0250  00F5               	movwf	___wmul@multiplicand
  3415     0251  3000               	movlw	0
  3416     0252  00F6               	movwf	___wmul@multiplicand+1
  3417     0253  120A  158A  2556  120A  118A  	fcall	___wmul
  3418     0258  1283               	bcf	3,5	;RP0=0, select bank0
  3419     0259  1303               	bcf	3,6	;RP1=0, select bank0
  3420     025A  0852               	movf	set_temp@key,w
  3421     025B  0773               	addwf	?___wmul,w
  3422     025C  00A2               	movwf	set_temp@temp
  3423     025D  3000               	movlw	0
  3424     025E  1803               	skipnc
  3425     025F  3001               	movlw	1
  3426     0260  0774               	addwf	?___wmul+1,w
  3427     0261  00A3               	movwf	set_temp@temp+1
  3428     0262  2B2A               	goto	l2927
  3429     0263                     l2883:
  3430     0263  302A               	movlw	42
  3431     0264  0652               	xorwf	set_temp@key,w
  3432     0265  1D03               	btfss	3,2
  3433     0266  2A6C               	goto	l2887
  3434                           
  3435                           ;main.c: 406:         {;main.c: 407:             clcd_print("  Pre-Heating", (0x80 + 0))
      +                          ;
  3436     0267  01A4               	clrf	set_temp@key_count
  3437     0268  01A5               	clrf	set_temp@key_count+1
  3438                           
  3439                           ;main.c: 408:             sec = 180;
  3440     0269  01A2               	clrf	set_temp@temp
  3441     026A  01A3               	clrf	set_temp@temp+1
  3442                           
  3443                           ;main.c: 409:             TMR2ON = 1;
  3444     026B  2B2A               	goto	l2927
  3445     026C                     l2887:
  3446     026C  3023               	movlw	35
  3447     026D  0652               	xorwf	set_temp@key,w
  3448     026E  1D03               	btfss	3,2
  3449     026F  2B2A               	goto	l2927
  3450                           
  3451                           ;main.c: 411: ;main.c: 412:             clcd_print("Time Rem.= ",(0x90 + 0));
  3452     0270  120A  158A  24EA  120A  118A  	fcall	_clear_dis
  3453                           
  3454                           ;main.c: 413:             while(sec)
  3455     0275  1283               	bcf	3,5	;RP0=0, select bank0
  3456     0276  1303               	bcf	3,6	;RP1=0, select bank0
  3457     0277  0823               	movf	set_temp@temp+1,w
  3458     0278  3A80               	xorlw	128
  3459     0279  00FF               	movwf	127
  3460     027A  3080               	movlw	128
  3461     027B  027F               	subwf	127,w
  3462     027C  1D03               	skipz
  3463     027D  2A80               	goto	u2725
  3464     027E  30FB               	movlw	251
  3465     027F  0222               	subwf	set_temp@temp,w
  3466     0280                     u2725:
  3467     0280  1C03               	skipc
  3468     0281  2AA8               	goto	l2909
  3469                           
  3470                           ;main.c: 414:             {;main.c: 415:                 clcd_putch((sec / 100 + '0'), (
      +                          0x90 + 11));
  3471     0282  30BA               	movlw	low (STR_23| (0+32768))
  3472     0283  1283               	bcf	3,5	;RP0=0, select bank0
  3473     0284  1303               	bcf	3,6	;RP1=0, select bank0
  3474     0285  00C4               	movwf	clcd_print@str
  3475     0286  3084               	movlw	high (STR_23| (0+32768))
  3476     0287  00C5               	movwf	clcd_print@str+1
  3477     0288  30C0               	movlw	192
  3478     0289  00C6               	movwf	clcd_print@addr
  3479     028A  120A  158A  257D  120A  118A  	fcall	_clcd_print
  3480                           
  3481                           ;main.c: 416:                 clcd_putch(((sec/10) % 10 + '0'), (0x90 + 12));
  3482     028F  1283               	bcf	3,5	;RP0=0, select bank0
  3483     0290  1303               	bcf	3,6	;RP1=0, select bank0
  3484     0291  1487               	bsf	7,1	;volatile
  3485                           
  3486                           ;main.c: 417:                 clcd_putch((sec%10 + '0'), (0x90 + 13));
  3487     0292  3033               	movlw	51
  3488     0293  1283               	bcf	3,5	;RP0=0, select bank0
  3489     0294  1303               	bcf	3,6	;RP1=0, select bank0
  3490     0295  00D1               	movwf	??_set_temp+2
  3491     0296  30BB               	movlw	187
  3492     0297  00D0               	movwf	??_set_temp+1
  3493     0298  30DF               	movlw	223
  3494     0299  00CF               	movwf	??_set_temp
  3495     029A                     u3007:
  3496     029A  0BCF               	decfsz	??_set_temp,f
  3497     029B  2A9A               	goto	u3007
  3498     029C  0BD0               	decfsz	??_set_temp+1,f
  3499     029D  2A9A               	goto	u3007
  3500     029E  0BD1               	decfsz	??_set_temp+2,f
  3501     029F  2A9A               	goto	u3007
  3502                           
  3503                           ;main.c: 418:             }
  3504     02A0  1283               	bcf	3,5	;RP0=0, select bank0
  3505     02A1  1303               	bcf	3,6	;RP1=0, select bank0
  3506     02A2  1087               	bcf	7,1	;volatile
  3507                           
  3508                           ;main.c: 419:             return 0;
  3509     02A3  120A  158A  24EA   	fcall	_clear_dis
  3510                           
  3511                           ;main.c: 420:         }
  3512     02A6  3001               	movlw	1
  3513     02A7  0008               	return
  3514     02A8                     l2909:
  3515                           
  3516                           ;main.c: 423:     {;main.c: 424:         wait = 0;
  3517     02A8  30C9               	movlw	low (STR_24| (0+32768))
  3518     02A9  1283               	bcf	3,5	;RP0=0, select bank0
  3519     02AA  1303               	bcf	3,6	;RP1=0, select bank0
  3520     02AB  00C4               	movwf	clcd_print@str
  3521     02AC  3084               	movlw	high (STR_24| (0+32768))
  3522     02AD  00C5               	movwf	clcd_print@str+1
  3523     02AE  3080               	movlw	128
  3524     02AF  00C6               	movwf	clcd_print@addr
  3525     02B0  120A  158A  257D  120A  118A  	fcall	_clcd_print
  3526                           
  3527                           ;main.c: 425:         blink = !blink;
  3528     02B5  30B4               	movlw	180
  3529     02B6  1283               	bcf	3,5	;RP0=0, select bank0
  3530     02B7  1303               	bcf	3,6	;RP1=0, select bank0
  3531     02B8  00B6               	movwf	_sec
  3532     02B9  3000               	movlw	0
  3533     02BA  00B7               	movwf	_sec+1
  3534                           
  3535                           ;main.c: 426:         clcd_putch((temp / 100 + '0'), (0xC0 + 8));
  3536     02BB  1512               	bsf	18,2	;volatile
  3537                           
  3538                           ;main.c: 427:         clcd_putch(((temp/10) % 10 + '0'), (0xC0 + 9));
  3539     02BC  1507               	bsf	7,2	;volatile
  3540                           
  3541                           ;main.c: 429:     }
  3542     02BD  30F1               	movlw	low (STR_25| (0+32768))
  3543     02BE  00C4               	movwf	clcd_print@str
  3544     02BF  3084               	movlw	high (STR_25| (0+32768))
  3545     02C0  00C5               	movwf	clcd_print@str+1
  3546     02C1  3090               	movlw	144
  3547     02C2  00C6               	movwf	clcd_print@addr
  3548     02C3  120A  158A  257D  120A  118A  	fcall	_clcd_print
  3549     02C8                     l2921:	
  3550                           ;main.c: 430:     if(blink)
  3551                           
  3552                           
  3553                           ;main.c: 430:     if(blink)
  3554     02C8  1283               	bcf	3,5	;RP0=0, select bank0
  3555     02C9  1303               	bcf	3,6	;RP1=0, select bank0
  3556     02CA  0836               	movf	_sec,w
  3557     02CB  0437               	iorwf	_sec+1,w
  3558     02CC  1903               	btfsc	3,2
  3559     02CD  2B28               	goto	l2923
  3560                           
  3561                           ;main.c: 431:     {;main.c: 432:         clcd_print("   ", (0xC0 + 8));
  3562     02CE  309B               	movlw	155
  3563     02CF  00CE               	movwf	clcd_putch@addr
  3564     02D0  3064               	movlw	100
  3565     02D1  00F3               	movwf	___awdiv@divisor
  3566     02D2  3000               	movlw	0
  3567     02D3  00F4               	movwf	___awdiv@divisor+1
  3568     02D4  0837               	movf	_sec+1,w
  3569     02D5  00F6               	movwf	___awdiv@dividend+1
  3570     02D6  0836               	movf	_sec,w
  3571     02D7  00F5               	movwf	___awdiv@dividend
  3572     02D8  120A  118A  2795  120A  118A  	fcall	___awdiv
  3573     02DD  0873               	movf	?___awdiv,w
  3574     02DE  3E30               	addlw	48
  3575     02DF  120A  158A  250E  120A  118A  	fcall	_clcd_putch
  3576                           
  3577                           ;main.c: 433:     }
  3578     02E4  309C               	movlw	156
  3579     02E5  1283               	bcf	3,5	;RP0=0, select bank0
  3580     02E6  1303               	bcf	3,6	;RP1=0, select bank0
  3581     02E7  00CE               	movwf	clcd_putch@addr
  3582     02E8  300A               	movlw	10
  3583     02E9  00C8               	movwf	___awmod@divisor
  3584     02EA  3000               	movlw	0
  3585     02EB  00C9               	movwf	___awmod@divisor+1
  3586     02EC  300A               	movlw	10
  3587     02ED  00F3               	movwf	___awdiv@divisor
  3588     02EE  3000               	movlw	0
  3589     02EF  00F4               	movwf	___awdiv@divisor+1
  3590     02F0  0837               	movf	_sec+1,w
  3591     02F1  00F6               	movwf	___awdiv@dividend+1
  3592     02F2  0836               	movf	_sec,w
  3593     02F3  00F5               	movwf	___awdiv@dividend
  3594     02F4  120A  118A  2795  120A  118A  	fcall	___awdiv
  3595     02F9  0874               	movf	?___awdiv+1,w
  3596     02FA  1283               	bcf	3,5	;RP0=0, select bank0
  3597     02FB  1303               	bcf	3,6	;RP1=0, select bank0
  3598     02FC  00CB               	movwf	___awmod@dividend+1
  3599     02FD  0873               	movf	?___awdiv,w
  3600     02FE  00CA               	movwf	___awmod@dividend
  3601     02FF  120A  158A  2648  120A  118A  	fcall	___awmod
  3602     0304  1283               	bcf	3,5	;RP0=0, select bank0
  3603     0305  1303               	bcf	3,6	;RP1=0, select bank0
  3604     0306  0848               	movf	?___awmod,w
  3605     0307  3E30               	addlw	48
  3606     0308  120A  158A  250E  120A  118A  	fcall	_clcd_putch
  3607                           
  3608                           ;main.c: 434:     return 0x11;
  3609     030D  309D               	movlw	157
  3610     030E  1283               	bcf	3,5	;RP0=0, select bank0
  3611     030F  1303               	bcf	3,6	;RP1=0, select bank0
  3612     0310  00CE               	movwf	clcd_putch@addr
  3613     0311  300A               	movlw	10
  3614     0312  00C8               	movwf	___awmod@divisor
  3615     0313  3000               	movlw	0
  3616     0314  00C9               	movwf	___awmod@divisor+1
  3617     0315  0837               	movf	_sec+1,w
  3618     0316  00CB               	movwf	___awmod@dividend+1
  3619     0317  0836               	movf	_sec,w
  3620     0318  00CA               	movwf	___awmod@dividend
  3621     0319  120A  158A  2648  120A  118A  	fcall	___awmod
  3622     031E  1283               	bcf	3,5	;RP0=0, select bank0
  3623     031F  1303               	bcf	3,6	;RP1=0, select bank0
  3624     0320  0848               	movf	?___awmod,w
  3625     0321  3E30               	addlw	48
  3626     0322  120A  158A  250E  120A  118A  	fcall	_clcd_putch
  3627     0327  2AC8               	goto	l2921
  3628     0328                     l2923:
  3629     0328  3000               	movlw	0
  3630     0329  0008               	return
  3631     032A                     l2927:
  3632     032A  3001               	movlw	1
  3633     032B  1283               	bcf	3,5	;RP0=0, select bank0
  3634     032C  1303               	bcf	3,6	;RP1=0, select bank0
  3635     032D  07A8               	addwf	set_temp@wait,f
  3636     032E  1803               	skipnc
  3637     032F  0AA9               	incf	set_temp@wait+1,f
  3638     0330  3000               	movlw	0
  3639     0331  07A9               	addwf	set_temp@wait+1,f
  3640     0332  301A               	movlw	26
  3641     0333  0628               	xorwf	set_temp@wait,w
  3642     0334  0429               	iorwf	set_temp@wait+1,w
  3643     0335  1D03               	btfss	3,2
  3644     0336  2B9F               	goto	l2939
  3645     0337  01A8               	clrf	set_temp@wait
  3646     0338  01A9               	clrf	set_temp@wait+1
  3647     0339  0826               	movf	set_temp@blink,w
  3648     033A  0427               	iorwf	set_temp@blink+1,w
  3649     033B  1D03               	btfss	3,2
  3650     033C  2B3F               	goto	u2750
  3651     033D  3001               	movlw	1
  3652     033E  2B40               	goto	u2760
  3653     033F                     u2750:
  3654     033F  3000               	movlw	0
  3655     0340                     u2760:
  3656     0340  00CF               	movwf	??_set_temp
  3657     0341  01D0               	clrf	??_set_temp+1
  3658     0342  084F               	movf	??_set_temp,w
  3659     0343  00A6               	movwf	set_temp@blink
  3660     0344  0850               	movf	??_set_temp+1,w
  3661     0345  00A7               	movwf	set_temp@blink+1
  3662     0346  30C8               	movlw	200
  3663     0347  00CE               	movwf	clcd_putch@addr
  3664     0348  3064               	movlw	100
  3665     0349  00F3               	movwf	___awdiv@divisor
  3666     034A  3000               	movlw	0
  3667     034B  00F4               	movwf	___awdiv@divisor+1
  3668     034C  0823               	movf	set_temp@temp+1,w
  3669     034D  00F6               	movwf	___awdiv@dividend+1
  3670     034E  0822               	movf	set_temp@temp,w
  3671     034F  00F5               	movwf	___awdiv@dividend
  3672     0350  120A  118A  2795  120A  118A  	fcall	___awdiv
  3673     0355  0873               	movf	?___awdiv,w
  3674     0356  3E30               	addlw	48
  3675     0357  120A  158A  250E  120A  118A  	fcall	_clcd_putch
  3676     035C  30C9               	movlw	201
  3677     035D  1283               	bcf	3,5	;RP0=0, select bank0
  3678     035E  1303               	bcf	3,6	;RP1=0, select bank0
  3679     035F  00CE               	movwf	clcd_putch@addr
  3680     0360  300A               	movlw	10
  3681     0361  00C8               	movwf	___awmod@divisor
  3682     0362  3000               	movlw	0
  3683     0363  00C9               	movwf	___awmod@divisor+1
  3684     0364  300A               	movlw	10
  3685     0365  00F3               	movwf	___awdiv@divisor
  3686     0366  3000               	movlw	0
  3687     0367  00F4               	movwf	___awdiv@divisor+1
  3688     0368  0823               	movf	set_temp@temp+1,w
  3689     0369  00F6               	movwf	___awdiv@dividend+1
  3690     036A  0822               	movf	set_temp@temp,w
  3691     036B  00F5               	movwf	___awdiv@dividend
  3692     036C  120A  118A  2795  120A  118A  	fcall	___awdiv
  3693     0371  0874               	movf	?___awdiv+1,w
  3694     0372  1283               	bcf	3,5	;RP0=0, select bank0
  3695     0373  1303               	bcf	3,6	;RP1=0, select bank0
  3696     0374  00CB               	movwf	___awmod@dividend+1
  3697     0375  0873               	movf	?___awdiv,w
  3698     0376  00CA               	movwf	___awmod@dividend
  3699     0377  120A  158A  2648  120A  118A  	fcall	___awmod
  3700     037C  1283               	bcf	3,5	;RP0=0, select bank0
  3701     037D  1303               	bcf	3,6	;RP1=0, select bank0
  3702     037E  0848               	movf	?___awmod,w
  3703     037F  3E30               	addlw	48
  3704     0380  120A  158A  250E  120A  118A  	fcall	_clcd_putch
  3705     0385  30CA               	movlw	202
  3706     0386  1283               	bcf	3,5	;RP0=0, select bank0
  3707     0387  1303               	bcf	3,6	;RP1=0, select bank0
  3708     0388  00CE               	movwf	clcd_putch@addr
  3709     0389  300A               	movlw	10
  3710     038A  00C8               	movwf	___awmod@divisor
  3711     038B  3000               	movlw	0
  3712     038C  00C9               	movwf	___awmod@divisor+1
  3713     038D  0823               	movf	set_temp@temp+1,w
  3714     038E  00CB               	movwf	___awmod@dividend+1
  3715     038F  0822               	movf	set_temp@temp,w
  3716     0390  00CA               	movwf	___awmod@dividend
  3717     0391  120A  158A  2648  120A  118A  	fcall	___awmod
  3718     0396  1283               	bcf	3,5	;RP0=0, select bank0
  3719     0397  1303               	bcf	3,6	;RP1=0, select bank0
  3720     0398  0848               	movf	?___awmod,w
  3721     0399  3E30               	addlw	48
  3722     039A  120A  158A  250E  120A  118A  	fcall	_clcd_putch
  3723     039F                     l2939:
  3724     039F  1283               	bcf	3,5	;RP0=0, select bank0
  3725     03A0  1303               	bcf	3,6	;RP1=0, select bank0
  3726     03A1  0826               	movf	set_temp@blink,w
  3727     03A2  0427               	iorwf	set_temp@blink+1,w
  3728     03A3  1903               	btfsc	3,2
  3729     03A4  2BAE               	goto	l2943
  3730     03A5  300D               	movlw	low ((STR_18+13)| (0+32768))
  3731     03A6  00C4               	movwf	clcd_print@str
  3732     03A7  3084               	movlw	high ((STR_18+13)| (0+32768))
  3733     03A8  00C5               	movwf	clcd_print@str+1
  3734     03A9  30C8               	movlw	200
  3735     03AA  00C6               	movwf	clcd_print@addr
  3736     03AB  120A  158A  257D   	fcall	_clcd_print
  3737     03AE                     l2943:
  3738     03AE  3011               	movlw	17
  3739     03AF  0008               	return
  3740     03B0                     __end_of_set_temp:
  3741                           
  3742                           	psect	text9
  3743     0CEA                     __ptext9:	
  3744 ;; *************** function _clear_dis *****************
  3745 ;; Defined at:
  3746 ;;		line 207 in file "main.c"
  3747 ;; Parameters:    Size  Location     Type
  3748 ;;		None
  3749 ;; Auto vars:     Size  Location     Type
  3750 ;;		None
  3751 ;; Return value:  Size  Location     Type
  3752 ;;                  1    wreg      void 
  3753 ;; Registers used:
  3754 ;;		wreg, status,2, status,0, pclath, cstack
  3755 ;; Tracked objects:
  3756 ;;		On entry : 0/0
  3757 ;;		On exit  : 0/0
  3758 ;;		Unchanged: 0/0
  3759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3760 ;;      Params:         0       0       0       0       0
  3761 ;;      Locals:         0       0       0       0       0
  3762 ;;      Temps:          0       0       0       0       0
  3763 ;;      Totals:         0       0       0       0       0
  3764 ;;Total ram usage:        0 bytes
  3765 ;; Hardware stack levels used: 1
  3766 ;; Hardware stack levels required when called: 2
  3767 ;; This function calls:
  3768 ;;		_clcd_write
  3769 ;; This function is called by:
  3770 ;;		_main
  3771 ;;		_mode_select
  3772 ;;		_set_time
  3773 ;;		_door_status_check
  3774 ;;		_time_dis
  3775 ;;		_set_temp
  3776 ;; This function uses a non-reentrant model
  3777 ;;
  3778                           
  3779     0CEA                     _clear_dis:	
  3780                           ;psect for function _clear_dis
  3781                           
  3782                           
  3783                           ;main.c: 209:         clcd_print("*:CLEAR  #:ENTER", (0xD0 + 0));
  3784                           
  3785                           ;incstack = 0
  3786                           ; Regs used in _clear_dis: [wreg+status,2+status,0+pclath+cstack]
  3787     0CEA  01F3               	clrf	clcd_write@mode
  3788     0CEB  3001               	movlw	1
  3789     0CEC  120A  158A  2613   	fcall	_clcd_write
  3790     0CEF  0008               	return
  3791     0CF0                     __end_of_clear_dis:
  3792                           
  3793                           	psect	text10
  3794     0D0E                     __ptext10:	
  3795 ;; *************** function _clcd_putch *****************
  3796 ;; Defined at:
  3797 ;;		line 56 in file "clcd.c"
  3798 ;; Parameters:    Size  Location     Type
  3799 ;;  data            1    wreg     const unsigned char 
  3800 ;;  addr            1   10[BANK0 ] unsigned char 
  3801 ;; Auto vars:     Size  Location     Type
  3802 ;;  data            1    7[COMMON] const unsigned char 
  3803 ;; Return value:  Size  Location     Type
  3804 ;;                  1    wreg      void 
  3805 ;; Registers used:
  3806 ;;		wreg, status,2, status,0, pclath, cstack
  3807 ;; Tracked objects:
  3808 ;;		On entry : 0/0
  3809 ;;		On exit  : 0/0
  3810 ;;		Unchanged: 0/0
  3811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3812 ;;      Params:         0       1       0       0       0
  3813 ;;      Locals:         1       0       0       0       0
  3814 ;;      Temps:          0       0       0       0       0
  3815 ;;      Totals:         1       1       0       0       0
  3816 ;;Total ram usage:        2 bytes
  3817 ;; Hardware stack levels used: 1
  3818 ;; Hardware stack levels required when called: 2
  3819 ;; This function calls:
  3820 ;;		_clcd_write
  3821 ;; This function is called by:
  3822 ;;		_power_on
  3823 ;;		_time_dis
  3824 ;;		_set_temp
  3825 ;; This function uses a non-reentrant model
  3826 ;;
  3827                           
  3828     0D0E                     _clcd_putch:	
  3829                           ;psect for function _clcd_putch
  3830                           
  3831                           
  3832                           ;incstack = 0
  3833                           ; Regs used in _clcd_putch: [wreg+status,2+status,0+pclath+cstack]
  3834                           ;clcd_putch@data stored from wreg
  3835     0D0E  00F7               	movwf	clcd_putch@data
  3836                           
  3837                           ;clcd.c: 56: void clcd_putch(const char data, unsigned char addr);clcd.c: 57: {;clcd.c: 
      +                          58:     clcd_write(addr, 0);
  3838     0D0F  01F3               	clrf	clcd_write@mode
  3839     0D10  1283               	bcf	3,5	;RP0=0, select bank0
  3840     0D11  1303               	bcf	3,6	;RP1=0, select bank0
  3841     0D12  084E               	movf	clcd_putch@addr,w
  3842     0D13  120A  158A  2613  120A  158A  	fcall	_clcd_write
  3843                           
  3844                           ;clcd.c: 59:     clcd_write(data, 1);
  3845     0D18  01F3               	clrf	clcd_write@mode
  3846     0D19  0AF3               	incf	clcd_write@mode,f
  3847     0D1A  0877               	movf	clcd_putch@data,w
  3848     0D1B  120A  158A  2613   	fcall	_clcd_write
  3849     0D1E  0008               	return
  3850     0D1F                     __end_of_clcd_putch:
  3851                           
  3852                           	psect	text11
  3853     0D56                     __ptext11:	
  3854 ;; *************** function ___wmul *****************
  3855 ;; Defined at:
  3856 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  3857 ;; Parameters:    Size  Location     Type
  3858 ;;  multiplier      2    3[COMMON] unsigned int 
  3859 ;;  multiplicand    2    5[COMMON] unsigned int 
  3860 ;; Auto vars:     Size  Location     Type
  3861 ;;  product         2    0[BANK0 ] unsigned int 
  3862 ;; Return value:  Size  Location     Type
  3863 ;;                  2    3[COMMON] unsigned int 
  3864 ;; Registers used:
  3865 ;;		wreg, status,2, status,0
  3866 ;; Tracked objects:
  3867 ;;		On entry : 0/0
  3868 ;;		On exit  : 0/0
  3869 ;;		Unchanged: 0/0
  3870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3871 ;;      Params:         4       0       0       0       0
  3872 ;;      Locals:         0       2       0       0       0
  3873 ;;      Temps:          0       0       0       0       0
  3874 ;;      Totals:         4       2       0       0       0
  3875 ;;Total ram usage:        6 bytes
  3876 ;; Hardware stack levels used: 1
  3877 ;; Hardware stack levels required when called: 1
  3878 ;; This function calls:
  3879 ;;		Nothing
  3880 ;; This function is called by:
  3881 ;;		_set_time
  3882 ;;		_set_temp
  3883 ;; This function uses a non-reentrant model
  3884 ;;
  3885                           
  3886     0D56                     ___wmul:	
  3887                           ;psect for function ___wmul
  3888                           
  3889                           
  3890                           ;incstack = 0
  3891                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3892     0D56  1283               	bcf	3,5	;RP0=0, select bank0
  3893     0D57  1303               	bcf	3,6	;RP1=0, select bank0
  3894     0D58  01C4               	clrf	___wmul@product
  3895     0D59  01C5               	clrf	___wmul@product+1
  3896     0D5A                     l2587:
  3897     0D5A  1C73               	btfss	___wmul@multiplier,0
  3898     0D5B  2D64               	goto	l414
  3899     0D5C  0875               	movf	___wmul@multiplicand,w
  3900     0D5D  1283               	bcf	3,5	;RP0=0, select bank0
  3901     0D5E  1303               	bcf	3,6	;RP1=0, select bank0
  3902     0D5F  07C4               	addwf	___wmul@product,f
  3903     0D60  1803               	skipnc
  3904     0D61  0AC5               	incf	___wmul@product+1,f
  3905     0D62  0876               	movf	___wmul@multiplicand+1,w
  3906     0D63  07C5               	addwf	___wmul@product+1,f
  3907     0D64                     l414:
  3908     0D64  3001               	movlw	1
  3909     0D65                     u2225:
  3910     0D65  1003               	clrc
  3911     0D66  0DF5               	rlf	___wmul@multiplicand,f
  3912     0D67  0DF6               	rlf	___wmul@multiplicand+1,f
  3913     0D68  3EFF               	addlw	-1
  3914     0D69  1D03               	skipz
  3915     0D6A  2D65               	goto	u2225
  3916     0D6B  3001               	movlw	1
  3917     0D6C                     u2235:
  3918     0D6C  1003               	clrc
  3919     0D6D  0CF4               	rrf	___wmul@multiplier+1,f
  3920     0D6E  0CF3               	rrf	___wmul@multiplier,f
  3921     0D6F  3EFF               	addlw	-1
  3922     0D70  1D03               	skipz
  3923     0D71  2D6C               	goto	u2235
  3924     0D72  0873               	movf	___wmul@multiplier,w
  3925     0D73  0474               	iorwf	___wmul@multiplier+1,w
  3926     0D74  1D03               	btfss	3,2
  3927     0D75  2D5A               	goto	l2587
  3928     0D76  1283               	bcf	3,5	;RP0=0, select bank0
  3929     0D77  1303               	bcf	3,6	;RP1=0, select bank0
  3930     0D78  0845               	movf	___wmul@product+1,w
  3931     0D79  00F4               	movwf	?___wmul+1
  3932     0D7A  0844               	movf	___wmul@product,w
  3933     0D7B  00F3               	movwf	?___wmul
  3934     0D7C  0008               	return
  3935     0D7D                     __end_of___wmul:
  3936                           
  3937                           	psect	text12
  3938     0E48                     __ptext12:	
  3939 ;; *************** function ___awmod *****************
  3940 ;; Defined at:
  3941 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
  3942 ;; Parameters:    Size  Location     Type
  3943 ;;  divisor         2    4[BANK0 ] int 
  3944 ;;  dividend        2    6[BANK0 ] int 
  3945 ;; Auto vars:     Size  Location     Type
  3946 ;;  sign            1    9[BANK0 ] unsigned char 
  3947 ;;  counter         1    8[BANK0 ] unsigned char 
  3948 ;; Return value:  Size  Location     Type
  3949 ;;                  2    4[BANK0 ] int 
  3950 ;; Registers used:
  3951 ;;		wreg, status,2, status,0, btemp+1
  3952 ;; Tracked objects:
  3953 ;;		On entry : 0/0
  3954 ;;		On exit  : 0/0
  3955 ;;		Unchanged: 0/0
  3956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3957 ;;      Params:         0       4       0       0       0
  3958 ;;      Locals:         0       2       0       0       0
  3959 ;;      Temps:          0       0       0       0       0
  3960 ;;      Totals:         0       6       0       0       0
  3961 ;;Total ram usage:        6 bytes
  3962 ;; Hardware stack levels used: 1
  3963 ;; Hardware stack levels required when called: 1
  3964 ;; This function calls:
  3965 ;;		Nothing
  3966 ;; This function is called by:
  3967 ;;		_set_time
  3968 ;;		_time_dis
  3969 ;;		_set_temp
  3970 ;; This function uses a non-reentrant model
  3971 ;;
  3972                           
  3973     0E48                     ___awmod:	
  3974                           ;psect for function ___awmod
  3975                           
  3976                           
  3977                           ;incstack = 0
  3978                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  3979     0E48  1283               	bcf	3,5	;RP0=0, select bank0
  3980     0E49  1303               	bcf	3,6	;RP1=0, select bank0
  3981     0E4A  01CD               	clrf	___awmod@sign
  3982     0E4B  1FCB               	btfss	___awmod@dividend+1,7
  3983     0E4C  2E54               	goto	l2651
  3984     0E4D  09CA               	comf	___awmod@dividend,f
  3985     0E4E  09CB               	comf	___awmod@dividend+1,f
  3986     0E4F  0ACA               	incf	___awmod@dividend,f
  3987     0E50  1903               	skipnz
  3988     0E51  0ACB               	incf	___awmod@dividend+1,f
  3989     0E52  01CD               	clrf	___awmod@sign
  3990     0E53  0ACD               	incf	___awmod@sign,f
  3991     0E54                     l2651:
  3992     0E54  1FC9               	btfss	___awmod@divisor+1,7
  3993     0E55  2E5B               	goto	l2655
  3994     0E56  09C8               	comf	___awmod@divisor,f
  3995     0E57  09C9               	comf	___awmod@divisor+1,f
  3996     0E58  0AC8               	incf	___awmod@divisor,f
  3997     0E59  1903               	skipnz
  3998     0E5A  0AC9               	incf	___awmod@divisor+1,f
  3999     0E5B                     l2655:
  4000     0E5B  0848               	movf	___awmod@divisor,w
  4001     0E5C  0449               	iorwf	___awmod@divisor+1,w
  4002     0E5D  1903               	btfsc	3,2
  4003     0E5E  2E88               	goto	l2673
  4004     0E5F  01CC               	clrf	___awmod@counter
  4005     0E60  0ACC               	incf	___awmod@counter,f
  4006     0E61                     l2663:
  4007     0E61  1BC9               	btfsc	___awmod@divisor+1,7
  4008     0E62  2E6F               	goto	l2665
  4009     0E63  3001               	movlw	1
  4010     0E64                     u2385:
  4011     0E64  1003               	clrc
  4012     0E65  0DC8               	rlf	___awmod@divisor,f
  4013     0E66  0DC9               	rlf	___awmod@divisor+1,f
  4014     0E67  3EFF               	addlw	-1
  4015     0E68  1D03               	skipz
  4016     0E69  2E64               	goto	u2385
  4017     0E6A  3001               	movlw	1
  4018     0E6B  00FF               	movwf	127
  4019     0E6C  087F               	movf	127,w
  4020     0E6D  07CC               	addwf	___awmod@counter,f
  4021     0E6E  2E61               	goto	l2663
  4022     0E6F                     l2665:
  4023     0E6F  0849               	movf	___awmod@divisor+1,w
  4024     0E70  024B               	subwf	___awmod@dividend+1,w
  4025     0E71  1D03               	skipz
  4026     0E72  2E75               	goto	u2405
  4027     0E73  0848               	movf	___awmod@divisor,w
  4028     0E74  024A               	subwf	___awmod@dividend,w
  4029     0E75                     u2405:
  4030     0E75  1C03               	skipc
  4031     0E76  2E7D               	goto	l2669
  4032     0E77  0848               	movf	___awmod@divisor,w
  4033     0E78  02CA               	subwf	___awmod@dividend,f
  4034     0E79  0849               	movf	___awmod@divisor+1,w
  4035     0E7A  1C03               	skipc
  4036     0E7B  03CB               	decf	___awmod@dividend+1,f
  4037     0E7C  02CB               	subwf	___awmod@dividend+1,f
  4038     0E7D                     l2669:
  4039     0E7D  3001               	movlw	1
  4040     0E7E                     u2415:
  4041     0E7E  1003               	clrc
  4042     0E7F  0CC9               	rrf	___awmod@divisor+1,f
  4043     0E80  0CC8               	rrf	___awmod@divisor,f
  4044     0E81  3EFF               	addlw	-1
  4045     0E82  1D03               	skipz
  4046     0E83  2E7E               	goto	u2415
  4047     0E84  3001               	movlw	1
  4048     0E85  02CC               	subwf	___awmod@counter,f
  4049     0E86  1D03               	btfss	3,2
  4050     0E87  2E6F               	goto	l2665
  4051     0E88                     l2673:
  4052     0E88  084D               	movf	___awmod@sign,w
  4053     0E89  1903               	btfsc	3,2
  4054     0E8A  2E90               	goto	l2677
  4055     0E8B  09CA               	comf	___awmod@dividend,f
  4056     0E8C  09CB               	comf	___awmod@dividend+1,f
  4057     0E8D  0ACA               	incf	___awmod@dividend,f
  4058     0E8E  1903               	skipnz
  4059     0E8F  0ACB               	incf	___awmod@dividend+1,f
  4060     0E90                     l2677:
  4061     0E90  084B               	movf	___awmod@dividend+1,w
  4062     0E91  00C9               	movwf	?___awmod+1
  4063     0E92  084A               	movf	___awmod@dividend,w
  4064     0E93  00C8               	movwf	?___awmod
  4065     0E94  0008               	return
  4066     0E95                     __end_of___awmod:
  4067                           
  4068                           	psect	text13
  4069     0795                     __ptext13:	
  4070 ;; *************** function ___awdiv *****************
  4071 ;; Defined at:
  4072 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  4073 ;; Parameters:    Size  Location     Type
  4074 ;;  divisor         2    3[COMMON] int 
  4075 ;;  dividend        2    5[COMMON] int 
  4076 ;; Auto vars:     Size  Location     Type
  4077 ;;  quotient        2    2[BANK0 ] int 
  4078 ;;  sign            1    1[BANK0 ] unsigned char 
  4079 ;;  counter         1    0[BANK0 ] unsigned char 
  4080 ;; Return value:  Size  Location     Type
  4081 ;;                  2    3[COMMON] int 
  4082 ;; Registers used:
  4083 ;;		wreg, status,2, status,0, btemp+1
  4084 ;; Tracked objects:
  4085 ;;		On entry : 0/0
  4086 ;;		On exit  : 0/0
  4087 ;;		Unchanged: 0/0
  4088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4089 ;;      Params:         4       0       0       0       0
  4090 ;;      Locals:         0       4       0       0       0
  4091 ;;      Temps:          0       0       0       0       0
  4092 ;;      Totals:         4       4       0       0       0
  4093 ;;Total ram usage:        8 bytes
  4094 ;; Hardware stack levels used: 1
  4095 ;; Hardware stack levels required when called: 1
  4096 ;; This function calls:
  4097 ;;		Nothing
  4098 ;; This function is called by:
  4099 ;;		_set_time
  4100 ;;		_time_dis
  4101 ;;		_set_temp
  4102 ;; This function uses a non-reentrant model
  4103 ;;
  4104                           
  4105     0795                     ___awdiv:	
  4106                           ;psect for function ___awdiv
  4107                           
  4108                           
  4109                           ;incstack = 0
  4110                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  4111     0795  1283               	bcf	3,5	;RP0=0, select bank0
  4112     0796  1303               	bcf	3,6	;RP1=0, select bank0
  4113     0797  01C5               	clrf	___awdiv@sign
  4114     0798  1FF4               	btfss	___awdiv@divisor+1,7
  4115     0799  2FA1               	goto	l2607
  4116     079A  09F3               	comf	___awdiv@divisor,f
  4117     079B  09F4               	comf	___awdiv@divisor+1,f
  4118     079C  0AF3               	incf	___awdiv@divisor,f
  4119     079D  1903               	skipnz
  4120     079E  0AF4               	incf	___awdiv@divisor+1,f
  4121     079F  01C5               	clrf	___awdiv@sign
  4122     07A0  0AC5               	incf	___awdiv@sign,f
  4123     07A1                     l2607:
  4124     07A1  1FF6               	btfss	___awdiv@dividend+1,7
  4125     07A2  2FAC               	goto	l2613
  4126     07A3  09F5               	comf	___awdiv@dividend,f
  4127     07A4  09F6               	comf	___awdiv@dividend+1,f
  4128     07A5  0AF5               	incf	___awdiv@dividend,f
  4129     07A6  1903               	skipnz
  4130     07A7  0AF6               	incf	___awdiv@dividend+1,f
  4131     07A8  3001               	movlw	1
  4132     07A9  00FF               	movwf	127
  4133     07AA  087F               	movf	127,w
  4134     07AB  06C5               	xorwf	___awdiv@sign,f
  4135     07AC                     l2613:
  4136     07AC  01C6               	clrf	___awdiv@quotient
  4137     07AD  01C7               	clrf	___awdiv@quotient+1
  4138     07AE  0873               	movf	___awdiv@divisor,w
  4139     07AF  0474               	iorwf	___awdiv@divisor+1,w
  4140     07B0  1903               	btfsc	3,2
  4141     07B1  2FE3               	goto	l2635
  4142     07B2  01C4               	clrf	___awdiv@counter
  4143     07B3  0AC4               	incf	___awdiv@counter,f
  4144     07B4                     l2623:
  4145     07B4  1BF4               	btfsc	___awdiv@divisor+1,7
  4146     07B5  2FC2               	goto	l2625
  4147     07B6  3001               	movlw	1
  4148     07B7                     u2285:
  4149     07B7  1003               	clrc
  4150     07B8  0DF3               	rlf	___awdiv@divisor,f
  4151     07B9  0DF4               	rlf	___awdiv@divisor+1,f
  4152     07BA  3EFF               	addlw	-1
  4153     07BB  1D03               	skipz
  4154     07BC  2FB7               	goto	u2285
  4155     07BD  3001               	movlw	1
  4156     07BE  00FF               	movwf	127
  4157     07BF  087F               	movf	127,w
  4158     07C0  07C4               	addwf	___awdiv@counter,f
  4159     07C1  2FB4               	goto	l2623
  4160     07C2                     l2625:
  4161     07C2  3001               	movlw	1
  4162     07C3                     u2305:
  4163     07C3  1003               	clrc
  4164     07C4  0DC6               	rlf	___awdiv@quotient,f
  4165     07C5  0DC7               	rlf	___awdiv@quotient+1,f
  4166     07C6  3EFF               	addlw	-1
  4167     07C7  1D03               	skipz
  4168     07C8  2FC3               	goto	u2305
  4169     07C9  0874               	movf	___awdiv@divisor+1,w
  4170     07CA  0276               	subwf	___awdiv@dividend+1,w
  4171     07CB  1D03               	skipz
  4172     07CC  2FCF               	goto	u2315
  4173     07CD  0873               	movf	___awdiv@divisor,w
  4174     07CE  0275               	subwf	___awdiv@dividend,w
  4175     07CF                     u2315:
  4176     07CF  1C03               	skipc
  4177     07D0  2FD8               	goto	l2631
  4178     07D1  0873               	movf	___awdiv@divisor,w
  4179     07D2  02F5               	subwf	___awdiv@dividend,f
  4180     07D3  0874               	movf	___awdiv@divisor+1,w
  4181     07D4  1C03               	skipc
  4182     07D5  03F6               	decf	___awdiv@dividend+1,f
  4183     07D6  02F6               	subwf	___awdiv@dividend+1,f
  4184     07D7  1446               	bsf	___awdiv@quotient,0
  4185     07D8                     l2631:
  4186     07D8  3001               	movlw	1
  4187     07D9                     u2325:
  4188     07D9  1003               	clrc
  4189     07DA  0CF4               	rrf	___awdiv@divisor+1,f
  4190     07DB  0CF3               	rrf	___awdiv@divisor,f
  4191     07DC  3EFF               	addlw	-1
  4192     07DD  1D03               	skipz
  4193     07DE  2FD9               	goto	u2325
  4194     07DF  3001               	movlw	1
  4195     07E0  02C4               	subwf	___awdiv@counter,f
  4196     07E1  1D03               	btfss	3,2
  4197     07E2  2FC2               	goto	l2625
  4198     07E3                     l2635:
  4199     07E3  0845               	movf	___awdiv@sign,w
  4200     07E4  1903               	btfsc	3,2
  4201     07E5  2FEB               	goto	l2639
  4202     07E6  09C6               	comf	___awdiv@quotient,f
  4203     07E7  09C7               	comf	___awdiv@quotient+1,f
  4204     07E8  0AC6               	incf	___awdiv@quotient,f
  4205     07E9  1903               	skipnz
  4206     07EA  0AC7               	incf	___awdiv@quotient+1,f
  4207     07EB                     l2639:
  4208     07EB  0847               	movf	___awdiv@quotient+1,w
  4209     07EC  00F4               	movwf	?___awdiv+1
  4210     07ED  0846               	movf	___awdiv@quotient,w
  4211     07EE  00F3               	movwf	?___awdiv
  4212     07EF  0008               	return
  4213     07F0                     __end_of___awdiv:
  4214                           
  4215                           	psect	text14
  4216     0DAD                     __ptext14:	
  4217 ;; *************** function _modes_display *****************
  4218 ;; Defined at:
  4219 ;;		line 199 in file "main.c"
  4220 ;; Parameters:    Size  Location     Type
  4221 ;;		None
  4222 ;; Auto vars:     Size  Location     Type
  4223 ;;		None
  4224 ;; Return value:  Size  Location     Type
  4225 ;;                  1    wreg      void 
  4226 ;; Registers used:
  4227 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4228 ;; Tracked objects:
  4229 ;;		On entry : 0/0
  4230 ;;		On exit  : 0/0
  4231 ;;		Unchanged: 0/0
  4232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4233 ;;      Params:         0       0       0       0       0
  4234 ;;      Locals:         0       0       0       0       0
  4235 ;;      Temps:          0       0       0       0       0
  4236 ;;      Totals:         0       0       0       0       0
  4237 ;;Total ram usage:        0 bytes
  4238 ;; Hardware stack levels used: 1
  4239 ;; Hardware stack levels required when called: 3
  4240 ;; This function calls:
  4241 ;;		_clcd_print
  4242 ;; This function is called by:
  4243 ;;		_mode_select
  4244 ;; This function uses a non-reentrant model
  4245 ;;
  4246                           
  4247     0DAD                     _modes_display:	
  4248                           ;psect for function _modes_display
  4249                           
  4250                           
  4251                           ;main.c: 201:         min = 0;
  4252                           
  4253                           ;incstack = 0
  4254                           ; Regs used in _modes_display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4255     0DAD  3027               	movlw	low (STR_4| (0+32768))
  4256     0DAE  1283               	bcf	3,5	;RP0=0, select bank0
  4257     0DAF  1303               	bcf	3,6	;RP1=0, select bank0
  4258     0DB0  00C4               	movwf	clcd_print@str
  4259     0DB1  3085               	movlw	high (STR_4| (0+32768))
  4260     0DB2  00C5               	movwf	clcd_print@str+1
  4261     0DB3  3080               	movlw	128
  4262     0DB4  00C6               	movwf	clcd_print@addr
  4263     0DB5  120A  158A  257D  120A  158A  	fcall	_clcd_print
  4264                           
  4265                           ;main.c: 202:         key_count = 0;
  4266     0DBA  301F               	movlw	low (STR_5| (0+32768))
  4267     0DBB  1283               	bcf	3,5	;RP0=0, select bank0
  4268     0DBC  1303               	bcf	3,6	;RP1=0, select bank0
  4269     0DBD  00C4               	movwf	clcd_print@str
  4270     0DBE  3085               	movlw	high (STR_5| (0+32768))
  4271     0DBF  00C5               	movwf	clcd_print@str+1
  4272     0DC0  30C0               	movlw	192
  4273     0DC1  00C6               	movwf	clcd_print@addr
  4274     0DC2  120A  158A  257D  120A  158A  	fcall	_clcd_print
  4275                           
  4276                           ;main.c: 203:         blink = 0;
  4277     0DC7  30E4               	movlw	low (STR_6| (0+32768))
  4278     0DC8  1283               	bcf	3,5	;RP0=0, select bank0
  4279     0DC9  1303               	bcf	3,6	;RP1=0, select bank0
  4280     0DCA  00C4               	movwf	clcd_print@str
  4281     0DCB  3084               	movlw	high (STR_6| (0+32768))
  4282     0DCC  00C5               	movwf	clcd_print@str+1
  4283     0DCD  3090               	movlw	144
  4284     0DCE  00C6               	movwf	clcd_print@addr
  4285     0DCF  120A  158A  257D  120A  158A  	fcall	_clcd_print
  4286                           
  4287                           ;main.c: 204:         blink_pos = 0;
  4288     0DD4  302F               	movlw	low (STR_7| (0+32768))
  4289     0DD5  1283               	bcf	3,5	;RP0=0, select bank0
  4290     0DD6  1303               	bcf	3,6	;RP1=0, select bank0
  4291     0DD7  00C4               	movwf	clcd_print@str
  4292     0DD8  3085               	movlw	high (STR_7| (0+32768))
  4293     0DD9  00C5               	movwf	clcd_print@str+1
  4294     0DDA  30D0               	movlw	208
  4295     0DDB  00C6               	movwf	clcd_print@addr
  4296     0DDC  120A  158A  257D   	fcall	_clcd_print
  4297     0DDF  0008               	return
  4298     0DE0                     __end_of_modes_display:
  4299                           
  4300                           	psect	text15
  4301     0D7D                     __ptext15:	
  4302 ;; *************** function _clcd_print *****************
  4303 ;; Defined at:
  4304 ;;		line 62 in file "clcd.c"
  4305 ;; Parameters:    Size  Location     Type
  4306 ;;  str             2    0[BANK0 ] PTR const unsigned char 
  4307 ;;		 -> STR_26(4), STR_25(12), STR_24(14), STR_23(15), 
  4308 ;;		 -> STR_22(17), STR_21(12), STR_20(17), STR_19(16), 
  4309 ;;		 -> STR_18(17), STR_17(17), STR_16(17), STR_15(10), 
  4310 ;;		 -> STR_14(13), STR_13(17), STR_12(3), STR_11(3), 
  4311 ;;		 -> min_arr(3), sec_arr(3), STR_10(17), STR_9(12), 
  4312 ;;		 -> STR_8(17), STR_7(8), STR_6(13), STR_5(8), 
  4313 ;;		 -> STR_4(8), STR_3(17), STR_2(17), STR_1(17), 
  4314 ;;  addr            1    2[BANK0 ] unsigned char 
  4315 ;; Auto vars:     Size  Location     Type
  4316 ;;		None
  4317 ;; Return value:  Size  Location     Type
  4318 ;;                  1    wreg      void 
  4319 ;; Registers used:
  4320 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4321 ;; Tracked objects:
  4322 ;;		On entry : 0/0
  4323 ;;		On exit  : 0/0
  4324 ;;		Unchanged: 0/0
  4325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4326 ;;      Params:         0       3       0       0       0
  4327 ;;      Locals:         0       0       0       0       0
  4328 ;;      Temps:          0       0       0       0       0
  4329 ;;      Totals:         0       3       0       0       0
  4330 ;;Total ram usage:        3 bytes
  4331 ;; Hardware stack levels used: 1
  4332 ;; Hardware stack levels required when called: 2
  4333 ;; This function calls:
  4334 ;;		_clcd_write
  4335 ;; This function is called by:
  4336 ;;		_main
  4337 ;;		_power_on
  4338 ;;		_modes_display
  4339 ;;		_set_time
  4340 ;;		_door_status_check
  4341 ;;		_time_dis
  4342 ;;		_set_temp
  4343 ;; This function uses a non-reentrant model
  4344 ;;
  4345                           
  4346     0D7D                     _clcd_print:	
  4347                           ;psect for function _clcd_print
  4348                           
  4349                           
  4350                           ;clcd.c: 62: void clcd_print(const char *str, unsigned char addr);clcd.c: 63: {;clcd.c: 
      +                          64:     clcd_write(addr, 0);
  4351                           
  4352                           ;incstack = 0
  4353                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4354     0D7D  01F3               	clrf	clcd_write@mode
  4355     0D7E  1283               	bcf	3,5	;RP0=0, select bank0
  4356     0D7F  1303               	bcf	3,6	;RP1=0, select bank0
  4357     0D80  0846               	movf	clcd_print@addr,w
  4358     0D81  120A  158A  2613  120A  158A  	fcall	_clcd_write
  4359     0D86                     l2537:	
  4360                           ;clcd.c: 66:     while (*str != '\0')
  4361                           
  4362                           
  4363                           ;clcd.c: 66:     while (*str != '\0')
  4364     0D86  1283               	bcf	3,5	;RP0=0, select bank0
  4365     0D87  1303               	bcf	3,6	;RP1=0, select bank0
  4366     0D88  0845               	movf	clcd_print@str+1,w
  4367     0D89  00FF               	movwf	127
  4368     0D8A  0844               	movf	clcd_print@str,w
  4369     0D8B  0084               	movwf	4
  4370     0D8C  120A  158A  2000  120A  158A  	fcall	stringtab
  4371     0D91  3A00               	xorlw	0
  4372     0D92  1903               	btfsc	3,2
  4373     0D93  0008               	return
  4374                           
  4375                           ;clcd.c: 67:     {;clcd.c: 68:         clcd_write(*str, 1);
  4376     0D94  01F3               	clrf	clcd_write@mode
  4377     0D95  0AF3               	incf	clcd_write@mode,f
  4378     0D96  0845               	movf	clcd_print@str+1,w
  4379     0D97  00FF               	movwf	127
  4380     0D98  0844               	movf	clcd_print@str,w
  4381     0D99  0084               	movwf	4
  4382     0D9A  120A  158A  2000  120A  158A  	fcall	stringtab
  4383     0D9F  120A  158A  2613  120A  158A  	fcall	_clcd_write
  4384                           
  4385                           ;clcd.c: 69:         str++;
  4386     0DA4  3001               	movlw	1
  4387     0DA5  1283               	bcf	3,5	;RP0=0, select bank0
  4388     0DA6  1303               	bcf	3,6	;RP1=0, select bank0
  4389     0DA7  07C4               	addwf	clcd_print@str,f
  4390     0DA8  1803               	skipnc
  4391     0DA9  0AC5               	incf	clcd_print@str+1,f
  4392     0DAA  3000               	movlw	0
  4393     0DAB  07C5               	addwf	clcd_print@str+1,f
  4394     0DAC  2D86               	goto	l2537
  4395     0DAD                     __end_of_clcd_print:
  4396                           
  4397                           	psect	text16
  4398     0D3A                     __ptext16:	
  4399 ;; *************** function _init_config *****************
  4400 ;; Defined at:
  4401 ;;		line 21 in file "main.c"
  4402 ;; Parameters:    Size  Location     Type
  4403 ;;		None
  4404 ;; Auto vars:     Size  Location     Type
  4405 ;;		None
  4406 ;; Return value:  Size  Location     Type
  4407 ;;                  1    wreg      void 
  4408 ;; Registers used:
  4409 ;;		wreg, status,2, status,0, pclath, cstack
  4410 ;; Tracked objects:
  4411 ;;		On entry : 0/0
  4412 ;;		On exit  : 0/0
  4413 ;;		Unchanged: 0/0
  4414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4415 ;;      Params:         0       0       0       0       0
  4416 ;;      Locals:         0       0       0       0       0
  4417 ;;      Temps:          0       0       0       0       0
  4418 ;;      Totals:         0       0       0       0       0
  4419 ;;Total ram usage:        0 bytes
  4420 ;; Hardware stack levels used: 1
  4421 ;; Hardware stack levels required when called: 4
  4422 ;; This function calls:
  4423 ;;		_init_clcd
  4424 ;;		_init_matrix_keypad
  4425 ;;		_init_timer2
  4426 ;; This function is called by:
  4427 ;;		_main
  4428 ;; This function uses a non-reentrant model
  4429 ;;
  4430                           
  4431     0D3A                     _init_config:	
  4432                           ;psect for function _init_config
  4433                           
  4434                           
  4435                           ;main.c: 22: void main(void) {
  4436                           
  4437                           ;incstack = 0
  4438                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
  4439     0D3A  120A  158A  24F8  120A  158A  	fcall	_init_clcd
  4440                           
  4441                           ;main.c: 23:     unsigned char key;
  4442     0D3F  120A  118A  27F0  120A  158A  	fcall	_init_matrix_keypad
  4443                           
  4444                           ;main.c: 24:     init_config();
  4445     0D44  120A  158A  2501   	fcall	_init_timer2
  4446                           
  4447                           ;main.c: 26:     clear_dis();
  4448     0D47  1683               	bsf	3,5	;RP0=1, select bank1
  4449     0D48  1303               	bcf	3,6	;RP1=0, select bank1
  4450     0D49  1087               	bcf	7,1	;volatile
  4451                           
  4452                           ;main.c: 27:     operation_mode = 0x01;
  4453     0D4A  1283               	bcf	3,5	;RP0=0, select bank0
  4454     0D4B  1303               	bcf	3,6	;RP1=0, select bank0
  4455     0D4C  1087               	bcf	7,1	;volatile
  4456                           
  4457                           ;main.c: 29: 
  4458     0D4D  1683               	bsf	3,5	;RP0=1, select bank1
  4459     0D4E  1303               	bcf	3,6	;RP1=0, select bank1
  4460     0D4F  1107               	bcf	7,2	;volatile
  4461                           
  4462                           ;main.c: 30:     while(1)
  4463     0D50  1283               	bcf	3,5	;RP0=0, select bank0
  4464     0D51  1303               	bcf	3,6	;RP1=0, select bank0
  4465     0D52  1107               	bcf	7,2	;volatile
  4466                           
  4467                           ;main.c: 35:             ;
  4468     0D53  170B               	bsf	11,6	;volatile
  4469                           
  4470                           ;main.c: 36:         }
  4471     0D54  178B               	bsf	11,7	;volatile
  4472     0D55  0008               	return
  4473     0D56                     __end_of_init_config:
  4474                           
  4475                           	psect	text17
  4476     0D01                     __ptext17:	
  4477 ;; *************** function _init_timer2 *****************
  4478 ;; Defined at:
  4479 ;;		line 2 in file "timers.c"
  4480 ;; Parameters:    Size  Location     Type
  4481 ;;		None
  4482 ;; Auto vars:     Size  Location     Type
  4483 ;;		None
  4484 ;; Return value:  Size  Location     Type
  4485 ;;                  1    wreg      void 
  4486 ;; Registers used:
  4487 ;;		wreg
  4488 ;; Tracked objects:
  4489 ;;		On entry : 0/0
  4490 ;;		On exit  : 0/0
  4491 ;;		Unchanged: 0/0
  4492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4493 ;;      Params:         0       0       0       0       0
  4494 ;;      Locals:         0       0       0       0       0
  4495 ;;      Temps:          0       0       0       0       0
  4496 ;;      Totals:         0       0       0       0       0
  4497 ;;Total ram usage:        0 bytes
  4498 ;; Hardware stack levels used: 1
  4499 ;; Hardware stack levels required when called: 1
  4500 ;; This function calls:
  4501 ;;		Nothing
  4502 ;; This function is called by:
  4503 ;;		_init_config
  4504 ;; This function uses a non-reentrant model
  4505 ;;
  4506                           
  4507     0D01                     _init_timer2:	
  4508                           ;psect for function _init_timer2
  4509                           
  4510                           
  4511                           ;timers.c: 5:     T2CKPS0 = 1;
  4512                           
  4513                           ;incstack = 0
  4514                           ; Regs used in _init_timer2: [wreg]
  4515     0D01  1283               	bcf	3,5	;RP0=0, select bank0
  4516     0D02  1303               	bcf	3,6	;RP1=0, select bank0
  4517     0D03  1412               	bsf	18,0	;volatile
  4518                           
  4519                           ;timers.c: 6:     T2CKPS1 = 1;
  4520     0D04  1492               	bsf	18,1	;volatile
  4521                           
  4522                           ;timers.c: 9:     PR2 = 250;
  4523     0D05  30FA               	movlw	250
  4524     0D06  1683               	bsf	3,5	;RP0=1, select bank1
  4525     0D07  1303               	bcf	3,6	;RP1=0, select bank1
  4526     0D08  0092               	movwf	18	;volatile
  4527                           
  4528                           ;timers.c: 12:     TMR2IE = 1;
  4529     0D09  148C               	bsf	12,1	;volatile
  4530                           
  4531                           ;timers.c: 15:     TMR2ON = 0;
  4532     0D0A  1283               	bcf	3,5	;RP0=0, select bank0
  4533     0D0B  1303               	bcf	3,6	;RP1=0, select bank0
  4534     0D0C  1112               	bcf	18,2	;volatile
  4535     0D0D  0008               	return
  4536     0D0E                     __end_of_init_timer2:
  4537                           
  4538                           	psect	text18
  4539     07F0                     __ptext18:	
  4540 ;; *************** function _init_matrix_keypad *****************
  4541 ;; Defined at:
  4542 ;;		line 4 in file "matrix_keypad.c"
  4543 ;; Parameters:    Size  Location     Type
  4544 ;;		None
  4545 ;; Auto vars:     Size  Location     Type
  4546 ;;		None
  4547 ;; Return value:  Size  Location     Type
  4548 ;;                  1    wreg      void 
  4549 ;; Registers used:
  4550 ;;		wreg, status,2
  4551 ;; Tracked objects:
  4552 ;;		On entry : 0/0
  4553 ;;		On exit  : 0/0
  4554 ;;		Unchanged: 0/0
  4555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4556 ;;      Params:         0       0       0       0       0
  4557 ;;      Locals:         0       0       0       0       0
  4558 ;;      Temps:          0       0       0       0       0
  4559 ;;      Totals:         0       0       0       0       0
  4560 ;;Total ram usage:        0 bytes
  4561 ;; Hardware stack levels used: 1
  4562 ;; Hardware stack levels required when called: 1
  4563 ;; This function calls:
  4564 ;;		Nothing
  4565 ;; This function is called by:
  4566 ;;		_init_config
  4567 ;; This function uses a non-reentrant model
  4568 ;;
  4569                           
  4570     07F0                     _init_matrix_keypad:	
  4571                           ;psect for function _init_matrix_keypad
  4572                           
  4573                           
  4574                           ;matrix_keypad.c: 7:     TRISB = TRISB | 0x07;
  4575                           
  4576                           ;incstack = 0
  4577                           ; Regs used in _init_matrix_keypad: [wreg+status,2]
  4578     07F0  1683               	bsf	3,5	;RP0=1, select bank1
  4579     07F1  1303               	bcf	3,6	;RP1=0, select bank1
  4580     07F2  0806               	movf	6,w	;volatile
  4581     07F3  3807               	iorlw	7
  4582     07F4  0086               	movwf	6	;volatile
  4583                           
  4584                           ;matrix_keypad.c: 9:     TRISD = TRISD & 0xF0;
  4585     07F5  0808               	movf	8,w	;volatile
  4586     07F6  39F0               	andlw	240
  4587     07F7  0088               	movwf	8	;volatile
  4588                           
  4589                           ;matrix_keypad.c: 12:     nRBPU = 0;
  4590     07F8  1381               	bcf	1,7	;volatile
  4591                           
  4592                           ;matrix_keypad.c: 15:     RD3 = 1;
  4593     07F9  1283               	bcf	3,5	;RP0=0, select bank0
  4594     07FA  1303               	bcf	3,6	;RP1=0, select bank0
  4595     07FB  1588               	bsf	8,3	;volatile
  4596                           
  4597                           ;matrix_keypad.c: 16:     RD2 = 1;
  4598     07FC  1508               	bsf	8,2	;volatile
  4599                           
  4600                           ;matrix_keypad.c: 17:     RD1 = 1;
  4601     07FD  1488               	bsf	8,1	;volatile
  4602                           
  4603                           ;matrix_keypad.c: 18:     RD0 = 1;
  4604     07FE  1408               	bsf	8,0	;volatile
  4605     07FF  0008               	return
  4606     0800                     __end_of_init_matrix_keypad:
  4607                           
  4608                           	psect	text19
  4609     0CF8                     __ptext19:	
  4610 ;; *************** function _init_clcd *****************
  4611 ;; Defined at:
  4612 ;;		line 44 in file "clcd.c"
  4613 ;; Parameters:    Size  Location     Type
  4614 ;;		None
  4615 ;; Auto vars:     Size  Location     Type
  4616 ;;		None
  4617 ;; Return value:  Size  Location     Type
  4618 ;;                  1    wreg      void 
  4619 ;; Registers used:
  4620 ;;		wreg, status,2, status,0, pclath, cstack
  4621 ;; Tracked objects:
  4622 ;;		On entry : 0/0
  4623 ;;		On exit  : 0/0
  4624 ;;		Unchanged: 0/0
  4625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4626 ;;      Params:         0       0       0       0       0
  4627 ;;      Locals:         0       0       0       0       0
  4628 ;;      Temps:          0       0       0       0       0
  4629 ;;      Totals:         0       0       0       0       0
  4630 ;;Total ram usage:        0 bytes
  4631 ;; Hardware stack levels used: 1
  4632 ;; Hardware stack levels required when called: 3
  4633 ;; This function calls:
  4634 ;;		_init_display_controller
  4635 ;; This function is called by:
  4636 ;;		_init_config
  4637 ;; This function uses a non-reentrant model
  4638 ;;
  4639                           
  4640     0CF8                     _init_clcd:	
  4641                           ;psect for function _init_clcd
  4642                           
  4643                           
  4644                           ;clcd.c: 47:     TRISD = 0x00;
  4645                           
  4646                           ;incstack = 0
  4647                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
  4648     0CF8  1683               	bsf	3,5	;RP0=1, select bank1
  4649     0CF9  1303               	bcf	3,6	;RP1=0, select bank1
  4650     0CFA  0188               	clrf	8	;volatile
  4651                           
  4652                           ;clcd.c: 50:     TRISE2 = 0;
  4653     0CFB  1109               	bcf	9,2	;volatile
  4654                           
  4655                           ;clcd.c: 51:     TRISE1 = 0;
  4656     0CFC  1089               	bcf	9,1	;volatile
  4657                           
  4658                           ;clcd.c: 53:     init_display_controller();
  4659     0CFD  120A  158A  2703   	fcall	_init_display_controller
  4660     0D00  0008               	return
  4661     0D01                     __end_of_init_clcd:
  4662                           
  4663                           	psect	text20
  4664     0F03                     __ptext20:	
  4665 ;; *************** function _init_display_controller *****************
  4666 ;; Defined at:
  4667 ;;		line 21 in file "clcd.c"
  4668 ;; Parameters:    Size  Location     Type
  4669 ;;		None
  4670 ;; Auto vars:     Size  Location     Type
  4671 ;;		None
  4672 ;; Return value:  Size  Location     Type
  4673 ;;                  1    wreg      void 
  4674 ;; Registers used:
  4675 ;;		wreg, status,2, status,0, pclath, cstack
  4676 ;; Tracked objects:
  4677 ;;		On entry : 0/0
  4678 ;;		On exit  : 0/0
  4679 ;;		Unchanged: 0/0
  4680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4681 ;;      Params:         0       0       0       0       0
  4682 ;;      Locals:         0       0       0       0       0
  4683 ;;      Temps:          0       2       0       0       0
  4684 ;;      Totals:         0       2       0       0       0
  4685 ;;Total ram usage:        2 bytes
  4686 ;; Hardware stack levels used: 1
  4687 ;; Hardware stack levels required when called: 2
  4688 ;; This function calls:
  4689 ;;		_clcd_write
  4690 ;; This function is called by:
  4691 ;;		_init_clcd
  4692 ;; This function uses a non-reentrant model
  4693 ;;
  4694                           
  4695     0F03                     _init_display_controller:	
  4696                           ;psect for function _init_display_controller
  4697                           
  4698                           
  4699                           ;clcd.c: 24:     _delay((unsigned long)((30)*(20000000/4000.0)));
  4700                           
  4701                           ;incstack = 0
  4702                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
  4703     0F03  30C3               	movlw	195
  4704     0F04  1283               	bcf	3,5	;RP0=0, select bank0
  4705     0F05  1303               	bcf	3,6	;RP1=0, select bank0
  4706     0F06  00C5               	movwf	??_init_display_controller+1
  4707     0F07  30CC               	movlw	204
  4708     0F08  00C4               	movwf	??_init_display_controller
  4709     0F09                     u3017:
  4710     0F09  0BC4               	decfsz	??_init_display_controller,f
  4711     0F0A  2F09               	goto	u3017
  4712     0F0B  0BC5               	decfsz	??_init_display_controller+1,f
  4713     0F0C  2F09               	goto	u3017
  4714     0F0D  0000               	nop
  4715                           
  4716                           ;clcd.c: 27:     clcd_write(0x30, 0);
  4717     0F0E  01F3               	clrf	clcd_write@mode
  4718     0F0F  3030               	movlw	48
  4719     0F10  120A  158A  2613  120A  158A  	fcall	_clcd_write
  4720                           
  4721                           ;clcd.c: 28:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  4722     0F15  301B               	movlw	27
  4723     0F16  1283               	bcf	3,5	;RP0=0, select bank0
  4724     0F17  1303               	bcf	3,6	;RP1=0, select bank0
  4725     0F18  00C5               	movwf	??_init_display_controller+1
  4726     0F19  309D               	movlw	157
  4727     0F1A  00C4               	movwf	??_init_display_controller
  4728     0F1B                     u3027:
  4729     0F1B  0BC4               	decfsz	??_init_display_controller,f
  4730     0F1C  2F1B               	goto	u3027
  4731     0F1D  0BC5               	decfsz	??_init_display_controller+1,f
  4732     0F1E  2F1B               	goto	u3027
  4733     0F1F  2F20               	nop2
  4734                           
  4735                           ;clcd.c: 29:     clcd_write(0x30, 0);
  4736     0F20  01F3               	clrf	clcd_write@mode
  4737     0F21  3030               	movlw	48
  4738     0F22  120A  158A  2613  120A  158A  	fcall	_clcd_write
  4739                           
  4740                           ;clcd.c: 30:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4741     0F27  30A5               	movlw	165
  4742     0F28  1283               	bcf	3,5	;RP0=0, select bank0
  4743     0F29  1303               	bcf	3,6	;RP1=0, select bank0
  4744     0F2A  00C4               	movwf	??_init_display_controller
  4745     0F2B                     u3037:
  4746     0F2B  0BC4               	decfsz	??_init_display_controller,f
  4747     0F2C  2F2B               	goto	u3037
  4748     0F2D  2F2E               	nop2
  4749                           
  4750                           ;clcd.c: 31:     clcd_write(0x30, 0);
  4751     0F2E  01F3               	clrf	clcd_write@mode
  4752     0F2F  3030               	movlw	48
  4753     0F30  120A  158A  2613  120A  158A  	fcall	_clcd_write
  4754                           
  4755                           ;clcd.c: 32:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  4756     0F35  2F36               	nop2	;2 cycle nop
  4757     0F36  2F37               	nop2	;2 cycle nop
  4758     0F37  0000               	nop
  4759                           
  4760                           ;clcd.c: 34:     clcd_write(0x02, 0);
  4761     0F38  01F3               	clrf	clcd_write@mode
  4762     0F39  3002               	movlw	2
  4763     0F3A  120A  158A  2613  120A  158A  	fcall	_clcd_write
  4764                           
  4765                           ;clcd.c: 35:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4766     0F3F  30A5               	movlw	165
  4767     0F40  1283               	bcf	3,5	;RP0=0, select bank0
  4768     0F41  1303               	bcf	3,6	;RP1=0, select bank0
  4769     0F42  00C4               	movwf	??_init_display_controller
  4770     0F43                     u3047:
  4771     0F43  0BC4               	decfsz	??_init_display_controller,f
  4772     0F44  2F43               	goto	u3047
  4773     0F45  2F46               	nop2
  4774                           
  4775                           ;clcd.c: 36:     clcd_write(0x28, 0);
  4776     0F46  01F3               	clrf	clcd_write@mode
  4777     0F47  3028               	movlw	40
  4778     0F48  120A  158A  2613  120A  158A  	fcall	_clcd_write
  4779                           
  4780                           ;clcd.c: 37:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4781     0F4D  30A5               	movlw	165
  4782     0F4E  1283               	bcf	3,5	;RP0=0, select bank0
  4783     0F4F  1303               	bcf	3,6	;RP1=0, select bank0
  4784     0F50  00C4               	movwf	??_init_display_controller
  4785     0F51                     u3057:
  4786     0F51  0BC4               	decfsz	??_init_display_controller,f
  4787     0F52  2F51               	goto	u3057
  4788     0F53  2F54               	nop2
  4789                           
  4790                           ;clcd.c: 38:     clcd_write(0x01, 0);
  4791     0F54  01F3               	clrf	clcd_write@mode
  4792     0F55  3001               	movlw	1
  4793     0F56  120A  158A  2613  120A  158A  	fcall	_clcd_write
  4794                           
  4795                           ;clcd.c: 39:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  4796     0F5B  3004               	movlw	4
  4797     0F5C  1283               	bcf	3,5	;RP0=0, select bank0
  4798     0F5D  1303               	bcf	3,6	;RP1=0, select bank0
  4799     0F5E  00C5               	movwf	??_init_display_controller+1
  4800     0F5F  303D               	movlw	61
  4801     0F60  00C4               	movwf	??_init_display_controller
  4802     0F61                     u3067:
  4803     0F61  0BC4               	decfsz	??_init_display_controller,f
  4804     0F62  2F61               	goto	u3067
  4805     0F63  0BC5               	decfsz	??_init_display_controller+1,f
  4806     0F64  2F61               	goto	u3067
  4807                           
  4808                           ;clcd.c: 40:     clcd_write(0x0C, 0);
  4809     0F65  01F3               	clrf	clcd_write@mode
  4810     0F66  300C               	movlw	12
  4811     0F67  120A  158A  2613  120A  158A  	fcall	_clcd_write
  4812                           
  4813                           ;clcd.c: 41:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4814     0F6C  30A5               	movlw	165
  4815     0F6D  1283               	bcf	3,5	;RP0=0, select bank0
  4816     0F6E  1303               	bcf	3,6	;RP1=0, select bank0
  4817     0F6F  00C4               	movwf	??_init_display_controller
  4818     0F70                     u3077:
  4819     0F70  0BC4               	decfsz	??_init_display_controller,f
  4820     0F71  2F70               	goto	u3077
  4821     0F72  2F73               	nop2
  4822     0F73  0008               	return
  4823     0F74                     __end_of_init_display_controller:
  4824                           
  4825                           	psect	text21
  4826     0E13                     __ptext21:	
  4827 ;; *************** function _clcd_write *****************
  4828 ;; Defined at:
  4829 ;;		line 4 in file "clcd.c"
  4830 ;; Parameters:    Size  Location     Type
  4831 ;;  byte            1    wreg     unsigned char 
  4832 ;;  mode            1    3[COMMON] unsigned char 
  4833 ;; Auto vars:     Size  Location     Type
  4834 ;;  byte            1    6[COMMON] unsigned char 
  4835 ;; Return value:  Size  Location     Type
  4836 ;;                  1    wreg      void 
  4837 ;; Registers used:
  4838 ;;		wreg, status,2, status,0
  4839 ;; Tracked objects:
  4840 ;;		On entry : 0/0
  4841 ;;		On exit  : 0/0
  4842 ;;		Unchanged: 0/0
  4843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4844 ;;      Params:         1       0       0       0       0
  4845 ;;      Locals:         1       0       0       0       0
  4846 ;;      Temps:          2       0       0       0       0
  4847 ;;      Totals:         4       0       0       0       0
  4848 ;;Total ram usage:        4 bytes
  4849 ;; Hardware stack levels used: 1
  4850 ;; Hardware stack levels required when called: 1
  4851 ;; This function calls:
  4852 ;;		Nothing
  4853 ;; This function is called by:
  4854 ;;		_init_display_controller
  4855 ;;		_clcd_putch
  4856 ;;		_clcd_print
  4857 ;;		_main
  4858 ;;		_clear_dis
  4859 ;; This function uses a non-reentrant model
  4860 ;;
  4861                           
  4862     0E13                     _clcd_write:	
  4863                           ;psect for function _clcd_write
  4864                           
  4865                           
  4866                           ;incstack = 0
  4867                           ; Regs used in _clcd_write: [wreg+status,2+status,0]
  4868                           ;clcd_write@byte stored from wreg
  4869     0E13  00F6               	movwf	clcd_write@byte
  4870                           
  4871                           ;clcd.c: 4: void clcd_write(unsigned char byte, unsigned char mode);clcd.c: 5: {;clcd.c:
      +                           6:     RE2 = mode;
  4872     0E14  1C73               	btfss	clcd_write@mode,0
  4873     0E15  2E1A               	goto	u2150
  4874     0E16  1283               	bcf	3,5	;RP0=0, select bank0
  4875     0E17  1303               	bcf	3,6	;RP1=0, select bank0
  4876     0E18  1509               	bsf	9,2	;volatile
  4877     0E19  2E1D               	goto	l2513
  4878     0E1A                     u2150:
  4879     0E1A  1283               	bcf	3,5	;RP0=0, select bank0
  4880     0E1B  1303               	bcf	3,6	;RP1=0, select bank0
  4881     0E1C  1109               	bcf	9,2	;volatile
  4882     0E1D                     l2513:
  4883                           
  4884                           ;clcd.c: 8:     PORTD = byte & 0xF0;
  4885     0E1D  0876               	movf	clcd_write@byte,w
  4886     0E1E  39F0               	andlw	240
  4887     0E1F  0088               	movwf	8	;volatile
  4888                           
  4889                           ;clcd.c: 9:     RE1 = 1;
  4890     0E20  1489               	bsf	9,1	;volatile
  4891                           
  4892                           ;clcd.c: 10:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4893     0E21  30A6               	movlw	166
  4894     0E22  00F4               	movwf	??_clcd_write
  4895     0E23                     u3087:
  4896     0E23  0BF4               	decfsz	??_clcd_write,f
  4897     0E24  2E23               	goto	u3087
  4898     0E25  0000               	nop
  4899                           
  4900                           ;clcd.c: 11:     RE1 = 0;
  4901     0E26  1283               	bcf	3,5	;RP0=0, select bank0
  4902     0E27  1303               	bcf	3,6	;RP1=0, select bank0
  4903     0E28  1089               	bcf	9,1	;volatile
  4904                           
  4905                           ;clcd.c: 13:     PORTD = (byte & 0x0F) << 4;
  4906     0E29  0876               	movf	clcd_write@byte,w
  4907     0E2A  390F               	andlw	15
  4908     0E2B  00F4               	movwf	??_clcd_write
  4909     0E2C  3003               	movlw	3
  4910     0E2D                     u2175:
  4911     0E2D  1003               	clrc
  4912     0E2E  0DF4               	rlf	??_clcd_write,f
  4913     0E2F  3EFF               	addlw	-1
  4914     0E30  1D03               	skipz
  4915     0E31  2E2D               	goto	u2175
  4916     0E32  1003               	clrc
  4917     0E33  0D74               	rlf	??_clcd_write,w
  4918     0E34  0088               	movwf	8	;volatile
  4919                           
  4920                           ;clcd.c: 14:     RE1 = 1;
  4921     0E35  1489               	bsf	9,1	;volatile
  4922                           
  4923                           ;clcd.c: 15:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4924     0E36  30A6               	movlw	166
  4925     0E37  00F4               	movwf	??_clcd_write
  4926     0E38                     u3097:
  4927     0E38  0BF4               	decfsz	??_clcd_write,f
  4928     0E39  2E38               	goto	u3097
  4929     0E3A  0000               	nop
  4930                           
  4931                           ;clcd.c: 16:     RE1 = 0;
  4932     0E3B  1283               	bcf	3,5	;RP0=0, select bank0
  4933     0E3C  1303               	bcf	3,6	;RP1=0, select bank0
  4934     0E3D  1089               	bcf	9,1	;volatile
  4935                           
  4936                           ;clcd.c: 18:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  4937     0E3E  301B               	movlw	27
  4938     0E3F  00F5               	movwf	??_clcd_write+1
  4939     0E40  309E               	movlw	158
  4940     0E41  00F4               	movwf	??_clcd_write
  4941     0E42                     u3107:
  4942     0E42  0BF4               	decfsz	??_clcd_write,f
  4943     0E43  2E42               	goto	u3107
  4944     0E44  0BF5               	decfsz	??_clcd_write+1,f
  4945     0E45  2E42               	goto	u3107
  4946     0E46  0000               	nop
  4947     0E47  0008               	return
  4948     0E48                     __end_of_clcd_write:
  4949                           
  4950                           	psect	text22
  4951     03B0                     __ptext22:	
  4952 ;; *************** function _isr *****************
  4953 ;; Defined at:
  4954 ;;		line 6 in file "isr.c"
  4955 ;; Parameters:    Size  Location     Type
  4956 ;;		None
  4957 ;; Auto vars:     Size  Location     Type
  4958 ;;		None
  4959 ;; Return value:  Size  Location     Type
  4960 ;;                  1    wreg      void 
  4961 ;; Registers used:
  4962 ;;		wreg, status,2, status,0, btemp+1
  4963 ;; Tracked objects:
  4964 ;;		On entry : 0/0
  4965 ;;		On exit  : 0/0
  4966 ;;		Unchanged: 0/0
  4967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4968 ;;      Params:         0       0       0       0       0
  4969 ;;      Locals:         0       0       0       0       0
  4970 ;;      Temps:          3       0       0       0       0
  4971 ;;      Totals:         3       0       0       0       0
  4972 ;;Total ram usage:        3 bytes
  4973 ;; Hardware stack levels used: 1
  4974 ;; This function calls:
  4975 ;;		Nothing
  4976 ;; This function is called by:
  4977 ;;		Interrupt level 1
  4978 ;; This function uses a non-reentrant model
  4979 ;;
  4980                           
  4981     03B0                     _isr:	
  4982                           ;psect for function _isr
  4983                           
  4984                           
  4985                           ;isr.c: 8:     static unsigned int count = 0;;isr.c: 10:     if (TMR2IF == 1)
  4986     03B0  1283               	bcf	3,5	;RP0=0, select bank0
  4987     03B1  1303               	bcf	3,6	;RP1=0, select bank0
  4988     03B2  1C8C               	btfss	12,1	;volatile
  4989     03B3  2BF7               	goto	i1l315
  4990                           
  4991                           ;isr.c: 11:     {;isr.c: 12:         if (++count == 1250)
  4992     03B4  3001               	movlw	1
  4993     03B5  07A0               	addwf	isr@count,f
  4994     03B6  1803               	skipnc
  4995     03B7  0AA1               	incf	isr@count+1,f
  4996     03B8  3000               	movlw	0
  4997     03B9  07A1               	addwf	isr@count+1,f
  4998     03BA  30E2               	movlw	226
  4999     03BB  0620               	xorwf	isr@count,w
  5000     03BC  3004               	movlw	4
  5001     03BD  1903               	skipnz
  5002     03BE  0621               	xorwf	isr@count+1,w
  5003     03BF  1D03               	btfss	3,2
  5004     03C0  2BF4               	goto	i1l2459
  5005                           
  5006                           ;isr.c: 13:         {;isr.c: 14:                 count = 0;
  5007     03C1  01A0               	clrf	isr@count
  5008     03C2  01A1               	clrf	isr@count+1
  5009                           
  5010                           ;isr.c: 15:             if(sec > 0)
  5011     03C3  0837               	movf	_sec+1,w
  5012     03C4  3A80               	xorlw	128
  5013     03C5  00FF               	movwf	127
  5014     03C6  3080               	movlw	128
  5015     03C7  027F               	subwf	127,w
  5016     03C8  1D03               	skipz
  5017     03C9  2BCC               	goto	u212_25
  5018     03CA  3001               	movlw	1
  5019     03CB  0236               	subwf	_sec,w
  5020     03CC                     u212_25:
  5021     03CC  1C03               	skipc
  5022     03CD  2BD7               	goto	i1l2453
  5023                           
  5024                           ;isr.c: 16:             {;isr.c: 17:                 sec--;
  5025     03CE  30FF               	movlw	255
  5026     03CF  1283               	bcf	3,5	;RP0=0, select bank0
  5027     03D0  1303               	bcf	3,6	;RP1=0, select bank0
  5028     03D1  07B6               	addwf	_sec,f
  5029     03D2  1803               	skipnc
  5030     03D3  0AB7               	incf	_sec+1,f
  5031     03D4  30FF               	movlw	255
  5032     03D5  07B7               	addwf	_sec+1,f
  5033                           
  5034                           ;isr.c: 18:             }
  5035     03D6  2BF4               	goto	i1l2459
  5036     03D7                     i1l2453:
  5037     03D7  1283               	bcf	3,5	;RP0=0, select bank0
  5038     03D8  1303               	bcf	3,6	;RP1=0, select bank0
  5039     03D9  0836               	movf	_sec,w
  5040     03DA  0437               	iorwf	_sec+1,w
  5041     03DB  1D03               	btfss	3,2
  5042     03DC  2BF4               	goto	i1l2459
  5043     03DD  0839               	movf	_min+1,w
  5044     03DE  3A80               	xorlw	128
  5045     03DF  00FF               	movwf	127
  5046     03E0  3080               	movlw	128
  5047     03E1  027F               	subwf	127,w
  5048     03E2  1D03               	skipz
  5049     03E3  2BE6               	goto	u214_25
  5050     03E4  3001               	movlw	1
  5051     03E5  0238               	subwf	_min,w
  5052     03E6                     u214_25:
  5053     03E6  1C03               	skipc
  5054     03E7  2BF4               	goto	i1l2459
  5055                           
  5056                           ;isr.c: 20:             {;isr.c: 21:                 min--;
  5057     03E8  30FF               	movlw	255
  5058     03E9  1283               	bcf	3,5	;RP0=0, select bank0
  5059     03EA  1303               	bcf	3,6	;RP1=0, select bank0
  5060     03EB  07B8               	addwf	_min,f
  5061     03EC  1803               	skipnc
  5062     03ED  0AB9               	incf	_min+1,f
  5063     03EE  30FF               	movlw	255
  5064     03EF  07B9               	addwf	_min+1,f
  5065                           
  5066                           ;isr.c: 22:                 sec = 59;
  5067     03F0  303B               	movlw	59
  5068     03F1  00B6               	movwf	_sec
  5069     03F2  3000               	movlw	0
  5070     03F3  00B7               	movwf	_sec+1
  5071     03F4                     i1l2459:
  5072                           
  5073                           ;isr.c: 27:         TMR2IF = 0;
  5074     03F4  1283               	bcf	3,5	;RP0=0, select bank0
  5075     03F5  1303               	bcf	3,6	;RP1=0, select bank0
  5076     03F6  108C               	bcf	12,1	;volatile
  5077     03F7                     i1l315:
  5078     03F7  0872               	movf	??_isr+2,w
  5079     03F8  00FF               	movwf	127
  5080     03F9  0871               	movf	??_isr+1,w
  5081     03FA  008A               	movwf	10
  5082     03FB  0E70               	swapf	??_isr,w
  5083     03FC  0083               	movwf	3
  5084     03FD  0EFE               	swapf	126,f
  5085     03FE  0E7E               	swapf	126,w
  5086     03FF  0009               	retfie
  5087     0400                     __end_of_isr:
  5088     007E                     btemp	set	126	;btemp
  5089     007E                     wtemp0	set	126
  5090                           
  5091                           	psect	intentry
  5092     0004                     __pintentry:	
  5093                           ;incstack = 0
  5094                           ; Regs used in _isr: [wreg+status,2+status,0+btemp+1]
  5095                           
  5096     0004                     interrupt_function:
  5097     007E                     saved_w	set	btemp
  5098     0004  00FE               	movwf	btemp
  5099     0005  0E03               	swapf	3,w
  5100     0006  00F0               	movwf	??_isr
  5101     0007  080A               	movf	10,w
  5102     0008  00F1               	movwf	??_isr+1
  5103     0009  087F               	movf	btemp+1,w
  5104     000A  00F2               	movwf	??_isr+2
  5105     000B  120A  118A  2BB0   	ljmp	_isr
  5106                           
  5107                           	psect	config
  5108                           
  5109                           ;Config register CONFIG @ 0x2007
  5110                           ;	Oscillator Selection bits
  5111                           ;	FOSC = 0x3, unprogrammed default
  5112                           ;	Watchdog Timer Enable bit
  5113                           ;	WDTE = OFF, WDT disabled
  5114                           ;	Power-up Timer Enable bit
  5115                           ;	PWRTE = 0x1, unprogrammed default
  5116                           ;	Brown-out Reset Enable bit
  5117                           ;	BOREN = 0x1, unprogrammed default
  5118                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  5119                           ;	LVP = 0x1, unprogrammed default
  5120                           ;	Data EEPROM Memory Code Protection bit
  5121                           ;	CPD = 0x1, unprogrammed default
  5122                           ;	Flash Program Memory Write Enable bits
  5123                           ;	WRT = 0x3, unprogrammed default
  5124                           ;	In-Circuit Debugger Mode bit
  5125                           ;	DEBUG = 0x1, unprogrammed default
  5126                           ;	Flash Program Memory Code Protection bit
  5127                           ;	CP = 0x1, unprogrammed default
  5128     2007                     	org	8199
  5129     2007  3FFB               	dw	16379

Data Sizes:
    Strings     311
    Constant    0
    Data        1
    BSS         38
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     22      58
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    clcd_print@str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_26(CODE[4]), STR_25(CODE[12]), STR_24(CODE[14]), STR_23(CODE[15]), 
		 -> STR_22(CODE[17]), STR_21(CODE[12]), STR_20(CODE[17]), STR_19(CODE[16]), 
		 -> STR_18(CODE[17]), STR_17(CODE[17]), STR_16(CODE[17]), STR_15(CODE[10]), 
		 -> STR_14(CODE[13]), STR_13(CODE[17]), STR_12(CODE[3]), STR_11(CODE[3]), 
		 -> min_arr(BANK0[3]), sec_arr(BANK0[3]), STR_10(CODE[17]), STR_9(CODE[12]), 
		 -> STR_8(CODE[17]), STR_7(CODE[8]), STR_6(CODE[13]), STR_5(CODE[8]), 
		 -> STR_4(CODE[8]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _read_matrix_keypad->_scan_keypad
    _power_on->_clcd_putch
    _mode_select->_set_time
    _time_dis->_clcd_putch
    _set_time->___awdiv
    _set_time->___wmul
    _set_temp->_clcd_putch
    _clear_dis->_clcd_write
    _clcd_putch->___awdiv
    _clcd_putch->_clcd_write
    ___awmod->___awdiv
    _clcd_print->_clcd_write
    _init_display_controller->_clcd_write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_mode_select
    _main->_power_on
    _power_on->_clcd_putch
    _mode_select->_set_temp
    _time_dis->_clcd_putch
    _door_status_check->_clcd_print
    _set_time->___awmod
    _set_temp->_clcd_putch
    _clcd_putch->___awmod
    ___awmod->___awdiv
    _modes_display->_clcd_print
    _init_clcd->_init_display_controller

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   58072
                                             18 BANK0      4     4      0
                         _clcd_print
                         _clcd_write
                          _clear_dis
                        _init_config
                        _mode_select
                           _power_on
                 _read_matrix_keypad
 ---------------------------------------------------------------------------------
 (1) _read_matrix_keypad                                   2     2      0     203
                                              5 COMMON     2     2      0
                        _scan_keypad
 ---------------------------------------------------------------------------------
 (2) _scan_keypad                                          2     2      0      92
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _power_on                                             7     7      0    6782
                                             11 BANK0      7     7      0
                         _clcd_print
                         _clcd_putch
 ---------------------------------------------------------------------------------
 (1) _mode_select                                          3     3      0   43119
                                             15 BANK0      3     3      0
                          _clear_dis
                      _modes_display
                           _set_temp
                           _set_time
                           _time_dis
 ---------------------------------------------------------------------------------
 (2) _time_dis                                             3     3      0   16352
                                             11 BANK0      3     3      0
                            ___awdiv
                            ___awmod
                         _clcd_print
                         _clcd_putch
                          _clear_dis
                  _door_status_check
 ---------------------------------------------------------------------------------
 (3) _door_status_check                                    0     0      0    5872
                         _clcd_print
                          _clear_dis
 ---------------------------------------------------------------------------------
 (2) _set_time                                             3     3      0    9576
                                              7 COMMON     1     1      0
                                             10 BANK0      2     2      0
                            ___awdiv
                            ___awmod
                             ___wmul
                         _clcd_print
                          _clear_dis
 ---------------------------------------------------------------------------------
 (2) _set_temp                                             4     4      0   11195
                                             11 BANK0      4     4      0
                            ___awdiv
                            ___awmod
                             ___wmul
                         _clcd_print
                         _clcd_putch
                          _clear_dis
 ---------------------------------------------------------------------------------
 (4) _clear_dis                                            0     0      0     938
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_putch                                           2     1      1    1650
                                              7 COMMON     1     1      0
                                             10 BANK0      1     0      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                         _clcd_write
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     526
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1473
                                              4 BANK0      6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1485
                                              3 COMMON     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _modes_display                                        0     0      0    4934
                         _clcd_print
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           3     0      3    4934
                                              0 BANK0      3     0      3
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0     938
                          _init_clcd
                 _init_matrix_keypad
                        _init_timer2
 ---------------------------------------------------------------------------------
 (2) _init_timer2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_matrix_keypad                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0     938
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0     938
                                              0 BANK0      2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (3) _clcd_write                                           4     3      1     938
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clcd_print
     _clcd_write
   _clcd_write
   _clear_dis
     _clcd_write
   _init_config
     _init_clcd
       _init_display_controller
         _clcd_write
     _init_matrix_keypad
     _init_timer2
   _mode_select
     _clear_dis
     _modes_display
       _clcd_print
     _set_temp
       ___awdiv
       ___awmod
         ___awdiv (ARG)
       ___wmul
       _clcd_print
       _clcd_putch
         ___awdiv (ARG)
         ___awmod (ARG)
         _clcd_write (ARG)
       _clear_dis
     _set_time
       ___awdiv
       ___awmod
       ___wmul
       _clcd_print
       _clear_dis
     _time_dis
       ___awdiv
       ___awmod
       _clcd_print
       _clcd_putch
       _clear_dis
       _door_status_check
         _clcd_print
         _clear_dis
   _power_on
     _clcd_print
     _clcd_putch
   _read_matrix_keypad
     _scan_keypad

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     16      3A       5       72.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      45      12        0.0%
ABS                  0      0      45       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Oct 06 21:31:57 2023

                              pc 0002                   clcd_print@addr 0046                               l31 0F98  
                             l40 0FB6                               l32 0F94                               l29 0F90  
                             l54 0FF6                               l46 0FD4                               l38 0FB2  
                             l47 0FDC                               l39 0FBA                               l56 0FFA  
                             l48 0FD8                     ___awdiv@sign 0045                               fsr 0004  
            ___wmul@multiplicand 0075               _init_matrix_keypad 07F0                              l213 0761  
                            l214 0764                              l261 01E9                              l414 0D64  
                            l265 0E06                              _GIE 005F                              _RB0 0030  
                            _RB1 0031                              _RB2 0032                              _RC1 0039  
                            _RB3 0033                              _RD0 0040                              _RC2 003A  
                            _RD1 0041                              _RD2 0042                              _RD3 0043  
                            _RE1 0049                              _RE2 004A                              _PR2 0092  
                            _min 0038                              _sec 0036                              _isr 03B0  
                            _ret 0034                   clcd_putch@addr 004E                              fsr0 0004  
                 clcd_putch@data 0077                              indf 0000                     ___awmod@sign 004D  
            ?_init_matrix_keypad 0070                             l3007 073C                             l3017 0755  
                           l3019 0758                             l3027 076B                             l2243 0D30  
                           l3115 0600                             l3029 078A                             l2245 0D2A  
                           l2237 0D2E                             l3109 05F7                             l3125 0616  
                           l2255 0D33                             l3119 0609                             l3047 054C  
                           l2513 0E1D                             l2259 0D38                             l3067 0611  
                           l2613 07AC                             l3085 05BC                             l3077 05A8  
                           l3069 0597                             l2631 07D8                             l2623 07B4  
                           l2607 07A1                             l2537 0D86                             l2625 07C2  
                           l3177 0770                             l2635 07E3                             l2651 0E54  
                           l3179 01E1                             l2803 0132                             l3099 05CE  
                           l2813 0143                             l1917 0FC2                             l2639 07EB  
                           l2663 0E61                             l2655 0E5B                             l2665 0E6F  
                           l2673 0E88                             l2921 02C8                             l2841 01D2  
                           l1937 0FE4                             l2587 0D5A                             l2923 0328  
                           l2835 01C1                             l2771 009D                             l2579 0E0D  
                           l1955 0FFE                             l2677 0E90                             l2669 0E7D  
                           l2909 02A8                             l2845 01DC                             l2757 0065  
                           l1877 0F7E                             l2943 03AE                             l2927 032A  
                           l2871 022B                             l2839 01C8                             l2783 00E0  
                           l1897 0FA0                             l2939 039F                             l2883 0263  
                           l2795 0113                             l2779 00D0                             l2789 00FD  
                           l2981 0ED5                             l2887 026C                             l2991 0706  
                           l2967 0E99                             l2993 070C                             l2995 0712  
                           l2997 0719                             l2999 0720                             ?_isr 0070  
                           STR_1 0433                             STR_2 0422                             STR_3 0455  
                           STR_4 0527                             STR_5 051F                             STR_6 04E4  
                           STR_7 052F                             STR_8 0477                             STR_9 0509  
                           u2150 0E1A                             u3007 029A                             u3017 0F09  
                           u2305 07C3                             u2225 0D65                             u3107 0E42  
                           u3027 0F1B                             u2315 07CF                             u2235 0D6C  
                           u3037 0F2B                             u2325 07D9                             u2405 0E75  
                           u2175 0E2D                             u3047 0F43                             u2415 0E7E  
                           u3057 0F51                             u2505 007F                             u3067 0F61  
                           u2515 00A6                             u2620 01A2                             u3077 0F70  
                           u2285 07B7                             u2525 00B1                             u2630 01A3  
                           u3087 0E23                             u2535 00D9                             u3097 0E38  
                           u2385 0E64                             u2545 00E9                             u2465 0030  
                           u2555 00F4                             u2725 0280                             u2750 033F  
                           u2575 010A                             u2760 0340                             u2585 011C  
                           u2595 0127                             _PEIE 005E                             u2695 0247  
                           u2935 05E4                             u2785 0EB5                             u2795 0EF1  
                           u2977 0590                             u2987 0EFB                             u2997 06EF  
                           _flag 0032                             _main 0537                             btemp 007E  
                           start 000E             ??_init_matrix_keypad 0073                   clcd_write@byte 0076  
                 clcd_write@mode 0073                            ??_isr 0070                            ?_main 0070  
                __end_of___awdiv 07F0                            STR_10 0499                            STR_11 040E  
                          STR_12 040E                            STR_20 0466                            STR_21 04FD  
                          STR_13 0488                            STR_22 0499                            STR_14 04D7  
                          STR_15 0515                            STR_23 04BA                            STR_24 04C9  
                          STR_16 0444                            STR_25 04F1                            STR_17 0411  
                          STR_26 040D                            STR_18 0400                            STR_19 04AA  
                __end_of___awmod 0E95                  ___awdiv@divisor 0073                            i1l315 03F7  
                   ?_init_config 0070                  ___awdiv@counter 0044                            _PORTD 0008  
                          _TRISB 0086                            _TRISD 0088                     ?_init_timer2 0070  
                          _nRBPU 040F               _read_matrix_keypad 0D1F                            pclath 000A  
            ?_read_matrix_keypad 0070                     ?_mode_select 0070                            status 0003  
                          wtemp0 007E                     ?_scan_keypad 0070                  __initialization 0011  
                   __end_of_main 061F             ??_read_matrix_keypad 0075                           ??_main 0056  
               ___awdiv@dividend 0075                           i1l2453 03D7                           i1l2459 03F4  
                         u212_25 03CC                           u214_25 03E6                           _TMR2IE 0461  
                         _TMR2IF 0061                           _TMR2ON 0092                           _TRISC1 0439  
                         _TRISC2 043A                           _TRISE1 0449                           _TRISE2 044A  
                 mode_select@key 0055          _init_display_controller 0F03                           ___wmul 0D56  
                      ??___awdiv 0077                        ??___awmod 0077                 ___awdiv@quotient 0046  
                ___awmod@divisor 0048                  ___awmod@counter 004C                    power_on@i_145 0054  
                   __pdataCOMMON 007A                 __end_of_set_temp 03B0                 __end_of_set_time 01EA  
               __end_of_time_dis 0702                           saved_w 007E                 __end_of_power_on 0F03  
        __end_of__initialization 0020                   __pcstackCOMMON 0070                       __pbssBANK0 0020  
      ??_init_display_controller 0044                       _clcd_print 0D7D                       _clcd_putch 0D0E  
                     _clcd_write 0E13                       __pmaintext 0537                          ?___wmul 0073  
                     __pintentry 0004                          _T2CKPS0 0090                          _T2CKPS1 0091  
                     __stringtab 0800                __end_of_clear_dis 0CF0                        ?_set_temp 0070  
                      ?_set_time 0070                        ?_time_dis 0070                          ___awdiv 0795  
                        ___awmod 0E48                        ?_power_on 0070                          __ptext1 0D1F  
                        __ptext2 0F74                          __ptext3 0E95                          __ptext4 0702  
                        __ptext5 061F                          __ptext6 0DE0                          __ptext7 0024  
                        __ptext8 01EA                          __ptext9 0CEA  __end_of_init_display_controller 0F74  
              __end_of_init_clcd 0D01                          _min_arr 003E                          _sec_arr 0041  
               ___awmod@dividend 004A                          main@key 0059                          clrloop0 0CF1  
           end_of_initialization 0020                      set_temp@key 0052                      set_time@key 0077  
                 _operation_mode 003C                    _modes_display 0DAD                      ?_clcd_print 0044  
                    ?_clcd_putch 004E                      ?_clcd_write 0073                       _reset_flag 003A  
                     ??_set_temp 004F                       ??_set_time 004E                       ??_time_dis 004F  
                     ??_power_on 004F                     __pstringtext 0400                    clcd_print@str 0044  
                 ?_modes_display 0070                   __end_of___wmul 0D7D                    __pidataCOMMON 0003  
            start_initialization 0011                     scan_keypad@i 0073           read_matrix_keypad@mode 0075  
         read_matrix_keypad@once 007A                      __end_of_isr 0400                         ??___wmul 0077  
                  ??_init_config 0077                    ??_init_timer2 0073                      __pbssCOMMON 0078  
                      ___latbits 0002                    __pcstackBANK0 0044                  ??_modes_display 0077  
                  ??_mode_select 0053                    ??_scan_keypad 0073                        _clear_dis 0CEA  
                       ?___awdiv 0073                         ?___awmod 0048                        _heat_flag 0030  
                      __pstrings 0800                        _init_clcd 0CF8              __end_of_init_config 0D56  
            __end_of_init_timer2 0D0E         ?_init_display_controller 0070                interrupt_function 0004  
                 ___wmul@product 0044                        clear_ram0 0CF0                     ??_clcd_print 0077  
                   ??_clcd_putch 0077       __end_of_init_matrix_keypad 0800                     ??_clcd_write 0074  
                     ?_clear_dis 0070                set_temp@key_count 0024              __end_of_mode_select 0795  
            __end_of_scan_keypad 1000                      __stringbase 0812                ___wmul@multiplier 0073  
             __end_of_clcd_print 0DAD               __end_of_clcd_putch 0D1F               __end_of_clcd_write 0E48  
                     ?_init_clcd 0070            read_matrix_keypad@key 0076                set_time@blink_pos 002A  
                  set_temp@blink 0026                    set_time@blink 002C       __end_of_read_matrix_keypad 0D3A  
             __end_of__stringtab 0812                set_time@key_count 0078                      _init_config 0D3A  
                    _init_timer2 0D01                         __ptext10 0D0E                         __ptext11 0D56  
                       __ptext20 0F03                         __ptext12 0E48                         __ptext21 0E13  
                       __ptext13 0795                         __ptext22 03B0                         __ptext14 0DAD  
                       __ptext15 0D7D                         __ptext16 0D3A                         __ptext17 0D01  
                       __ptext18 07F0                         __ptext19 0CF8                      _mode_select 0702  
                    _scan_keypad 0F74                      ??_clear_dis 0077                         _set_temp 01EA  
                       _set_time 0024                         _time_dis 061F                         _power_on 0E95  
              _door_status_check 0DE0               ?_door_status_check 0070                        power_on@i 0052  
                       isr@count 0020                     set_temp@temp 0022                     set_temp@wait 0028  
                   set_time@wait 002E              ??_door_status_check 0077                      ??_init_clcd 0077  
                       intlevel1 0000                        stringcode 080A        __end_of_door_status_check 0E13  
                       stringtab 0800            __end_of_modes_display 0DE0  
